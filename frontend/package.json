{
  "type": "module",
  "name": "frontend",
  "version": "1.0.0",
  "description": "Frontend for A1Betting",
  "main": "index.js",
  "scripts": {
    "predev": "node check-dir.js",
    "dev": "vite --host 0.0.0.0 --port 5173",
    "dev:turbo": "vite --host 0.0.0.0 --port 5173 --force",
    "build": "vite build",
    "build:optimized": "vite build --config vite.config.optimized.ts",
    "build:analyze": "npm run build && npx vite-bundle-analyzer dist",
    "build:prod": "NODE_ENV=production npm run build:optimized",
    "preview": "vite preview --host 0.0.0.0 --port 4173",
    "pretest": "node check-dir.js",
    "test": "jest --config ./jest.config.cjs",
    "test:watch": "jest --config ./jest.config.cjs --watch",
    "test:coverage": "jest --config ./jest.config.cjs --coverage",
    "test:ci": "jest --config ./jest.config.cjs --ci --coverage --watchAll=false",
    "test:e2e": "playwright test",
    "test:e2e:ui": "playwright test --ui",
    "lint": "eslint src --ext .ts,.tsx --max-warnings 0",
    "lint:fix": "eslint src --ext .ts,.tsx --fix",
  "type-check": "tsc -p tsconfig.app.json --noEmit",
    "type-check:watch": "tsc --noEmit --watch",
    "check:legacy-ws": "powershell -Command \"Get-ChildItem src -Recurse -Include *.ts,*.tsx,*.js,*.jsx | Select-String -Pattern 'client_/ws' | Measure-Object | Select-Object -ExpandProperty Count\"",
    "check:model-metrics": "node ../scripts/detect-model-metrics-violations.js",
    "ci:ensure-no-legacy-ws": "powershell -Command \"$count = Get-ChildItem src -Recurse -Include *.ts,*.tsx,*.js,*.jsx | Where-Object { $_.FullName -notmatch 'test' -and $_.FullName -notmatch 'websocketBuilder' } | Select-String -Pattern 'client_/ws' | Measure-Object | Select-Object -ExpandProperty Count; if ($count -gt 0) { Write-Host 'Legacy WS path found in src (excluding tests/builder)'; Get-ChildItem src -Recurse -Include *.ts,*.tsx,*.js,*.jsx | Where-Object { $_.FullName -notmatch 'test' -and $_.FullName -notmatch 'websocketBuilder' } | Select-String -Pattern 'client_/ws'; exit 1 } else { Write-Host 'No legacy WS paths found in production code' }\"",
    "format": "prettier --write 'src/**/*.{ts,tsx,js,jsx,json,css,md}'",
    "format:check": "prettier --check 'src/**/*.{ts,tsx,js,jsx,json,css,md}'",
    "clean": "rm -rf dist node_modules/.vite",
    "clean:all": "rm -rf dist node_modules",
    "analyze": "npm run build && npx vite-bundle-analyzer dist",
    "bundle:analyze": "npm run build:optimized && node scripts/bundle-analyzer.js",
    "bundle:tree-shake": "node scripts/tree-shaking-optimizer.js",
    "bundle:optimize": "npm run bundle:tree-shake && npm run build:optimized && npm run bundle:analyze",
    "security": "npm audit --audit-level moderate",
    "security:fix": "npm audit fix",
    "deps:check": "npx npm-check-updates",
    "deps:update": "npx npm-check-updates -u && npm install",
    "perf:build": "npm run build && npx bundlesize",
    "perf:lighthouse": "npx lighthouse http://localhost:4173 --output-path=./lighthouse-report.html",
    "perf:vitals": "vite build --mode=vitals && vite preview --port=4174",
    "perf:analyze": "npm run build:analyze && npx webpack-bundle-analyzer dist/stats.json",
    "perf:monitor": "node scripts/performance-monitor.js",
    "docker:build": "docker build -f ../Dockerfile.frontend.optimized -t a1betting-frontend .",
    "docker:run": "docker run -p 80:80 a1betting-frontend",
    "validate": "npm run type-check && npm run lint && npm run test:ci",
    "audit:virtualization": "node ../scripts/audit-virtualization.cjs ./src",
    "prepare": "npx husky install || true",
    "postinstall": "echo 'Skipping type-check during install'"
  },
  "dependencies": {
    "@heroicons/react": "^2.2.0",
    "@radix-ui/react-label": "^2.1.7",
    "@radix-ui/react-slot": "^1.2.3",
    "@radix-ui/react-tabs": "^1.1.12",
    "@tanstack/react-query": "^5.83.0",
    "@tanstack/react-virtual": "^3.13.12",
    "@types/recharts": "^1.8.29",
    "axios": "^1.11.0",
    "chart.js": "^4.5.0",
    "class-variance-authority": "^0.7.1",
    "clsx": "^2.1.1",
    "crypto-js": "^4.2.0",
    "framer-motion": "^11.16.4",
    "immer": "^10.1.1",
    "lucide-react": "^0.525.0",
    "node-fetch": "^2.7.0",
    "react": "^19.1.0",
    "react-chartjs-2": "^5.3.0",
    "react-dom": "^19.1.0",
    "react-error-boundary": "^6.0.0",
    "react-hot-toast": "^2.5.2",
    "react-router-dom": "^7.7.1",
    "recharts": "^3.1.2",
    "tailwind-merge": "^3.3.1",
    "web-vitals": "^4.2.4",
    "zod": "^4.0.14",
    "zustand": "^5.0.7"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "devDependencies": {
    "@babel/preset-env": "^7.28.0",
    "@babel/preset-react": "^7.27.1",
    "@babel/preset-typescript": "^7.27.1",
    "@playwright/test": "^1.54.2",
    "@tailwindcss/postcss": "^4.1.11",
    "@testing-library/jest-dom": "^6.6.4",
    "@testing-library/react": "^16.3.0",
    "@testing-library/user-event": "^14.6.1",
    "@types/eventemitter3": "^1.2.0",
    "@types/express": "^5.0.3",
    "@types/jest": "^30.0.0",
    "@types/node": "^24.2.0",
    "@types/react": "^19.1.9",
    "@types/react-dom": "^19.1.7",
    "@typescript-eslint/eslint-plugin": "^8.39.0",
    "@typescript-eslint/parser": "^8.38.0",
    "@vitejs/plugin-react": "^4.7.0",
    "autoprefixer": "^10.4.21",
    "babel-jest": "^30.0.5",
    "babel-plugin-transform-import-meta": "^2.3.3",
    "babel-preset-vite": "^1.1.3",
    "cssnano": "^7.1.0",
    "eslint-plugin-react": "^7.37.5",
    "eslint-plugin-react-hooks": "^5.2.0",
    "identity-obj-proxy": "^3.0.0",
    "jest": "^30.0.5",
    "jest-environment-jsdom": "^30.0.5",
    "jest-fixed-jsdom": "^0.0.9",
    "jest-junit": "^16.0.0",
    "jest-localstorage-mock": "^2.4.26",
    "jest-transform-stub": "^2.0.0",
    "msw": "^2.10.4",
    "tailwindcss": "^4.1.11",
    "tsx": "^4.20.4",
    "typescript": "^5.9.2",
    "vite": "^7.1.2",
    "vite-plugin-html": "^3.2.2",
    "vite-tsconfig-paths": "^5.1.4",
    "vitest": "^3.2.4",
    "web-streams-polyfill": "^4.1.0",
    "whatwg-fetch": "^3.6.20"
  }
}
