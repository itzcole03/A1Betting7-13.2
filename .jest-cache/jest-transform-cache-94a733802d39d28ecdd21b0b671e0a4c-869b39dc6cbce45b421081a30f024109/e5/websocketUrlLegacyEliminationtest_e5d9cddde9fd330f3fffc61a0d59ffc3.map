{"version":3,"names":["_websocketBuilder","require","global","window","localStorage","location","protocol","hostname","port","describe","beforeEach","clear","setMockEnv","VITE_WS_URL","undefined","jest","spyOn","console","mockImplementation","afterEach","restoreAllMocks","test","testCases","clientId","baseUrl","role","version","forEach","options","url","buildWebSocketUrl","expect","not","toContain","validateWebSocketUrl","toBe","toMatch","DEV","mockEnv","originalURL","URL","mockURL","fn","Error","result","log","error","message","resolveWebSocketBase","warn","toHaveBeenCalledWith","stringContaining","toHaveBeenCalled","getOrPersistClientId","getItem","objectContaining","initialFromStorage","passedIn","finalClientId","setItem","passedId","expectedMax","currentDelay","delaySequence","attempt","push","Math","min","toEqual","max"],"sources":["websocketUrlLegacyElimination.test.ts"],"sourcesContent":["/**\r\n * WebSocket URL Legacy Elimination Tests\r\n * Ensures legacy 'client_/ws' path cannot be constructed\r\n */\r\n\r\nimport { \r\n  buildWebSocketUrl, \r\n  resolveWebSocketBase, \r\n  getOrPersistClientId, \r\n  validateWebSocketUrl,\r\n  setMockEnv,\r\n  mockEnv \r\n} from '../../utils/websocketBuilder.mock';\r\n\r\n// Mock global window if it doesn't exist\r\nif (typeof global.window === 'undefined') {\r\n  (global as any).window = {\r\n    localStorage: global.localStorage,\r\n    location: {\r\n      protocol: 'http:',\r\n      hostname: 'localhost',\r\n      port: '5173'\r\n    }\r\n  };\r\n} else {\r\n  // If window exists, ensure localStorage is available\r\n  if (typeof (global.window as any).localStorage === 'undefined') {\r\n    (global.window as any).localStorage = global.localStorage;\r\n  }\r\n}\r\n\r\ndescribe('WebSocket Legacy Elimination', () => {\r\n  \r\n  beforeEach(() => {\r\n    // Clear localStorage between tests\r\n    global.localStorage.clear();\r\n    // Clear environment\r\n    setMockEnv({ VITE_WS_URL: undefined });\r\n    // Mock console methods to avoid noise in tests\r\n    jest.spyOn(console, 'log').mockImplementation();\r\n    jest.spyOn(console, 'warn').mockImplementation();\r\n    jest.spyOn(console, 'error').mockImplementation();\r\n  });\r\n\r\n  afterEach(() => {\r\n    jest.restoreAllMocks();\r\n  });\r\n\r\n  describe('buildWebSocketUrl canonical builder', () => {\r\n    test('never returns URL containing client_/ws', () => {\r\n      // Test with various configurations\r\n      const testCases = [\r\n        {},\r\n        { clientId: 'test123' },\r\n        { baseUrl: 'ws://localhost:8000' },\r\n        { baseUrl: 'wss://production.com' },\r\n        { clientId: 'custom', role: 'admin', version: 2 }\r\n      ];\r\n\r\n      testCases.forEach(options => {\r\n        const url = buildWebSocketUrl(options);\r\n        expect(url).not.toContain('client_/ws');\r\n        expect(validateWebSocketUrl(url)).toBe(true);\r\n        expect(url).toMatch(/\\/ws\\/client\\?/); // Should contain canonical path\r\n      });\r\n    });\r\n\r\n    test('throws in development when legacy path detected', () => {\r\n      // Ensure we're in development mode\r\n      setMockEnv({ VITE_WS_URL: undefined, DEV: true });\r\n      \r\n      // Verify DEV is set\r\n      expect(mockEnv.DEV).toBe(true);\r\n      \r\n      // Mock the URL constructor to throw an error to trigger fallback\r\n      const originalURL = global.URL;\r\n      const mockURL = jest.fn().mockImplementation(() => {\r\n        throw new Error('Mock URL constructor error');\r\n      });\r\n      \r\n      global.URL = mockURL as any;\r\n      \r\n      try {\r\n        // Pass a baseUrl that contains legacy path - this will trigger fallback with legacy path\r\n        const result = buildWebSocketUrl({ \r\n          clientId: 'test',\r\n          baseUrl: 'ws://localhost:8000/client_/ws'\r\n        });\r\n        console.log('Function returned:', result);\r\n        // The function should have detected the legacy path in fallback and thrown an error\r\n        // If we get here, something went wrong\r\n        expect(result).toContain('client_/ws'); // This should show us what was actually returned\r\n      } catch (error) {\r\n        expect((error as Error).message).toContain('Legacy websocket path constructed');\r\n      } finally {\r\n        global.URL = originalURL;\r\n      }\r\n    });\r\n\r\n    test('generates correct canonical URLs', () => {\r\n      const url = buildWebSocketUrl({\r\n        clientId: 'test123',\r\n        role: 'frontend',\r\n        version: 1,\r\n        baseUrl: 'ws://localhost:8000'\r\n      });\r\n\r\n      expect(url).toBe('ws://localhost:8000/ws/client?client_id=test123&version=1&role=frontend');\r\n      expect(url).toContain('/ws/client?');\r\n      expect(url).not.toContain('client_/ws');\r\n    });\r\n  });\r\n\r\n  describe('Environment variable sanitization', () => {\r\n    test('sanitizes legacy path from VITE_WS_URL environment', () => {\r\n      // Set environment with legacy path\r\n      setMockEnv({ VITE_WS_URL: 'ws://localhost:8000/ws/client_/legacy' });\r\n      \r\n      const baseUrl = resolveWebSocketBase();\r\n      expect(baseUrl).not.toContain('client_/ws');\r\n      expect(baseUrl).toBe('ws://localhost:8000');\r\n      \r\n      // Should log warning about legacy environment\r\n      expect(console.warn).toHaveBeenCalledWith(\r\n        expect.stringContaining('[EnvDiag][LegacyInEnv]'),\r\n        'ws://localhost:8000/ws/client_/legacy'\r\n      );\r\n    });\r\n\r\n    test('handles environment without legacy path correctly', () => {\r\n      setMockEnv({ VITE_WS_URL: 'ws://localhost:8000' });\r\n      \r\n      const baseUrl = resolveWebSocketBase();\r\n      expect(baseUrl).toBe('ws://localhost:8000');\r\n      expect(console.warn).not.toHaveBeenCalled();\r\n    });\r\n  });\r\n\r\n  describe('Client ID persistence', () => {\r\n    test('creates and persists new client ID when none exists', () => {\r\n      const clientId = getOrPersistClientId('test_key');\r\n      \r\n      expect(clientId).toMatch(/^client_[a-zA-Z0-9]{9}$/);\r\n      expect(global.localStorage.getItem('test_key')).toBe(clientId);\r\n      \r\n      // Should log diagnostic info in dev mode\r\n      expect(console.log).toHaveBeenCalledWith(\r\n        '[ClientIdDiag]',\r\n        expect.objectContaining({\r\n          initialFromStorage: false,\r\n          passedIn: false,\r\n          finalClientId: clientId\r\n        })\r\n      );\r\n    });\r\n\r\n    test('reuses existing client ID from storage', () => {\r\n      global.localStorage.setItem('existing_key', 'stored_client_id');\r\n      \r\n      const clientId = getOrPersistClientId('existing_key');\r\n      \r\n      expect(clientId).toBe('stored_client_id');\r\n      expect(console.log).toHaveBeenCalledWith(\r\n        '[ClientIdDiag]',\r\n        expect.objectContaining({\r\n          initialFromStorage: true,\r\n          passedIn: false,\r\n          finalClientId: 'stored_client_id'\r\n        })\r\n      );\r\n    });\r\n\r\n    test('prefers passed client ID but still persists it', () => {\r\n      const passedId = 'custom_client_123';\r\n      const clientId = getOrPersistClientId('persist_key', passedId);\r\n      \r\n      expect(clientId).toBe(passedId);\r\n      expect(global.localStorage.getItem('persist_key')).toBe(passedId);\r\n    });\r\n  });\r\n\r\n  describe('URL validation', () => {\r\n    test('validateWebSocketUrl correctly identifies legacy URLs', () => {\r\n      expect(validateWebSocketUrl('ws://localhost:8000/ws/client')).toBe(true);\r\n      expect(validateWebSocketUrl('ws://localhost:8000/client_/ws/test')).toBe(false);\r\n      expect(validateWebSocketUrl('wss://prod.com/ws/client?id=123')).toBe(true);\r\n      expect(validateWebSocketUrl('ws://dev.local/some/client_/ws/path')).toBe(false);\r\n    });\r\n  });\r\n\r\n  describe('Reconnection backoff capping integration', () => {\r\n    test('mock reconnection delay sequence caps at expected max', () => {\r\n      // This test mocks the backoff strategy to verify max delay\r\n      const expectedMax = 16000;\r\n      \r\n      // Simulate sequential failures\r\n      let currentDelay = 1000;\r\n      const delaySequence: number[] = [];\r\n      \r\n      // Mock exponential backoff with cap\r\n      for (let attempt = 0; attempt < 8; attempt++) {\r\n        delaySequence.push(currentDelay);\r\n        currentDelay = Math.min(currentDelay * 2, expectedMax);\r\n      }\r\n      \r\n      // Verify sequence caps correctly\r\n      expect(delaySequence).toEqual([1000, 2000, 4000, 8000, 16000, 16000, 16000, 16000]);\r\n      expect(Math.max(...delaySequence)).toBe(expectedMax);\r\n    });\r\n  });\r\n\r\n  describe('Integration with legacy detection', () => {\r\n    test('full URL construction flow prevents legacy path', () => {\r\n      // Test complete flow: env resolution → client ID → URL building → validation\r\n      setMockEnv({ VITE_WS_URL: 'ws://localhost:8000' }); // Clean environment\r\n      \r\n      const url = buildWebSocketUrl();\r\n      \r\n      expect(validateWebSocketUrl(url)).toBe(true);\r\n      expect(url).toMatch(/^ws:\\/\\/localhost:8000\\/ws\\/client\\?client_id=client_[a-zA-Z0-9]{9}&version=1&role=frontend$/);\r\n      expect(url).not.toContain('client_/ws');\r\n    });\r\n  });\r\n});"],"mappings":"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","ignoreList":[]}