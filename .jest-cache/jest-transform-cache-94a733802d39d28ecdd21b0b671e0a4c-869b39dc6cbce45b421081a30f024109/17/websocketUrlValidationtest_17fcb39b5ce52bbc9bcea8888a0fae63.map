{"version":3,"names":["_websocketBuilder","require","describe","beforeEach","jest","spyOn","console","mockImplementation","afterEach","restoreAllMocks","test","expect","validateWebSocketUrl","toBe","expectedMax","currentDelay","delaySequence","attempt","push","Math","min","toEqual","max","canonicalPattern","legacyPattern","canonicalUrl","legacyUrl","toMatch","not","legacyEnvUrl","expectedSanitized","sanitized","replace","toContain","testCases","text","shouldMatch","forEach","matches","problematicPatterns","pattern","goodPatterns"],"sources":["websocketUrlValidation.test.ts"],"sourcesContent":["/**\r\n * Simplified WebSocket URL Legacy Elimination Tests\r\n * Focus on core functionality verification\r\n */\r\n\r\nimport { validateWebSocketUrl } from '../../utils/websocketBuilder.mock';\r\n\r\ndescribe('WebSocket Legacy Elimination', () => {\r\n  beforeEach(() => {\r\n    // Mock console methods to avoid noise in tests\r\n    jest.spyOn(console, 'log').mockImplementation();\r\n    jest.spyOn(console, 'warn').mockImplementation();\r\n    jest.spyOn(console, 'error').mockImplementation();\r\n  });\r\n\r\n  afterEach(() => {\r\n    jest.restoreAllMocks();\r\n  });\r\n\r\n  describe('URL validation', () => {\r\n    test('validateWebSocketUrl correctly identifies legacy URLs', () => {\r\n      // Valid canonical URLs\r\n      expect(validateWebSocketUrl('ws://localhost:8000/ws/client?client_id=abc')).toBe(true);\r\n      expect(validateWebSocketUrl('wss://prod.com/ws/client?id=123')).toBe(true);\r\n      \r\n      // Invalid legacy URLs\r\n      expect(validateWebSocketUrl('ws://localhost:8000/client_/ws/test')).toBe(false);\r\n      expect(validateWebSocketUrl('ws://dev.local/some/client_/ws/path')).toBe(false);\r\n    });\r\n  });\r\n\r\n  describe('Reconnection backoff capping integration', () => {\r\n    test('mock reconnection delay sequence caps at expected max', () => {\r\n      // This test verifies exponential backoff caps at expected max\r\n      const expectedMax = 16000;\r\n      \r\n      // Simulate sequential failures with exponential backoff\r\n      let currentDelay = 1000;\r\n      const delaySequence: number[] = [];\r\n      \r\n      // Mock exponential backoff with cap\r\n      for (let attempt = 0; attempt < 8; attempt++) {\r\n        delaySequence.push(currentDelay);\r\n        currentDelay = Math.min(currentDelay * 2, expectedMax);\r\n      }\r\n      \r\n      // Verify sequence caps correctly at 16s\r\n      expect(delaySequence).toEqual([1000, 2000, 4000, 8000, 16000, 16000, 16000, 16000]);\r\n      expect(Math.max(...delaySequence)).toBe(expectedMax);\r\n    });\r\n  });\r\n\r\n  describe('URL construction validation', () => {\r\n    test('canonical URL format is enforced', () => {\r\n      // Test that URLs follow the correct pattern\r\n      const canonicalPattern = /\\/ws\\/client\\?/;\r\n      const legacyPattern = /client_\\/ws/;\r\n      \r\n      // Examples of what should be generated\r\n      const canonicalUrl = 'ws://localhost:8000/ws/client?client_id=abc&version=1&role=frontend';\r\n      const legacyUrl = 'ws://localhost:8000/client_/ws/client_abc';\r\n      \r\n      expect(canonicalUrl).toMatch(canonicalPattern);\r\n      expect(canonicalUrl).not.toMatch(legacyPattern);\r\n      \r\n      expect(legacyUrl).toMatch(legacyPattern);\r\n      expect(legacyUrl).not.toMatch(canonicalPattern);\r\n      \r\n      // URL validation function should catch this\r\n      expect(validateWebSocketUrl(canonicalUrl)).toBe(true);\r\n      expect(validateWebSocketUrl(legacyUrl)).toBe(false);\r\n    });\r\n\r\n    test('environment variable sanitization concept', () => {\r\n      // Test the concept of sanitizing legacy environment paths\r\n      const legacyEnvUrl = 'ws://localhost:8000/ws/client_/legacy';\r\n      const expectedSanitized = 'ws://localhost:8000';\r\n      \r\n      // Simulate the sanitization logic\r\n      const sanitized = legacyEnvUrl.replace(/\\/client_\\/ws.*$/, '').replace(/\\/ws\\/client_.*$/, '');\r\n      \r\n      expect(sanitized).toBe(expectedSanitized);\r\n      expect(sanitized).not.toContain('client_/ws');\r\n    });\r\n  });\r\n\r\n  describe('CI integration validation', () => {\r\n    test('legacy path detection patterns work correctly', () => {\r\n      // Test strings that should be caught by CI guards\r\n      const testCases = [\r\n        { text: 'const url = \"client_/ws/test\"', shouldMatch: true },\r\n        { text: 'ws://localhost:8000/client_/ws/client_123', shouldMatch: true },\r\n        { text: 'const url = \"/ws/client?id=123\"', shouldMatch: false },\r\n        { text: 'ws://localhost:8000/ws/client', shouldMatch: false }\r\n      ];\r\n      \r\n      const legacyPattern = /client_\\/ws/;\r\n      \r\n      testCases.forEach(({ text, shouldMatch }) => {\r\n        const matches = legacyPattern.test(text);\r\n        expect(matches).toBe(shouldMatch);\r\n      });\r\n    });\r\n  });\r\n\r\n  describe('Production safety checks', () => {\r\n    test('no hardcoded legacy paths in production patterns', () => {\r\n      // Patterns that would be problematic in production code\r\n      const problematicPatterns = [\r\n        'client_/ws/client_',\r\n        '/client_/ws/',\r\n        'client_/ws/client_${clientId}'\r\n      ];\r\n      \r\n      // These should all fail validation\r\n      problematicPatterns.forEach(pattern => {\r\n        expect(validateWebSocketUrl(pattern)).toBe(false);\r\n      });\r\n    });\r\n    \r\n    test('canonical patterns pass validation', () => {\r\n      // Patterns that should be allowed\r\n      const goodPatterns = [\r\n        'ws://localhost:8000/ws/client?client_id=abc',\r\n        'wss://production.com/ws/client?client_id=xyz&version=1',\r\n        'ws://dev.local/ws/client?client_id=test&role=admin'\r\n      ];\r\n      \r\n      // These should all pass validation\r\n      goodPatterns.forEach(pattern => {\r\n        expect(validateWebSocketUrl(pattern)).toBe(true);\r\n      });\r\n    });\r\n  });\r\n});"],"mappings":"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","ignoreList":[]}