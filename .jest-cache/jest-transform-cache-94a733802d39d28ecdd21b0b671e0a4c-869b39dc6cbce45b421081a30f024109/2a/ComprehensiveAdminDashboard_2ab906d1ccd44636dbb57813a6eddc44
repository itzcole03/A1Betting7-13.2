b5d13b0432f8697d09033e8f208884b8
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = _interopRequireDefault(require("react"));
var _useAIInsights = require("../../hooks/useAIInsights");
var _useEnhancedBets = require("../../hooks/useEnhancedBets");
var _usePortfolioOptimization = require("../../hooks/usePortfolioOptimization");
var _jsxRuntime = require("react/jsx-runtime");
const ComprehensiveAdminDashboard = () => {
  const {
    isLoading: betsLoading,
    isError: betsError,
    data: betsData
  } = (0, _useEnhancedBets.useEnhancedBets)();
  const {
    isLoading: portLoading,
    isError: portError
  } = (0, _usePortfolioOptimization.usePortfolioOptimization)();
  const {
    isLoading: aiLoading,
    isError: aiError,
    data: aiData
  } = (0, _useAIInsights.useAIInsights)();
  if (betsLoading || portLoading || aiLoading) {
    return /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
      role: "status",
      children: "Loading AI-powered betting intelligence"
    });
  }
  if (betsError || portError || aiError) {
    return /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
      role: "alert",
      children: "Error loading data"
    });
  }

  // Defensive: default to empty arrays if data is not present or not shaped as expected
  const enhancedBets = Array.isArray(betsData?.enhanced_bets) ? betsData.enhanced_bets : [];
  const aiInsights = Array.isArray(aiData?.ai_insights) ? aiData.ai_insights : [];
  return /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
    children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
      children: "Enhanced Bets"
    }), /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
      children: enhancedBets.length > 0 ? /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
        children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("span", {
          children: "Select Bet for Analysis"
        }), /*#__PURE__*/(0, _jsxRuntime.jsx)("ul", {
          children: enhancedBets.map(bet => /*#__PURE__*/(0, _jsxRuntime.jsxs)("li", {
            children: [bet.player_name, " - ", bet.sport || bet.team, " - ", bet.stat_type || '', " -", ' ', bet.line || '', " - ", bet.confidence || '', bet.recommendation ? /*#__PURE__*/(0, _jsxRuntime.jsxs)("span", {
              children: [" - ", bet.recommendation]
            }) : null]
          }, bet.bet_id || bet.id))
        })]
      }) : null
    }), /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
      children: aiInsights.length > 0 ? /*#__PURE__*/(0, _jsxRuntime.jsx)("ul", {
        children: aiInsights.map(insight => /*#__PURE__*/(0, _jsxRuntime.jsxs)("li", {
          children: [insight.player_name, " - ", insight.quantum_analysis]
        }, insight.bet_id))
      }) : null
    })]
  });
};
var _default = exports.default = ComprehensiveAdminDashboard;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl91c2VBSUluc2lnaHRzIiwiX3VzZUVuaGFuY2VkQmV0cyIsIl91c2VQb3J0Zm9saW9PcHRpbWl6YXRpb24iLCJfanN4UnVudGltZSIsIkNvbXByZWhlbnNpdmVBZG1pbkRhc2hib2FyZCIsImlzTG9hZGluZyIsImJldHNMb2FkaW5nIiwiaXNFcnJvciIsImJldHNFcnJvciIsImRhdGEiLCJiZXRzRGF0YSIsInVzZUVuaGFuY2VkQmV0cyIsInBvcnRMb2FkaW5nIiwicG9ydEVycm9yIiwidXNlUG9ydGZvbGlvT3B0aW1pemF0aW9uIiwiYWlMb2FkaW5nIiwiYWlFcnJvciIsImFpRGF0YSIsInVzZUFJSW5zaWdodHMiLCJqc3giLCJyb2xlIiwiY2hpbGRyZW4iLCJlbmhhbmNlZEJldHMiLCJBcnJheSIsImlzQXJyYXkiLCJlbmhhbmNlZF9iZXRzIiwiYWlJbnNpZ2h0cyIsImFpX2luc2lnaHRzIiwianN4cyIsImxlbmd0aCIsIm1hcCIsImJldCIsInBsYXllcl9uYW1lIiwic3BvcnQiLCJ0ZWFtIiwic3RhdF90eXBlIiwibGluZSIsImNvbmZpZGVuY2UiLCJyZWNvbW1lbmRhdGlvbiIsImJldF9pZCIsImlkIiwiaW5zaWdodCIsInF1YW50dW1fYW5hbHlzaXMiLCJfZGVmYXVsdCIsImV4cG9ydHMiLCJkZWZhdWx0Il0sInNvdXJjZXMiOlsiQ29tcHJlaGVuc2l2ZUFkbWluRGFzaGJvYXJkLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgeyB1c2VBSUluc2lnaHRzIH0gZnJvbSAnLi4vLi4vaG9va3MvdXNlQUlJbnNpZ2h0cyc7XHJcbmltcG9ydCB7IHVzZUVuaGFuY2VkQmV0cyB9IGZyb20gJy4uLy4uL2hvb2tzL3VzZUVuaGFuY2VkQmV0cyc7XHJcbmltcG9ydCB7IHVzZVBvcnRmb2xpb09wdGltaXphdGlvbiB9IGZyb20gJy4uLy4uL2hvb2tzL3VzZVBvcnRmb2xpb09wdGltaXphdGlvbic7XHJcblxyXG5jb25zdCBDb21wcmVoZW5zaXZlQWRtaW5EYXNoYm9hcmQ6IFJlYWN0LkZDID0gKCkgPT4ge1xyXG4gIGNvbnN0IHsgaXNMb2FkaW5nOiBiZXRzTG9hZGluZywgaXNFcnJvcjogYmV0c0Vycm9yLCBkYXRhOiBiZXRzRGF0YSB9ID0gdXNlRW5oYW5jZWRCZXRzKCk7XHJcbiAgY29uc3QgeyBpc0xvYWRpbmc6IHBvcnRMb2FkaW5nLCBpc0Vycm9yOiBwb3J0RXJyb3IgfSA9IHVzZVBvcnRmb2xpb09wdGltaXphdGlvbigpO1xyXG4gIGNvbnN0IHsgaXNMb2FkaW5nOiBhaUxvYWRpbmcsIGlzRXJyb3I6IGFpRXJyb3IsIGRhdGE6IGFpRGF0YSB9ID0gdXNlQUlJbnNpZ2h0cygpO1xyXG5cclxuICBpZiAoYmV0c0xvYWRpbmcgfHwgcG9ydExvYWRpbmcgfHwgYWlMb2FkaW5nKSB7XHJcbiAgICByZXR1cm4gPGRpdiByb2xlPSdzdGF0dXMnPkxvYWRpbmcgQUktcG93ZXJlZCBiZXR0aW5nIGludGVsbGlnZW5jZTwvZGl2PjtcclxuICB9XHJcbiAgaWYgKGJldHNFcnJvciB8fCBwb3J0RXJyb3IgfHwgYWlFcnJvcikge1xyXG4gICAgcmV0dXJuIDxkaXYgcm9sZT0nYWxlcnQnPkVycm9yIGxvYWRpbmcgZGF0YTwvZGl2PjtcclxuICB9XHJcblxyXG4gIC8vIERlZmVuc2l2ZTogZGVmYXVsdCB0byBlbXB0eSBhcnJheXMgaWYgZGF0YSBpcyBub3QgcHJlc2VudCBvciBub3Qgc2hhcGVkIGFzIGV4cGVjdGVkXHJcbiAgY29uc3QgZW5oYW5jZWRCZXRzID0gQXJyYXkuaXNBcnJheSgoYmV0c0RhdGEgYXMgYW55KT8uZW5oYW5jZWRfYmV0cylcclxuICAgID8gKGJldHNEYXRhIGFzIGFueSkuZW5oYW5jZWRfYmV0c1xyXG4gICAgOiBbXTtcclxuICBjb25zdCBhaUluc2lnaHRzID0gQXJyYXkuaXNBcnJheSgoYWlEYXRhIGFzIGFueSk/LmFpX2luc2lnaHRzKSA/IChhaURhdGEgYXMgYW55KS5haV9pbnNpZ2h0cyA6IFtdO1xyXG5cclxuICByZXR1cm4gKFxyXG4gICAgPGRpdj5cclxuICAgICAgPGRpdj5FbmhhbmNlZCBCZXRzPC9kaXY+XHJcbiAgICAgIDxkaXY+XHJcbiAgICAgICAge2VuaGFuY2VkQmV0cy5sZW5ndGggPiAwID8gKFxyXG4gICAgICAgICAgPGRpdj5cclxuICAgICAgICAgICAgPHNwYW4+U2VsZWN0IEJldCBmb3IgQW5hbHlzaXM8L3NwYW4+XHJcbiAgICAgICAgICAgIDx1bD5cclxuICAgICAgICAgICAgICB7ZW5oYW5jZWRCZXRzLm1hcCgoYmV0OiBhbnkpID0+IChcclxuICAgICAgICAgICAgICAgIDxsaSBrZXk9e2JldC5iZXRfaWQgfHwgYmV0LmlkfT5cclxuICAgICAgICAgICAgICAgICAge2JldC5wbGF5ZXJfbmFtZX0gLSB7YmV0LnNwb3J0IHx8IGJldC50ZWFtfSAtIHtiZXQuc3RhdF90eXBlIHx8ICcnfSAteycgJ31cclxuICAgICAgICAgICAgICAgICAge2JldC5saW5lIHx8ICcnfSAtIHtiZXQuY29uZmlkZW5jZSB8fCAnJ31cclxuICAgICAgICAgICAgICAgICAge2JldC5yZWNvbW1lbmRhdGlvbiA/IDxzcGFuPiAtIHtiZXQucmVjb21tZW5kYXRpb259PC9zcGFuPiA6IG51bGx9XHJcbiAgICAgICAgICAgICAgICA8L2xpPlxyXG4gICAgICAgICAgICAgICkpfVxyXG4gICAgICAgICAgICA8L3VsPlxyXG4gICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgKSA6IG51bGx9XHJcbiAgICAgIDwvZGl2PlxyXG4gICAgICA8ZGl2PlxyXG4gICAgICAgIHthaUluc2lnaHRzLmxlbmd0aCA+IDAgPyAoXHJcbiAgICAgICAgICA8dWw+XHJcbiAgICAgICAgICAgIHthaUluc2lnaHRzLm1hcCgoaW5zaWdodDogYW55KSA9PiAoXHJcbiAgICAgICAgICAgICAgPGxpIGtleT17aW5zaWdodC5iZXRfaWR9PlxyXG4gICAgICAgICAgICAgICAge2luc2lnaHQucGxheWVyX25hbWV9IC0ge2luc2lnaHQucXVhbnR1bV9hbmFseXNpc31cclxuICAgICAgICAgICAgICA8L2xpPlxyXG4gICAgICAgICAgICApKX1cclxuICAgICAgICAgIDwvdWw+XHJcbiAgICAgICAgKSA6IG51bGx9XHJcbiAgICAgIDwvZGl2PlxyXG4gICAgPC9kaXY+XHJcbiAgKTtcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IENvbXByZWhlbnNpdmVBZG1pbkRhc2hib2FyZDtcclxuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUEsSUFBQUEsTUFBQSxHQUFBQyxzQkFBQSxDQUFBQyxPQUFBO0FBQ0EsSUFBQUMsY0FBQSxHQUFBRCxPQUFBO0FBQ0EsSUFBQUUsZ0JBQUEsR0FBQUYsT0FBQTtBQUNBLElBQUFHLHlCQUFBLEdBQUFILE9BQUE7QUFBZ0YsSUFBQUksV0FBQSxHQUFBSixPQUFBO0FBRWhGLE1BQU1LLDJCQUFxQyxHQUFHQSxDQUFBLEtBQU07RUFDbEQsTUFBTTtJQUFFQyxTQUFTLEVBQUVDLFdBQVc7SUFBRUMsT0FBTyxFQUFFQyxTQUFTO0lBQUVDLElBQUksRUFBRUM7RUFBUyxDQUFDLEdBQUcsSUFBQUMsZ0NBQWUsRUFBQyxDQUFDO0VBQ3hGLE1BQU07SUFBRU4sU0FBUyxFQUFFTyxXQUFXO0lBQUVMLE9BQU8sRUFBRU07RUFBVSxDQUFDLEdBQUcsSUFBQUMsa0RBQXdCLEVBQUMsQ0FBQztFQUNqRixNQUFNO0lBQUVULFNBQVMsRUFBRVUsU0FBUztJQUFFUixPQUFPLEVBQUVTLE9BQU87SUFBRVAsSUFBSSxFQUFFUTtFQUFPLENBQUMsR0FBRyxJQUFBQyw0QkFBYSxFQUFDLENBQUM7RUFFaEYsSUFBSVosV0FBVyxJQUFJTSxXQUFXLElBQUlHLFNBQVMsRUFBRTtJQUMzQyxvQkFBTyxJQUFBWixXQUFBLENBQUFnQixHQUFBO01BQUtDLElBQUksRUFBQyxRQUFRO01BQUFDLFFBQUEsRUFBQztJQUF1QyxDQUFLLENBQUM7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