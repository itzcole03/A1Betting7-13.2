{"file":"C:\\Users\\bcmad\\Downloads\\A1Betting7-13.2\\frontend\\src\\services\\authService.ts","mappings":"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","names":[],"sources":["C:\\Users\\bcmad\\Downloads\\A1Betting7-13.2\\frontend\\src\\services\\authService.ts"],"sourcesContent":["// frontend/src/services/AuthService.ts\r\nimport axios from 'axios';\r\n\r\nconst _API_URL = 'http://localhost:8000/api/auth';\r\n\r\nexport interface User {\r\n  id: string;\r\n  email: string;\r\n  role: string;\r\n  permissions?: string[];\r\n}\r\n\r\nexport interface PasswordChangeRequest {\r\n  userId: string;\r\n  oldPassword?: string;\r\n  newPassword?: string;\r\n}\r\n\r\nexport interface AuthResponse {\r\n  success: boolean;\r\n  user?: User;\r\n  message?: string;\r\n  requiresPasswordChange?: boolean;\r\n}\r\n\r\nclass AuthService {\r\n  private user: User | null = null;\r\n  private token: string | null = null;\r\n  private requiresPasswordChangeFlag = false;\r\n\r\n  constructor() {\r\n    this.loadFromLocalStorage();\r\n  }\r\n\r\n  private loadFromLocalStorage() {\r\n    const _token = localStorage.getItem('token');\r\n    const _user = localStorage.getItem('user');\r\n    if (_token && _user) {\r\n      this.token = _token;\r\n      this.user = JSON.parse(_user);\r\n      axios.defaults.headers.common['Authorization'] = `Bearer ${this.token}`;\r\n    }\r\n  }\r\n\r\n  private saveToLocalStorage(token: string, user: User) {\r\n    this.token = token;\r\n    this.user = user;\r\n    localStorage.setItem('token', token);\r\n    localStorage.setItem('user', JSON.stringify(user));\r\n    axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n  }\r\n\r\n  private clearLocalStorage() {\r\n    this.token = null;\r\n    this.user = null;\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n    delete axios.defaults.headers.common['Authorization'];\r\n  }\r\n\r\n  isAuthenticated(): boolean {\r\n    return !!this.token;\r\n  }\r\n\r\n  getUser(): User | null {\r\n    return this.user;\r\n  }\r\n\r\n  isAdmin(): boolean {\r\n    return this.user?.role === 'admin';\r\n  }\r\n\r\n  requiresPasswordChange(): boolean {\r\n    return this.requiresPasswordChangeFlag;\r\n  }\r\n\r\n  async login(email: string, password: string): Promise<AuthResponse> {\r\n    try {\r\n      const _response = await axios.post(\r\n        `${_API_URL}/login`,\r\n        {\r\n          email,\r\n          password,\r\n        },\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      );\r\n\r\n      if (_response.data.access_token) {\r\n        const _user: User = { id: '1', email, role: 'admin' };\r\n        this.saveToLocalStorage(_response.data.access_token, _user);\r\n        return { success: true, user: _user, requiresPasswordChange: false };\r\n      }\r\n      return { success: false, message: 'Invalid credentials' };\r\n    } catch (error) {\r\n      console.error('Login API error:', error);\r\n      return {\r\n        success: false,\r\n        message: (error as Error).message || 'Login failed due to API error',\r\n      };\r\n    }\r\n  }\r\n\r\n  async logout(): Promise<void> {\r\n    this.clearLocalStorage();\r\n    return Promise.resolve();\r\n  }\r\n\r\n  async changePassword(data: PasswordChangeRequest): Promise<AuthResponse> {\r\n    try {\r\n      console.log(`Changing password for user ${data.userId}`);\r\n      this.requiresPasswordChangeFlag = false;\r\n      return { success: true };\r\n    } catch (error) {\r\n      console.error('Change password API error:', error);\r\n      return {\r\n        success: false,\r\n        message: (error as Error).message || 'Password change failed due to API error',\r\n      };\r\n    }\r\n  }\r\n}\r\n\r\nexport const _authService = new AuthService();\r\n"],"version":3}