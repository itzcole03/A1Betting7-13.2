{"version":3,"names":["_react","require","debounce","func","delay","timeoutId","debouncedFunction","args","clearTimeout","setTimeout","cancel","useOptimizedDataFetching","fetchFunction","dependencies","options","debounceDelay","cacheTime","autoRefresh","refreshInterval","maxRetries","data","setData","useState","loading","setLoading","error","setError","cacheRef","useRef","Map","abortControllerRef","intervalRef","retryCountRef","cacheKey","JSON","stringify","getCachedData","useCallback","cached","current","get","Date","now","expires","setCachedData","newData","set","timestamp","fetchData","isRetry","cachedData","abort","AbortController","result","signal","aborted","err","errorMessage","Error","message","console","warn","debouncedFetch","useEffect","setInterval","clearInterval","refresh","delete","isStale"],"sources":["useOptimizedDataFetching.ts"],"sourcesContent":["import { useCallback, useEffect, useRef, useState } from 'react';\r\n\r\n// Custom debounce implementation since lodash might not be available\r\nfunction debounce<T extends (...args: any[]) => any>(\r\n  func: T,\r\n  delay: number\r\n): T & { cancel: () => void } {\r\n  let timeoutId: NodeJS.Timeout | null = null;\r\n\r\n  const debouncedFunction = ((...args: Parameters<T>) => {\r\n    if (timeoutId) {\r\n      clearTimeout(timeoutId);\r\n    }\r\n    timeoutId = setTimeout(() => func(...args), delay);\r\n  }) as T & { cancel: () => void };\r\n\r\n  debouncedFunction.cancel = () => {\r\n    if (timeoutId) {\r\n      clearTimeout(timeoutId);\r\n      timeoutId = null;\r\n    }\r\n  };\r\n\r\n  return debouncedFunction;\r\n}\r\n\r\ninterface DataFetchingOptions {\r\n  debounceDelay?: number;\r\n  cacheTime?: number;\r\n  autoRefresh?: boolean;\r\n  refreshInterval?: number;\r\n  maxRetries?: number;\r\n}\r\n\r\ninterface CacheEntry<T> {\r\n  data: T;\r\n  timestamp: number;\r\n  expires: number;\r\n}\r\n\r\n/**\r\n * Optimized data fetching hook with debouncing, caching, and proper cleanup\r\n * to prevent unnecessary re-renders and improve performance.\r\n */\r\nexport function useOptimizedDataFetching<T>(\r\n  fetchFunction: () => Promise<T>,\r\n  dependencies: readonly unknown[],\r\n  options: DataFetchingOptions = {}\r\n) {\r\n  const {\r\n    debounceDelay = 300,\r\n    cacheTime = 5 * 60 * 1000, // 5 minutes\r\n    autoRefresh = false,\r\n    refreshInterval = 30000, // 30 seconds\r\n    maxRetries = 3,\r\n  } = options;\r\n\r\n  const [data, setData] = useState<T | null>(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n  \r\n  const cacheRef = useRef<Map<string, CacheEntry<T>>>(new Map());\r\n  const abortControllerRef = useRef<AbortController | null>(null);\r\n  const intervalRef = useRef<NodeJS.Timeout | null>(null);\r\n  const retryCountRef = useRef(0);\r\n\r\n  // Create cache key from dependencies\r\n  const cacheKey = JSON.stringify(dependencies);\r\n\r\n  // Check cache for existing data\r\n  const getCachedData = useCallback(() => {\r\n    const cached = cacheRef.current.get(cacheKey);\r\n    if (cached && Date.now() < cached.expires) {\r\n      return cached.data;\r\n    }\r\n    return null;\r\n  }, [cacheKey]);\r\n\r\n  // Store data in cache\r\n  const setCachedData = useCallback((newData: T) => {\r\n    cacheRef.current.set(cacheKey, {\r\n      data: newData,\r\n      timestamp: Date.now(),\r\n      expires: Date.now() + cacheTime,\r\n    });\r\n  }, [cacheKey, cacheTime]);\r\n\r\n  // Fetch data with proper error handling and retries\r\n  const fetchData = useCallback(async (isRetry = false) => {\r\n    // Check cache first\r\n    const cachedData = getCachedData();\r\n    if (cachedData && !isRetry) {\r\n      setData(cachedData);\r\n      setError(null);\r\n      return;\r\n    }\r\n\r\n    // Cancel any ongoing request\r\n    if (abortControllerRef.current) {\r\n      abortControllerRef.current.abort();\r\n    }\r\n\r\n    abortControllerRef.current = new AbortController();\r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      const result = await fetchFunction();\r\n      \r\n      // Check if request was aborted\r\n      if (abortControllerRef.current?.signal.aborted) {\r\n        return;\r\n      }\r\n\r\n      setData(result);\r\n      setCachedData(result);\r\n      retryCountRef.current = 0;\r\n    } catch (err) {\r\n      // Check if request was aborted\r\n      if (abortControllerRef.current?.signal.aborted) {\r\n        return;\r\n      }\r\n\r\n      const errorMessage = err instanceof Error ? err.message : 'Unknown error';\r\n      \r\n      // Retry logic\r\n      if (retryCountRef.current < maxRetries) {\r\n        retryCountRef.current++;\r\n        console.warn(`Data fetch failed, retrying (${retryCountRef.current}/${maxRetries}):`, errorMessage);\r\n        setTimeout(() => fetchData(true), 1000 * retryCountRef.current);\r\n        return;\r\n      }\r\n\r\n      setError(errorMessage);\r\n      console.error('Data fetch failed after all retries:', err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [fetchFunction, getCachedData, setCachedData, maxRetries]);\r\n\r\n  // Debounced fetch function\r\n  const debouncedFetch = useCallback(\r\n    debounce(() => fetchData(), debounceDelay),\r\n    [fetchData, debounceDelay]\r\n  );\r\n\r\n  // Effect to trigger data fetching when dependencies change\r\n  useEffect(() => {\r\n    debouncedFetch();\r\n\r\n    // Cleanup debounced function on dependency change\r\n    return () => {\r\n      debouncedFetch.cancel();\r\n    };\r\n  }, [debouncedFetch, ...dependencies]);\r\n\r\n  // Auto-refresh effect\r\n  useEffect(() => {\r\n    if (!autoRefresh) return;\r\n\r\n    intervalRef.current = setInterval(() => {\r\n      fetchData();\r\n    }, refreshInterval);\r\n\r\n    return () => {\r\n      if (intervalRef.current) {\r\n        clearInterval(intervalRef.current);\r\n      }\r\n    };\r\n  }, [autoRefresh, refreshInterval, fetchData]);\r\n\r\n  // Cleanup on unmount\r\n  useEffect(() => {\r\n    return () => {\r\n      if (abortControllerRef.current) {\r\n        abortControllerRef.current.abort();\r\n      }\r\n      if (intervalRef.current) {\r\n        clearInterval(intervalRef.current);\r\n      }\r\n      debouncedFetch.cancel();\r\n    };\r\n  }, []);\r\n\r\n  // Manual refresh function\r\n  const refresh = useCallback(() => {\r\n    // Clear cache for this key\r\n    cacheRef.current.delete(cacheKey);\r\n    fetchData();\r\n  }, [cacheKey, fetchData]);\r\n\r\n  return {\r\n    data,\r\n    loading,\r\n    error,\r\n    refresh,\r\n    isStale: data ? Date.now() - (cacheRef.current.get(cacheKey)?.timestamp || 0) > cacheTime : false,\r\n  };\r\n}\r\n"],"mappings":"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","ignoreList":[]}