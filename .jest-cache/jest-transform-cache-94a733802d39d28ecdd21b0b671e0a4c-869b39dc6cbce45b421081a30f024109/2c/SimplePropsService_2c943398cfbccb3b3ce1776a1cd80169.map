{"version":3,"names":["fetchPropsSimple","sport","marketType","options","limit","offset","statTypes","console","log","endpoint","params","URLSearchParams","append","toString","length","join","url","response","fetch","ok","Error","status","statusText","rawData","json","props","Array","isArray","map","item","id","player_name","stat_type","player","away_team","home_team","matchup","event_name","stat","market_type","line","parseFloat","line_score","overOdds","over_odds","odds","underOdds","under_odds","confidence","gameTime","start_time","Date","toISOString","pickType","_originalData","error","fetchBatchPredictionsSimple"],"sources":["SimplePropsService.ts"],"sourcesContent":["/**\r\n * Simple Props Service - Bypasses all complex validation and data management\r\n * This is for debugging the PropGPT/PropFinder merger data fetching issue\r\n */\r\n\r\nexport interface SimpleFeaturedProp {\r\n  id: string;\r\n  player: string;\r\n  matchup: string;\r\n  stat: string;\r\n  line: number;\r\n  overOdds: number;\r\n  underOdds: number;\r\n  confidence: number;\r\n  sport: string;\r\n  gameTime: string;\r\n  pickType: string;\r\n  _originalData?: any;\r\n}\r\n\r\n/**\r\n * Simple props fetching that bypasses EnhancedDataManager\r\n */\r\nexport async function fetchPropsSimple(\r\n  sport?: string,\r\n  marketType?: string,\r\n  options: {\r\n    limit?: number;\r\n    offset?: number;\r\n    statTypes?: string[];\r\n  } = {}\r\n): Promise<SimpleFeaturedProp[]> {\r\n  const { limit = 50, offset = 0, statTypes } = options;\r\n\r\n  try {\r\n    console.log('[SimplePropsService] Starting simple props fetch...', {\r\n      sport,\r\n      marketType,\r\n      options,\r\n    });\r\n\r\n    // Use proxy paths instead of direct localhost to avoid CORS issues\n    let endpoint = '';\n    const params = new URLSearchParams();\n\n    if (sport === 'MLB') {\n      endpoint = '/mlb/odds-comparison/';\n      params.append('market_type', marketType === 'player' ? 'playerprops' : 'regular');\n    } else {\n      endpoint = `/api/props/${sport || 'general'}`;\n      params.append('market_type', marketType === 'player' ? 'playerprops' : 'regular');\n    }\r\n\r\n    params.append('limit', limit.toString());\r\n    params.append('offset', offset.toString());\r\n\r\n    if (statTypes && statTypes.length > 0) {\r\n      params.append('stat_types', statTypes.join(','));\r\n    }\r\n\r\n    const url = `${endpoint}?${params.toString()}`;\r\n    console.log('[SimplePropsService] Fetching from:', url);\r\n\r\n    const response = await fetch(url);\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`API request failed: ${response.status} ${response.statusText}`);\r\n    }\r\n\r\n    const rawData = await response.json();\r\n    console.log('[SimplePropsService] Raw response:', rawData);\r\n\r\n    // Simple mapping with no validation or complex logic\r\n    const props: SimpleFeaturedProp[] = (Array.isArray(rawData) ? rawData : []).map(\r\n      (item: any) => ({\r\n        id: item.id || `${item.player_name || 'unknown'}-${item.stat_type || 'stat'}`,\r\n        player:\r\n          item.player_name || item.player || item.away_team || item.home_team || 'Unknown Player',\r\n        matchup:\r\n          item.matchup ||\r\n          item.event_name ||\r\n          `${item.away_team || 'Team A'} vs ${item.home_team || 'Team B'}`,\r\n        stat: item.stat_type || item.stat || item.market_type || 'Unknown Stat',\r\n        line: parseFloat(item.line || item.line_score || 0),\r\n        overOdds: parseFloat(item.overOdds || item.over_odds || item.odds || 100),\r\n        underOdds: parseFloat(item.underOdds || item.under_odds || item.odds || 100),\r\n        confidence: parseFloat(item.confidence || 75),\r\n        sport: sport || item.sport || 'MLB',\r\n        gameTime: item.start_time || item.gameTime || new Date().toISOString(),\r\n        pickType: 'prop',\r\n        _originalData: item,\r\n      })\r\n    );\r\n\r\n    console.log('[SimplePropsService] ✅ Mapped props:', props.length);\r\n    return props;\r\n  } catch (error) {\r\n    console.error('[SimplePropsService] ❌ Error fetching props:', error);\r\n    throw error;\r\n  }\r\n}\r\n\r\n/**\r\n * Simple batch predictions - no complex processing\r\n */\r\nexport async function fetchBatchPredictionsSimple(\r\n  props: SimpleFeaturedProp[]\r\n): Promise<SimpleFeaturedProp[]> {\r\n  try {\r\n    console.log('[SimplePropsService] Simple batch predictions for', props.length, 'props');\r\n\r\n    // For now, just return the props as-is\r\n    // In a real implementation, this would call the batch prediction API\r\n    return props;\r\n  } catch (error) {\r\n    console.error('[SimplePropsService] Error in batch predictions:', error);\r\n    return props; // Return original props on error\r\n  }\r\n}\n"],"mappings":"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","ignoreList":[]}