ba80c59071f62714aded8e5d62c2295b
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _framerMotion = require("framer-motion");
var _lucideReact = require("lucide-react");
var _react = _interopRequireWildcard(require("react"));
var _AccessRequestService = require("../../services/AccessRequestService");
var _location = require("../../utils/location");
var _jsxRuntime = require("react/jsx-runtime");
function _interopRequireWildcard(e, t) { if ("function" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function (e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || "object" != typeof e && "function" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (const t in e) "default" !== t && {}.hasOwnProperty.call(e, t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, t)) && (i.get || i.set) ? o(f, t, i) : f[t] = e[t]); return f; })(e, t); }
const _AccessRequestForm = ({
  onRequestSubmitted
}) => {
  const [email, setEmail] = (0, _react.useState)('');
  const [message, setMessage] = (0, _react.useState)('');
  const [isSubmitting, setIsSubmitting] = (0, _react.useState)(false);
  const [response, setResponse] = (0, _react.useState)(null);
  const [error, setError] = (0, _react.useState)(null);
  const [showSuccess, setShowSuccess] = (0, _react.useState)(false);
  const _handleSubmit = async e => {
    e.preventDefault();

    // Validation
    if (!email.trim()) {
      setError('Email address is required');
      return;
    }
    if (!_AccessRequestService._accessRequestService.isValidEmail(email)) {
      setError('Please enter a valid email address');
      return;
    }
    setIsSubmitting(true);
    setError(null);
    try {
      // Check for existing request first

      const existingRequest = await _AccessRequestService._accessRequestService.checkExistingRequest(email);
      if (existingRequest) {
        setError(`You already have a ${existingRequest.status} access request. Please check your email or contact support.`);
        setIsSubmitting(false);
        return;
      }

      // Submit new request
      const requestResponse = await _AccessRequestService._accessRequestService.submitAccessRequest({
        email: email.trim(),
        message: message.trim() || undefined
      });
      setResponse(requestResponse);
      setShowSuccess(true);

      // Reset form
      setEmail('');
      setMessage('');

      // Notify parent component
      if (onRequestSubmitted) {
        onRequestSubmitted(requestResponse);
      }
    } catch (err) {
      setError(err instanceof Error ? err.message : 'Failed to submit access request');
    } finally {
      setIsSubmitting(false);
    }
  };
  const resetForm = () => {
    setShowSuccess(false);
    setResponse(null);
    setError(null);
    setEmail('');
    setMessage('');
  };
  if (showSuccess && response?.success) {
    return /*#__PURE__*/(0, _jsxRuntime.jsx)(_framerMotion.motion.div, {
      initial: {
        opacity: 0,
        scale: 0.95
      },
      animate: {
        opacity: 1,
        scale: 1
      },
      className: "max-w-md mx-auto",
      children: /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
        className: "bg-slate-800/50 backdrop-blur-lg border border-slate-700/50 rounded-xl p-8 text-center",
        children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
          className: "w-16 h-16 mx-auto mb-6 bg-gradient-to-r from-green-500 to-emerald-500 rounded-full flex items-center justify-center",
          children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_lucideReact.CheckCircle, {
            className: "w-8 h-8 text-white"
          })
        }), /*#__PURE__*/(0, _jsxRuntime.jsx)("p", {
          className: "text-gray-300 mb-6 leading-relaxed",
          children: response.message
        }), /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
          className: "text-left",
          children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("p", {
            className: "text-blue-300 font-medium text-sm",
            children: "What happens next?"
          }), /*#__PURE__*/(0, _jsxRuntime.jsxs)("ul", {
            className: "text-blue-200/80 text-xs mt-2 space-y-1",
            children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("li", {
              children: "\u2022 Your request will be reviewed by the admin team"
            }), /*#__PURE__*/(0, _jsxRuntime.jsx)("li", {
              children: "\u2022 You'll receive an email notification with the decision"
            }), /*#__PURE__*/(0, _jsxRuntime.jsx)("li", {
              children: "\u2022 Check your spam folder if you don't see our email"
            })]
          })]
        }), /*#__PURE__*/(0, _jsxRuntime.jsx)("button", {
          onClick: resetForm,
          className: "px-6 py-2 bg-slate-700 hover:bg-slate-600 rounded-lg text-white transition-colors",
          children: "Submit Another Request"
        })]
      })
    });
  }
  return /*#__PURE__*/(0, _jsxRuntime.jsx)(_framerMotion.motion.div, {
    initial: {
      opacity: 0,
      y: 20
    },
    animate: {
      opacity: 1,
      y: 0
    },
    className: "max-w-md mx-auto",
    children: /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
      className: "bg-slate-800/50 backdrop-blur-lg border border-slate-700/50 rounded-xl p-8",
      children: [/*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
        className: "text-center mb-8",
        children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
          className: "w-16 h-16 mx-auto mb-4 bg-gradient-to-r from-cyber-primary to-cyber-accent rounded-full flex items-center justify-center",
          children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_lucideReact.Mail, {
            className: "w-8 h-8 text-white"
          })
        }), /*#__PURE__*/(0, _jsxRuntime.jsx)("h2", {
          className: "text-2xl font-bold text-white mb-2",
          children: "Request Access"
        }), /*#__PURE__*/(0, _jsxRuntime.jsx)("p", {
          className: "text-gray-400",
          children: "Enter your email to request access to the A1 Betting platform"
        })]
      }), /*#__PURE__*/(0, _jsxRuntime.jsxs)("form", {
        onSubmit: _handleSubmit,
        className: "space-y-6",
        children: [error && /*#__PURE__*/(0, _jsxRuntime.jsx)(_framerMotion.motion.div, {
          initial: {
            opacity: 0,
            scale: 0.95
          },
          animate: {
            opacity: 1,
            scale: 1
          },
          className: "bg-red-500/10 border border-red-500/50 rounded-lg p-4",
          children: /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
            className: "flex items-center space-x-3",
            children: [/*#__PURE__*/(0, _jsxRuntime.jsx)(_lucideReact.AlertCircle, {
              className: "w-5 h-5 text-red-400 flex-shrink-0"
            }), /*#__PURE__*/(0, _jsxRuntime.jsx)("p", {
              className: "text-red-300 text-sm",
              children: error
            })]
          })
        }), /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
          children: [/*#__PURE__*/(0, _jsxRuntime.jsxs)("label", {
            htmlFor: "email",
            className: "block text-sm font-medium text-gray-300 mb-2",
            children: ["Email Address ", /*#__PURE__*/(0, _jsxRuntime.jsx)("span", {
              className: "text-red-400",
              children: "*"
            })]
          }), /*#__PURE__*/(0, _jsxRuntime.jsx)("input", {
            id: "email",
            type: "email",
            value: email,
            onChange: e => setEmail(e.target.value),
            placeholder: "your.email@company.com",
            className: "w-full px-4 py-3 bg-slate-700/50 border border-slate-600/50 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:border-cyber-primary focus:ring-2 focus:ring-cyber-primary/20 transition-all",
            disabled: isSubmitting,
            required: true
          })]
        }), /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
          children: [/*#__PURE__*/(0, _jsxRuntime.jsxs)("label", {
            htmlFor: "message",
            className: "block text-sm font-medium text-gray-300 mb-2",
            children: ["Additional Message ", /*#__PURE__*/(0, _jsxRuntime.jsx)("span", {
              className: "text-gray-500",
              children: "(optional)"
            })]
          }), /*#__PURE__*/(0, _jsxRuntime.jsx)("textarea", {
            id: "message",
            value: message,
            onChange: e => setMessage(e.target.value),
            placeholder: "Tell us about your intended use case or any additional context...",
            rows: 3,
            className: "w-full px-4 py-3 bg-slate-700/50 border border-slate-600/50 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:border-cyber-primary focus:ring-2 focus:ring-cyber-primary/20 transition-all resize-none",
            disabled: isSubmitting,
            maxLength: 500
          }), /*#__PURE__*/(0, _jsxRuntime.jsxs)("p", {
            className: "text-xs text-gray-500 mt-1",
            children: [message.length, "/500 characters"]
          })]
        }), /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
          className: "bg-yellow-500/10 border border-yellow-500/30 rounded-lg p-4",
          children: /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
            className: "flex items-start space-x-3",
            children: [/*#__PURE__*/(0, _jsxRuntime.jsx)(_lucideReact.Info, {
              className: "w-5 h-5 text-yellow-400 mt-0.5 flex-shrink-0"
            }), /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
              children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("p", {
                className: "text-yellow-300 font-medium text-sm",
                children: "Access Review Process"
              }), /*#__PURE__*/(0, _jsxRuntime.jsx)("p", {
                className: "text-yellow-200/80 text-xs mt-1",
                children: "All access requests are manually reviewed. You'll receive an email notification with the decision, typically within 24-48 hours."
              })]
            })]
          })
        }), /*#__PURE__*/(0, _jsxRuntime.jsx)("button", {
          type: "submit",
          disabled: isSubmitting || !email.trim(),
          className: "w-full flex items-center justify-center space-x-2 px-6 py-3 bg-gradient-to-r from-cyber-primary to-cyber-accent hover:from-cyber-secondary hover:to-cyber-primary rounded-lg text-slate-900 font-medium transition-all disabled:opacity-50 disabled:cursor-not-allowed",
          children: isSubmitting ? /*#__PURE__*/(0, _jsxRuntime.jsxs)(_jsxRuntime.Fragment, {
            children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
              className: "w-5 h-5 border-2 border-slate-900/30 border-t-slate-900 rounded-full animate-spin"
            }), /*#__PURE__*/(0, _jsxRuntime.jsx)("span", {
              children: "Submitting Request..."
            })]
          }) : /*#__PURE__*/(0, _jsxRuntime.jsxs)(_jsxRuntime.Fragment, {
            children: [/*#__PURE__*/(0, _jsxRuntime.jsx)(_lucideReact.Send, {
              className: "w-5 h-5"
            }), /*#__PURE__*/(0, _jsxRuntime.jsx)("span", {
              children: "Submit Access Request"
            })]
          })
        })]
      }), /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
        className: "mt-6 pt-6 border-t border-slate-700/50 text-center",
        children: /*#__PURE__*/(0, _jsxRuntime.jsxs)("p", {
          className: "text-xs text-gray-500",
          children: ["Already have access?", ' ', /*#__PURE__*/(0, _jsxRuntime.jsx)("button", {
            onClick: () => (0, _location.getLocation)().assign('/login'),
            className: "text-cyber-primary hover:text-cyber-secondary transition-colors",
            children: "Sign in here"
          })]
        })
      })]
    })
  });
};
var _default = exports.default = _AccessRequestForm;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,