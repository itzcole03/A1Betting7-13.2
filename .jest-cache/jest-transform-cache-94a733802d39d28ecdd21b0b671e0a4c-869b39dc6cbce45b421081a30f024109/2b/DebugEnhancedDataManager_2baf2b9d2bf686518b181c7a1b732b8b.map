{"version":3,"names":["DebugEnhancedDataManager","fetchSportsProps","sport","propType","options","statTypes","limit","offset","console","log","baseUrl","endpoint","params","URLSearchParams","market_type","toString","length","append","join","url","response","fetch","ok","Error","status","statusText","rawData","json","props","Array","isArray","map","item","index","mapped","id","player_name","stat_type","player","matchup","event_name","stat","line","parseFloat","line_score","overOdds","over_odds","odds","underOdds","under_odds","confidence","gameTime","start_time","Date","toISOString","pickType","_originalData","error","isConnectivityError","message","includes","mockProps","exports","debugEnhancedDataManager"],"sources":["DebugEnhancedDataManager.ts"],"sourcesContent":["/**\r\n * Debug Enhanced Data Manager\r\n * This is a debugging version that bypasses validation and logs everything\r\n */\r\n\r\nimport { FeaturedProp } from '../services/unified/FeaturedPropsService';\r\n\r\nexport class DebugEnhancedDataManager {\r\n  /**\r\n   * Simple data fetching with comprehensive logging\r\n   */\r\n  async fetchSportsProps(\r\n    sport: string,\r\n    propType: string = 'player',\r\n    options: {\r\n      useCache?: boolean;\r\n      realtime?: boolean;\r\n      consolidate?: boolean;\r\n      statTypes?: string[];\r\n      limit?: number;\r\n      offset?: number;\r\n    } = {}\r\n  ): Promise<FeaturedProp[]> {\r\n    const { statTypes, limit = 50, offset = 0 } = options;\r\n\r\n    console.log('[DebugEnhancedDataManager] Starting fetchSportsProps with:', {\r\n      sport,\r\n      propType,\r\n      options,\r\n    });\r\n\r\n    try {\r\n      // Build the API URL\r\n      const baseUrl = 'http://localhost:8000';\r\n      const endpoint =\r\n        sport === 'MLB' ? `${baseUrl}/mlb/odds-comparison/` : `${baseUrl}/api/props/${sport}`;\r\n\r\n      const params = new URLSearchParams({\r\n        market_type: propType === 'player' ? 'playerprops' : 'regular',\r\n        limit: limit.toString(),\r\n        offset: offset.toString(),\r\n      });\r\n\r\n      if (statTypes && statTypes.length > 0) {\r\n        params.append('stat_types', statTypes.join(','));\r\n      }\r\n\r\n      const url = `${endpoint}?${params.toString()}`;\r\n      console.log('[DebugEnhancedDataManager] Fetching from URL:', url);\r\n\r\n      const response = await fetch(url);\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP ${response.status}: ${response.statusText}`);\r\n      }\r\n\r\n      const rawData = await response.json();\r\n      console.log('[DebugEnhancedDataManager] Raw API response:', rawData);\r\n\r\n      // Simple mapping without validation\r\n      const props: FeaturedProp[] = (Array.isArray(rawData) ? rawData : []).map(\r\n        (item: any, index: number) => {\r\n          const mapped = {\r\n            id: item.id || `${item.player_name || 'unknown'}-${item.stat_type || 'stat'}-${index}`,\r\n            player: item.player_name || item.player || 'Unknown Player',\r\n            matchup: item.matchup || item.event_name || 'Unknown Game',\r\n            stat: item.stat_type || item.stat || 'Unknown Stat',\r\n            line: parseFloat(item.line || item.line_score || 0),\r\n            overOdds: parseFloat(item.overOdds || item.over_odds || item.odds || 100),\r\n            underOdds: parseFloat(item.underOdds || item.under_odds || item.odds || 100),\r\n            confidence: parseFloat(item.confidence || 75),\r\n            sport: sport || item.sport || 'MLB',\r\n            gameTime: item.start_time || item.gameTime || new Date().toISOString(),\r\n            pickType: 'prop' as const,\r\n            _originalData: item,\r\n          };\r\n\r\n          console.log(`[DebugEnhancedDataManager] Mapped prop ${index}:`, mapped);\r\n          return mapped;\r\n        }\r\n      );\r\n\r\n      console.log(`[DebugEnhancedDataManager] ✅ Successfully mapped ${props.length} props`);\r\n      return props;\r\n    } catch (error) {\n      console.error('[DebugEnhancedDataManager] ❌ Error:', error);\n\n      // Check if this is a connectivity issue\n      const isConnectivityError = error instanceof Error && (\n        error.message.includes('Failed to fetch') ||\n        error.message.includes('Network Error') ||\n        error.message.includes('timeout') ||\n        error.message.includes('signal timed out')\n      );\n\n      if (isConnectivityError) {\n        console.log(`[DebugEnhancedDataManager] Backend unavailable for ${sport} - using mock data`);\n\n        // Return mock props when backend is unavailable\n        const mockProps: FeaturedProp[] = [\n          {\n            id: 'mock-aaron-judge-hr',\n            player: 'Aaron Judge',\n            matchup: 'Yankees vs Red Sox',\n            stat: 'Home Runs',\n            line: 1.5,\n            overOdds: 120,\n            underOdds: -110,\n            confidence: 85,\n            sport: sport || 'MLB',\n            gameTime: new Date().toISOString(),\n            pickType: 'over'\n          },\n          {\n            id: 'mock-mike-trout-hits',\n            player: 'Mike Trout',\n            matchup: 'Angels vs Astros',\n            stat: 'Hits',\n            line: 1.5,\n            overOdds: -105,\n            underOdds: -115,\n            confidence: 78,\n            sport: sport || 'MLB',\n            gameTime: new Date().toISOString(),\n            pickType: 'over'\n          },\n          {\n            id: 'mock-mookie-betts-rbis',\n            player: 'Mookie Betts',\n            matchup: 'Dodgers vs Giants',\n            stat: 'RBIs',\n            line: 0.5,\n            overOdds: 110,\n            underOdds: -130,\n            confidence: 82,\n            sport: sport || 'MLB',\n            gameTime: new Date().toISOString(),\n            pickType: 'over'\n          }\n        ];\n\n        return mockProps;\n      }\n\n      throw error;\n    }\r\n  }\r\n}\r\n\r\nexport const debugEnhancedDataManager = new DebugEnhancedDataManager();\n"],"mappings":"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","ignoreList":[]}