{"version":3,"names":["_globals","require","mockEventBus","emit","jest","fn","on","off","eb","_eventBus","e","global","fetch","describe","backoffCalculator","beforeEach","clearAllMocks","useFakeTimers","calculateDelay","attempt","baseDelay","maxDelay","jitter","exponentialDelay","Math","min","pow","random","afterEach","useRealTimers","test","expect","toBe","delays","Array","from","length","forEach","delay","toBeGreaterThan","toBeLessThan","uniqueDelays","Set","size","toBeLessThanOrEqual","sseChannelMock","isActive","consecutiveFailures","stabilityTimer","activationThreshold","stabilityThreshold","reportWebSocketFailure","activate","reportWebSocketSuccess","setTimeout","deactivate","clearTimeout","not","toHaveBeenCalledWith","advanceTimersByTime","i","toHaveBeenCalledTimes","validator","mockQuerySelectorAll","mockQuerySelector","document","querySelectorAll","querySelector","classifyValidationError","functionName","errorMessage","_originalError","msg","toLowerCase","includes","missingElements","navElements","isArray","push","type","details","emptyElements","performanceMetrics","issue","brokenFunctionality","explicitMock","mockReturnValue","result","Error","toContain","toHaveProperty","structuralResult","dataResult","mockEventLogger","events","log","severity","category","component","message","data","event","timestamp","Date","now","logWebSocketEvent","logSSEEvent","logPerformance","flush","toHaveLength","minimumSeverity","severityLevels","debug","info","warn","error","critical","filteredEvents","filter","reason","duration","recentErrors","recentWarnings","configManager","config","realtime","websocket","enabled","maxReconnectAttempts","reconnectInterval","sse","getRealtimeConfig","updateRealtimeConfig","section","updates","validateConfiguration","warnings","recommendations","isValid","validation","originalInterval","updatedInterval"],"sources":["realtimeEnhancements.test.ts"],"sourcesContent":["/**\r\n * Frontend Tests for WebSocket/Realtime Enhancement\r\n * \r\n * Tests for exponential backoff timing, SSE fallback activation,\r\n * and validator error classification.\r\n */\r\n\r\nimport { describe, expect, test, jest, beforeEach, afterEach } from '@jest/globals';\r\n\r\n// Mock EventBus to avoid dependencies\r\nconst mockEventBus = {\r\n  emit: jest.fn(),\r\n  on: jest.fn(),\r\n  off: jest.fn()\r\n};\r\n\r\n// Ensure the real module is loaded and then override the exported _eventBus\r\ntry {\r\n  // eslint-disable-next-line @typescript-eslint/no-var-requires\r\n  const eb = require('../../core/EventBus');\r\n  if (eb && typeof eb === 'object') {\r\n    eb._eventBus = mockEventBus;\r\n  }\r\n} catch (e) {\r\n  // If require fails, continue â€” tests will report module-not-found\r\n}\r\n\r\n// Mock fetch for network requests\r\nglobal.fetch = jest.fn() as jest.MockedFunction<typeof fetch>;\r\n\r\ndescribe('Exponential Backoff Timing', () => {\r\n  // We'll need to import the actual backoff logic\r\n  // This is a placeholder structure for the tests\r\n\r\n  let backoffCalculator: any;\r\n  \r\n  beforeEach(() => {\r\n    jest.clearAllMocks();\r\n    jest.useFakeTimers();\r\n    \r\n    // Mock the exponential backoff implementation\r\n    backoffCalculator = {\r\n      calculateDelay: (attempt: number, baseDelay: number = 1000, maxDelay: number = 30000, jitter: boolean = true) => {\r\n        const exponentialDelay = Math.min(baseDelay * Math.pow(2, attempt), maxDelay);\r\n        return jitter ? exponentialDelay + (Math.random() * 0.3 * exponentialDelay) : exponentialDelay;\r\n      }\r\n    };\r\n  });\r\n\r\n  afterEach(() => {\r\n    jest.useRealTimers();\r\n  });\r\n\r\n  test('should calculate exponential backoff correctly without jitter', () => {\r\n    const baseDelay = 1000;\r\n    const maxDelay = 30000;\r\n    \r\n    // Test exponential progression\r\n    expect(backoffCalculator.calculateDelay(0, baseDelay, maxDelay, false)).toBe(1000);\r\n    expect(backoffCalculator.calculateDelay(1, baseDelay, maxDelay, false)).toBe(2000);\r\n    expect(backoffCalculator.calculateDelay(2, baseDelay, maxDelay, false)).toBe(4000);\r\n    expect(backoffCalculator.calculateDelay(3, baseDelay, maxDelay, false)).toBe(8000);\r\n    expect(backoffCalculator.calculateDelay(4, baseDelay, maxDelay, false)).toBe(16000);\r\n    \r\n    // Test max delay cap\r\n    expect(backoffCalculator.calculateDelay(10, baseDelay, maxDelay, false)).toBe(30000);\r\n  });\r\n\r\n  test('should add jitter to prevent thundering herd', () => {\r\n    const baseDelay = 1000;\r\n    const maxDelay = 30000;\r\n    \r\n    // Run multiple times to ensure jitter varies\r\n    const delays = Array.from({ length: 10 }, () => \r\n      backoffCalculator.calculateDelay(2, baseDelay, maxDelay, true)\r\n    );\r\n    \r\n    // All delays should be around 4000ms but not exactly the same\r\n    delays.forEach(delay => {\r\n      expect(delay).toBeGreaterThan(4000); // Base delay\r\n      expect(delay).toBeLessThan(5200); // Base + 30% jitter\r\n    });\r\n    \r\n    // Ensure they're not all identical\r\n    const uniqueDelays = new Set(delays);\r\n    expect(uniqueDelays.size).toBeGreaterThan(5); // Should have variety due to jitter\r\n  });\r\n\r\n  test('should respect maximum delay bounds', () => {\r\n    const baseDelay = 5000;\r\n    const maxDelay = 10000;\r\n    \r\n    // High attempt number should still respect max delay\r\n    const delay = backoffCalculator.calculateDelay(20, baseDelay, maxDelay, false);\r\n    expect(delay).toBeLessThanOrEqual(maxDelay);\r\n    expect(delay).toBe(10000);\r\n  });\r\n\r\n  test('should handle edge cases', () => {\r\n    // Zero attempt\r\n    expect(backoffCalculator.calculateDelay(0, 1000, 30000, false)).toBe(1000);\r\n    \r\n    // Very small base delay\r\n    expect(backoffCalculator.calculateDelay(0, 100, 30000, false)).toBe(100);\r\n    \r\n    // Base delay larger than max delay\r\n    expect(backoffCalculator.calculateDelay(0, 50000, 30000, false)).toBe(30000);\r\n  });\r\n});\r\n\r\ndescribe('SSE Fallback Activation', () => {\r\n  let sseChannelMock: any;\r\n  \r\n  beforeEach(() => {\r\n    jest.clearAllMocks();\r\n    jest.useFakeTimers();\r\n    \r\n    // Mock SSE fallback channel\r\n    sseChannelMock = {\r\n      isActive: false,\r\n      consecutiveFailures: 0,\r\n      stabilityTimer: null,\r\n      activationThreshold: 3,\r\n      stabilityThreshold: 120000, // 2 minutes\r\n      \r\n      reportWebSocketFailure: function() {\r\n        this.consecutiveFailures++;\r\n        if (this.consecutiveFailures >= this.activationThreshold && !this.isActive) {\r\n          this.activate();\r\n        }\r\n      },\r\n      \r\n      reportWebSocketSuccess: function() {\r\n        if (this.isActive) {\r\n          // Start stability monitoring\r\n          this.stabilityTimer = setTimeout(() => {\r\n            this.deactivate();\r\n          }, this.stabilityThreshold);\r\n        }\r\n        this.consecutiveFailures = 0;\r\n      },\r\n      \r\n      activate: function() {\r\n        this.isActive = true;\r\n        // Mock EventSource creation\r\n        mockEventBus.emit('sse:activated');\r\n      },\r\n      \r\n      deactivate: function() {\r\n        this.isActive = false;\r\n        if (this.stabilityTimer) {\r\n          clearTimeout(this.stabilityTimer);\r\n          this.stabilityTimer = null;\r\n        }\r\n        mockEventBus.emit('sse:deactivated');\r\n      }\r\n    };\r\n  });\r\n\r\n  afterEach(() => {\r\n    jest.useRealTimers();\r\n  });\r\n\r\n  test('should not activate SSE before threshold failures', () => {\r\n    // Report 2 failures (below threshold of 3)\r\n    sseChannelMock.reportWebSocketFailure();\r\n    sseChannelMock.reportWebSocketFailure();\r\n    \r\n    expect(sseChannelMock.isActive).toBe(false);\r\n    expect(mockEventBus.emit).not.toHaveBeenCalledWith('sse:activated');\r\n  });\r\n\r\n  test('should activate SSE after threshold failures', () => {\r\n    // Report 3 failures (meets threshold)\r\n    sseChannelMock.reportWebSocketFailure();\r\n    sseChannelMock.reportWebSocketFailure();\r\n    sseChannelMock.reportWebSocketFailure();\r\n    \r\n    expect(sseChannelMock.isActive).toBe(true);\r\n    expect(mockEventBus.emit).toHaveBeenCalledWith('sse:activated');\r\n  });\r\n\r\n  test('should reset failure count on WebSocket success', () => {\r\n    // Report 2 failures, then success\r\n    sseChannelMock.reportWebSocketFailure();\r\n    sseChannelMock.reportWebSocketFailure();\r\n    sseChannelMock.reportWebSocketSuccess();\r\n    \r\n    expect(sseChannelMock.consecutiveFailures).toBe(0);\r\n    \r\n    // Should need 3 more failures to activate\r\n    sseChannelMock.reportWebSocketFailure();\r\n    sseChannelMock.reportWebSocketFailure();\r\n    expect(sseChannelMock.isActive).toBe(false);\r\n  });\r\n\r\n  test('should deactivate SSE after stability period', () => {\r\n    // Activate SSE\r\n    sseChannelMock.reportWebSocketFailure();\r\n    sseChannelMock.reportWebSocketFailure();\r\n    sseChannelMock.reportWebSocketFailure();\r\n    expect(sseChannelMock.isActive).toBe(true);\r\n    \r\n    // Report WebSocket success (starts stability timer)\r\n    sseChannelMock.reportWebSocketSuccess();\r\n    \r\n    // Fast-forward past stability threshold\r\n    jest.advanceTimersByTime(sseChannelMock.stabilityThreshold + 1000);\r\n    \r\n    expect(sseChannelMock.isActive).toBe(false);\r\n    expect(mockEventBus.emit).toHaveBeenCalledWith('sse:deactivated');\r\n  });\r\n\r\n  test('should handle multiple activation/deactivation cycles', () => {\r\n    // First activation cycle\r\n    for (let i = 0; i < 3; i++) {\r\n      sseChannelMock.reportWebSocketFailure();\r\n    }\r\n    expect(sseChannelMock.isActive).toBe(true);\r\n    \r\n    // Deactivate after stability\r\n    sseChannelMock.reportWebSocketSuccess();\r\n    jest.advanceTimersByTime(sseChannelMock.stabilityThreshold + 1000);\r\n    expect(sseChannelMock.isActive).toBe(false);\r\n    \r\n    // Second activation cycle\r\n    for (let i = 0; i < 3; i++) {\r\n      sseChannelMock.reportWebSocketFailure();\r\n    }\r\n    expect(sseChannelMock.isActive).toBe(true);\r\n    \r\n  // Deactivate second cycle after stability\r\n  sseChannelMock.reportWebSocketSuccess();\r\n  jest.advanceTimersByTime(sseChannelMock.stabilityThreshold + 1000);\r\n  expect(sseChannelMock.isActive).toBe(false);\r\n\r\n  expect(mockEventBus.emit).toHaveBeenCalledTimes(4); // 2 activations + 2 deactivations\r\n  });\r\n});\r\n\r\ndescribe('Validator Error Classification', () => {\r\n  let validator: any;\r\n  \r\n  beforeEach(() => {\r\n    jest.clearAllMocks();\r\n    \r\n    // Mock DOM methods\r\n    const mockQuerySelectorAll = jest.fn();\r\n    const mockQuerySelector = jest.fn();\r\n\r\n    global.document = {\r\n      querySelectorAll: mockQuerySelectorAll,\r\n      querySelector: mockQuerySelector\r\n    } as any;\r\n    \r\n    // Mock validator with error classification\r\n    validator = {\r\n      classifyValidationError: (functionName: string, errorMessage: string, _originalError: unknown) => {\r\n        // Normalize message for robust matching\r\n        const msg = (errorMessage || '').toLowerCase();\r\n\r\n        // Check for missing structural elements (covers \"No X elements found\", \"no elements\", \"not found\")\r\n        if (\r\n          msg.includes('not found') ||\r\n          msg.includes('no navigation elements') ||\r\n          msg.includes('no elements found') ||\r\n          /no .*elements/.test(msg)\r\n        ) {\r\n          const missingElements: string[] = [];\r\n          if (functionName === 'navigation') {\r\n            const navElements = (document.querySelectorAll as any)('[data-testid*=\"nav\"], [role=\"navigation\"], nav');\r\n            if (!navElements || (Array.isArray(navElements) && navElements.length === 0)) {\r\n              missingElements.push('navigation elements');\r\n            }\r\n          }\r\n\r\n          return {\r\n            type: 'structural_missing',\r\n            details: { missingElements }\r\n          };\r\n        }\r\n        \r\n        // Check for data pending situations\r\n        if (errorMessage.includes('no content visible') || errorMessage.includes('empty') || \r\n            errorMessage.includes('data not loaded')) {\r\n          return {\r\n            type: 'data_pending',\r\n            details: { emptyElements: [] }\r\n          };\r\n        }\r\n        \r\n        // Check for performance issues\r\n        if (errorMessage.includes('timeout') || errorMessage.includes('Slow execution')) {\r\n          return {\r\n            type: 'performance_issue',\r\n            details: { performanceMetrics: { issue: 'timeout_or_slow_execution' } }\r\n          };\r\n        }\r\n        \r\n        // Default to functionality broken\r\n        return {\r\n          type: 'functionality_broken',\r\n          details: { brokenFunctionality: [errorMessage] }\r\n        };\r\n      }\r\n    };\r\n  });\r\n\r\n  test('should classify structural missing errors correctly', () => {\r\n  // Ensure this test explicitly provides a jest.fn for querySelectorAll\r\n  const explicitMock = jest.fn().mockReturnValue([] as any);\r\n  (document as any).querySelectorAll = explicitMock;\r\n    \r\n    const result = validator.classifyValidationError(\r\n      'navigation', \r\n      'No navigation elements found', \r\n      new Error('No navigation elements found')\r\n    );\r\n    \r\n    expect(result.type).toBe('structural_missing');\r\n    expect(result.details.missingElements).toContain('navigation elements');\r\n  });\r\n\r\n  test('should classify data pending errors correctly', () => {\r\n    const result = validator.classifyValidationError(\r\n      'predictions', \r\n      'Prediction elements found but no content visible', \r\n      new Error('No content')\r\n    );\r\n    \r\n    expect(result.type).toBe('data_pending');\r\n    expect(result.details).toHaveProperty('emptyElements');\r\n  });\r\n\r\n  test('should classify performance issues correctly', () => {\r\n    const result = validator.classifyValidationError(\r\n      'rendering', \r\n      'Validation timeout after 5000ms', \r\n      new Error('Timeout')\r\n    );\r\n    \r\n    expect(result.type).toBe('performance_issue');\r\n    expect(result.details.performanceMetrics.issue).toBe('timeout_or_slow_execution');\r\n  });\r\n\r\n  test('should classify functionality broken as default', () => {\r\n    const result = validator.classifyValidationError(\r\n      'dataFetching', \r\n      'API endpoint returned 500 error', \r\n      new Error('Server error')\r\n    );\r\n    \r\n    expect(result.type).toBe('functionality_broken');\r\n    expect(result.details.brokenFunctionality).toContain('API endpoint returned 500 error');\r\n  });\r\n\r\n  test('should handle slow execution classification', () => {\r\n    const result = validator.classifyValidationError(\r\n      'rendering', \r\n      'Slow execution: 3000ms', \r\n      new Error('Slow')\r\n    );\r\n    \r\n    expect(result.type).toBe('performance_issue');\r\n  });\r\n\r\n  test('should differentiate between structural and data issues', () => {\r\n    // Structural issue - elements don't exist\r\n    const structuralResult = validator.classifyValidationError(\r\n      'betting', \r\n      'No betting elements found in DOM', \r\n      new Error('Not found')\r\n    );\r\n    \r\n    // Data issue - elements exist but empty\r\n    const dataResult = validator.classifyValidationError(\r\n      'betting', \r\n      'Betting elements found but no content visible', \r\n      new Error('Empty')\r\n    );\r\n    \r\n    expect(structuralResult.type).toBe('structural_missing');\r\n    expect(dataResult.type).toBe('data_pending');\r\n  });\r\n});\r\n\r\ndescribe('Event Logger Integration', () => {\r\n  let mockEventLogger: any;\r\n  \r\n  beforeEach(() => {\r\n    jest.clearAllMocks();\r\n    \r\n    // Mock event logger\r\n    mockEventLogger = {\r\n      events: [] as any[],\r\n      log: jest.fn((severity, category, component, message, data) => {\r\n        const event = { severity, category, component, message, data, timestamp: Date.now() };\r\n        mockEventLogger.events.push(event);\r\n        return `event_${mockEventLogger.events.length}`;\r\n      }),\r\n      logWebSocketEvent: jest.fn(),\r\n      logSSEEvent: jest.fn(),\r\n      logPerformance: jest.fn(),\r\n      flush: jest.fn()\r\n    };\r\n  });\r\n\r\n  test('should batch events correctly', () => {\r\n    // Log multiple events\r\n    mockEventLogger.log('info', 'websocket', 'TestComponent', 'Connected');\r\n    mockEventLogger.log('warn', 'websocket', 'TestComponent', 'Connection unstable');\r\n    mockEventLogger.log('error', 'websocket', 'TestComponent', 'Connection failed');\r\n    \r\n    expect(mockEventLogger.events).toHaveLength(3);\r\n    expect(mockEventLogger.events[0].severity).toBe('info');\r\n    expect(mockEventLogger.events[1].severity).toBe('warn');\r\n    expect(mockEventLogger.events[2].severity).toBe('error');\r\n  });\r\n\r\n  test('should filter events by severity level', () => {\r\n    const minimumSeverity = 'warn';\r\n    const severityLevels = { debug: 0, info: 1, warn: 2, error: 3, critical: 4 };\r\n    \r\n    const events = [\r\n      { severity: 'debug' as const, message: 'Debug event' },\r\n      { severity: 'info' as const, message: 'Info event' },\r\n      { severity: 'warn' as const, message: 'Warn event' },\r\n      { severity: 'error' as const, message: 'Error event' }\r\n    ];\r\n    \r\n    const filteredEvents = events.filter(event => \r\n      severityLevels[event.severity] >= severityLevels[minimumSeverity]\r\n    );\r\n    \r\n    expect(filteredEvents).toHaveLength(2);\r\n    expect(filteredEvents[0].severity).toBe('warn');\r\n    expect(filteredEvents[1].severity).toBe('error');\r\n  });\r\n\r\n  test('should generate diagnostic report', () => {\r\n    // Simulate various events\r\n    mockEventLogger.log('error', 'websocket', 'DataManager', 'Connection failed', { reason: 'network' });\r\n    mockEventLogger.log('warn', 'validation', 'CoreValidator', 'Slow validation', { duration: 2000 });\r\n    mockEventLogger.log('info', 'sse', 'SSEChannel', 'Fallback activated');\r\n    \r\n    const recentErrors = mockEventLogger.events.filter((e: any) => e.severity === 'error');\r\n    const recentWarnings = mockEventLogger.events.filter((e: any) => e.severity === 'warn');\r\n    \r\n    expect(recentErrors).toHaveLength(1);\r\n    expect(recentWarnings).toHaveLength(1);\r\n    expect(recentErrors[0].component).toBe('DataManager');\r\n    expect(recentWarnings[0].component).toBe('CoreValidator');\r\n  });\r\n});\r\n\r\ndescribe('Realtime Configuration Management', () => {\r\n  let configManager: any;\r\n  \r\n  beforeEach(() => {\r\n    jest.clearAllMocks();\r\n    \r\n    // Mock configuration manager\r\n    configManager = {\r\n      config: {\r\n        realtime: {\r\n          websocket: {\r\n            enabled: true,\r\n            maxReconnectAttempts: 5,\r\n            reconnectInterval: 5000\r\n          },\r\n          sse: {\r\n            enabled: true,\r\n            activationThreshold: 3\r\n          }\r\n        }\r\n      },\r\n      \r\n      getRealtimeConfig: function() {\r\n        return this.config.realtime;\r\n      },\r\n      \r\n      updateRealtimeConfig: function(section: string, updates: any) {\r\n        this.config.realtime[section] = { ...this.config.realtime[section], ...updates };\r\n      },\r\n      \r\n      validateConfiguration: function() {\r\n        const config = this.getRealtimeConfig();\r\n        const warnings: string[] = [];\r\n        const recommendations: string[] = [];\r\n        \r\n        if (config.websocket.reconnectInterval < 1000) {\r\n          warnings.push('WebSocket reconnect interval is very short');\r\n        }\r\n        \r\n        if (!config.sse.enabled && !config.websocket.enabled) {\r\n          warnings.push('No realtime connection enabled');\r\n        }\r\n        \r\n        return { isValid: warnings.length === 0, warnings, recommendations };\r\n      }\r\n    };\r\n  });\r\n\r\n  test('should validate configuration correctly', () => {\r\n    const validation = configManager.validateConfiguration();\r\n    expect(validation.isValid).toBe(true);\r\n    expect(validation.warnings).toHaveLength(0);\r\n  });\r\n\r\n  test('should detect configuration issues', () => {\r\n    // Set problematic configuration\r\n    configManager.updateRealtimeConfig('websocket', { \r\n      reconnectInterval: 500,\r\n      enabled: false\r\n    });\r\n    configManager.updateRealtimeConfig('sse', { enabled: false });\r\n    \r\n    const validation = configManager.validateConfiguration();\r\n    expect(validation.isValid).toBe(false);\r\n    expect(validation.warnings).toContain('WebSocket reconnect interval is very short');\r\n    expect(validation.warnings).toContain('No realtime connection enabled');\r\n  });\r\n\r\n  test('should update configuration correctly', () => {\r\n    const originalInterval = configManager.getRealtimeConfig().websocket.reconnectInterval;\r\n    expect(originalInterval).toBe(5000);\r\n    \r\n    configManager.updateRealtimeConfig('websocket', { reconnectInterval: 10000 });\r\n    \r\n    const updatedInterval = configManager.getRealtimeConfig().websocket.reconnectInterval;\r\n    expect(updatedInterval).toBe(10000);\r\n  });\r\n});"],"mappings":"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","ignoreList":[]}