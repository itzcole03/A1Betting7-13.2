1a3bf088ba453d2cd018be86ac0fe6fd
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.PropFilters = void 0;
var _react = _interopRequireDefault(require("react"));
var _jsxRuntime = require("react/jsx-runtime");
/**
 * PropFilters Component
 *
 * Handles all filtering UI for props including sport selection,
 * prop type, stat type, date selection, and search functionality.
 */

const PropFiltersComponent = ({
  filters,
  onFiltersChange,
  sports,
  statTypes,
  upcomingGames,
  selectedGame,
  onGameSelect,
  className = ''
}) => {
  console.count('[PropFilters] RENDER');
  return /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
    className: `flex flex-wrap gap-4 p-4 bg-slate-800/50 backdrop-blur-sm rounded-lg border border-slate-600 mb-4 space-y-4 ${className}`,
    children: [/*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
      className: "filter-group",
      children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("label", {
        htmlFor: "sport-select",
        className: "block text-sm font-medium text-gray-200 mb-2",
        children: "Sport:"
      }), /*#__PURE__*/(0, _jsxRuntime.jsx)("select", {
        id: "sport-select",
        value: filters.selectedSport,
        onChange: e => onFiltersChange({
          selectedSport: e.target.value
        }),
        className: "w-full p-2 bg-slate-700 border border-slate-600 rounded-md text-white focus:ring-purple-500 focus:border-purple-500",
        children: sports.map(sport => /*#__PURE__*/(0, _jsxRuntime.jsx)("option", {
          value: sport,
          className: "bg-slate-700 text-white",
          children: sport
        }, sport))
      })]
    }), /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
      className: "filter-group",
      children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("label", {
        className: "block text-sm font-medium text-gray-200 mb-2",
        children: "Prop Type:"
      }), /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
        className: "flex space-x-4",
        children: [/*#__PURE__*/(0, _jsxRuntime.jsxs)("label", {
          className: "flex items-center text-gray-200",
          children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("input", {
            type: "radio",
            name: "propType",
            value: "player",
            checked: filters.propType === 'player',
            onChange: e => onFiltersChange({
              propType: e.target.value
            }),
            className: "mr-2 text-purple-600 focus:ring-purple-500"
          }), "Player"]
        }), /*#__PURE__*/(0, _jsxRuntime.jsxs)("label", {
          className: "flex items-center text-gray-200",
          children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("input", {
            type: "radio",
            name: "propType",
            value: "team",
            checked: filters.propType === 'team',
            onChange: e => onFiltersChange({
              propType: e.target.value
            }),
            className: "mr-2 text-purple-600 focus:ring-purple-500"
          }), "Team"]
        })]
      })]
    }), /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
      className: "filter-group",
      children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("label", {
        htmlFor: "stat-type-select",
        className: "block text-sm font-medium text-gray-200 mb-2",
        children: "Stat Type:"
      }), /*#__PURE__*/(0, _jsxRuntime.jsx)("select", {
        id: "stat-type-select",
        value: filters.selectedStatType,
        onChange: e => onFiltersChange({
          selectedStatType: e.target.value
        }),
        className: "w-full p-2 bg-slate-700 border border-slate-600 rounded-md text-white focus:ring-purple-500 focus:border-purple-500",
        children: statTypes.map(statType => /*#__PURE__*/(0, _jsxRuntime.jsx)("option", {
          value: statType,
          className: "bg-slate-700 text-white",
          children: statType
        }, statType))
      })]
    }), /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
      className: "filter-group",
      children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("label", {
        htmlFor: "date-select",
        className: "block text-sm font-medium text-gray-200 mb-2",
        children: "Date:"
      }), /*#__PURE__*/(0, _jsxRuntime.jsx)("input", {
        id: "date-select",
        type: "date",
        value: filters.selectedDate,
        onChange: e => onFiltersChange({
          selectedDate: e.target.value
        }),
        className: "w-full p-2 bg-slate-700 border border-slate-600 rounded-md text-white focus:ring-purple-500 focus:border-purple-500"
      })]
    }), /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
      className: "filter-group",
      children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("label", {
        htmlFor: "search-input",
        className: "block text-sm font-medium text-gray-200 mb-2",
        children: "Search:"
      }), /*#__PURE__*/(0, _jsxRuntime.jsx)("input", {
        id: "search-input",
        type: "text",
        placeholder: "Search players, teams, or stats...",
        value: filters.searchTerm,
        onChange: e => onFiltersChange({
          searchTerm: e.target.value
        }),
        className: "w-full p-2 bg-slate-700 border border-slate-600 rounded-md text-white placeholder-gray-400 focus:ring-purple-500 focus:border-purple-500"
      })]
    }), /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
      className: "filter-group",
      children: /*#__PURE__*/(0, _jsxRuntime.jsxs)("label", {
        className: "flex items-center text-gray-200",
        children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("input", {
          type: "checkbox",
          checked: filters.showUpcomingGames,
          onChange: e => onFiltersChange({
            showUpcomingGames: e.target.checked
          }),
          className: "mr-2 text-purple-600 focus:ring-purple-500"
        }), "Show Upcoming Games"]
      })
    }), filters.showUpcomingGames && upcomingGames.length > 0 && /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
      className: "filter-group",
      children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("label", {
        htmlFor: "game-select",
        className: "block text-sm font-medium text-gray-200 mb-2",
        children: "Select Game:"
      }), /*#__PURE__*/(0, _jsxRuntime.jsxs)("select", {
        id: "game-select",
        value: selectedGame?.game_id || '',
        onChange: e => {
          const gameId = e.target.value;
          if (gameId) {
            const game = upcomingGames.find(g => g.game_id?.toString() === gameId);
            if (game) {
              onGameSelect({
                game_id: game.game_id,
                home: game.home,
                away: game.away
              });
            }
          } else {
            onGameSelect(null);
          }
        },
        className: "w-full p-2 bg-slate-700 border border-slate-600 rounded-md text-white focus:ring-purple-500 focus:border-purple-500",
        children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("option", {
          value: "",
          children: "All Games"
        }), upcomingGames.map(game => /*#__PURE__*/(0, _jsxRuntime.jsxs)("option", {
          value: game.game_id,
          className: "text-white bg-slate-700",
          children: [game.event_name, " - ", new Date(game.time).toLocaleDateString()]
        }, game.game_id))]
      })]
    }), /*#__PURE__*/(0, _jsxRuntime.jsx)("style", {
      children: `
        .filter-group {
          display: flex;
          flex-direction: column;
          min-width: 150px;
        }

        .radio-group {
          display: flex;
          gap: 1rem;
          margin-top: 0.25rem;
        }

        @media (max-width: 768px) {
          .prop-filters {
            flex-direction: column;
          }

          .filter-group {
            min-width: unset;
          }

          .radio-group {
            flex-direction: column;
            gap: 0.5rem;
          }
        }
      `
    })]
  });
};
const PropFilters = exports.PropFilters = /*#__PURE__*/_react.default.memo(PropFiltersComponent);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,