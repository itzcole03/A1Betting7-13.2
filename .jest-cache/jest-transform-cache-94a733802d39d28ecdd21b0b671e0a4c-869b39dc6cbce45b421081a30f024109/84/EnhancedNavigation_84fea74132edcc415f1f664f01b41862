c47d70cd5c8e6a6261209d6eedb72836
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = _interopRequireWildcard(require("react"));
var _reactRouterDom = require("react-router-dom");
var _framerMotion = require("framer-motion");
var _lucideReact = require("lucide-react");
var _navReadySignal = require("../../navigation/navReadySignal");
var _jsxRuntime = require("react/jsx-runtime");
function _interopRequireWildcard(e, t) { if ("function" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function (e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || "object" != typeof e && "function" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (const t in e) "default" !== t && {}.hasOwnProperty.call(e, t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, t)) && (i.get || i.set) ? o(f, t, i) : f[t] = e[t]); return f; })(e, t); }
const EnhancedNavigation = ({
  isOpen,
  onToggle,
  onClose
}) => {
  const location = (0, _reactRouterDom.useLocation)();
  const navigate = (0, _reactRouterDom.useNavigate)();
  const [activeCategory, setActiveCategory] = (0, _react.useState)('main');
  const [searchQuery, setSearchQuery] = (0, _react.useState)('');
  const [notifications] = (0, _react.useState)(3);
  // Test-friendly admin detection: read localStorage safely so E2E tests
  // that render the app without full providers can still observe admin UI.
  const isLocalAdmin = (() => {
    try {
      if (typeof window === 'undefined' || !window.localStorage) return false;
      const raw = window.localStorage.getItem('user');
      if (!raw) return false;
      const parsed = JSON.parse(raw);
      const obj = parsed;
      if (!obj) return false;
      const role = obj['role'];
      if (role === 'admin') return true;
      const perms = obj['permissions'];
      if (Array.isArray(perms)) return perms.includes('admin');
      return false;
    } catch {
      return false;
    }
  })();

  // Signal navigation readiness on mount
  (0, _react.useEffect)(() => {
    (0, _navReadySignal.signalNavReady)();
  }, []);
  const navigationItems = [
  // Main Features
  {
    id: 'propfinder-clone',
    name: 'PropFinder Clone',
    href: '/propfinder-clone',
    icon: _lucideReact.Trophy,
    badge: 'CLONE',
    description: 'Exact PropFinder interface clone',
    category: 'main',
    isNew: true
  }, {
    id: 'prop-killer',
    name: 'PropFinder Killer',
    href: '/prop-killer',
    icon: _lucideReact.Brain,
    badge: 'HOT',
    description: 'AI-powered prop research that beats PropFinder',
    category: 'main',
    isHot: true
  }, {
    id: 'dashboard',
    name: 'Dashboard',
    href: '/',
    icon: _lucideReact.Home,
    description: 'Your personalized betting command center',
    category: 'main'
  }, {
    id: 'money-maker',
    name: 'Money Maker',
    href: '/money-maker',
    icon: _lucideReact.DollarSign,
    badge: 'NEW',
    description: 'Quantum AI betting engine',
    category: 'main',
    isNew: true
  },
  // Research Tools
  {
    id: 'player-research',
    name: 'Player Research',
    href: '/player',
    icon: _lucideReact.Search,
    description: 'Deep player analytics and projections',
    category: 'research'
  }, {
    id: 'prop-scanner',
    name: 'Prop Scanner',
    href: '/prop-scanner',
    icon: _lucideReact.Eye,
    badge: 'BETA',
    description: 'Real-time prop opportunity scanning',
    category: 'research',
    isNew: true
  }, {
    id: 'matchup-analyzer',
    name: 'Matchup Analyzer',
    href: '/matchup-analyzer',
    icon: _lucideReact.Target,
    description: 'Advanced matchup breakdowns',
    category: 'research'
  }, {
    id: 'injury-tracker',
    name: 'Injury Tracker',
    href: '/injury-tracker',
    icon: _lucideReact.Shield,
    badge: 2,
    description: 'Live injury reports and impact analysis',
    category: 'research'
  },
  // Tools
  {
    id: 'arbitrage',
    name: 'Arbitrage Hunter',
    href: '/arbitrage',
    icon: _lucideReact.Target,
    badge: 'HOT',
    description: 'Multi-sportsbook arbitrage opportunities',
    category: 'tools',
    isHot: true
  }, {
    id: 'advanced-arbitrage',
    name: 'Advanced Arbitrage',
    href: '/advanced-arbitrage',
    icon: _lucideReact.Zap,
    badge: 'Phase 4.2',
    description: 'Sophisticated arbitrage detection across 15+ sportsbooks',
    category: 'tools',
    isNew: true
  }, {
    id: 'kelly-calculator',
    name: 'Kelly Calculator',
    href: '/kelly-calculator',
    icon: _lucideReact.Calculator,
    description: 'Optimal bet sizing with Kelly Criterion',
    category: 'tools'
  }, {
    id: 'advanced-kelly',
    name: 'Advanced Kelly',
    href: '/advanced-kelly',
    icon: _lucideReact.BarChart3,
    badge: 'Phase 4.3',
    description: 'Sophisticated Kelly Criterion with risk management & portfolio optimization',
    category: 'tools',
    isNew: true
  }, {
    id: 'odds-comparison',
    name: 'Odds Comparison',
    href: '/odds-comparison',
    icon: _lucideReact.TrendingUp,
    description: 'Real-time odds across all sportsbooks',
    category: 'tools'
  }, {
    id: 'line-tracker',
    name: 'Line Tracker',
    href: '/line-tracker',
    icon: _lucideReact.Activity,
    description: 'Track line movements and betting patterns',
    category: 'tools'
  }, {
    id: 'cheatsheets',
    name: 'Prop Cheatsheets',
    href: '/cheatsheets',
    icon: _lucideReact.BookOpen,
    description: 'Quick reference guides and strategies',
    category: 'tools'
  }, {
    id: 'smart-alerts',
    name: 'Smart Alerts',
    href: '/smart-alerts',
    icon: _lucideReact.Bell,
    badge: 'NEW',
    description: 'AI-powered alert system for betting opportunities',
    category: 'tools',
    isNew: true
  },
  // Analytics
  {
    id: 'bet-tracking',
    name: 'Bet Tracking',
    href: '/tracking',
    icon: _lucideReact.BarChart3,
    description: 'Track your betting performance',
    category: 'analytics'
  }, {
    id: 'ml-models',
    name: 'AI/ML Models',
    href: '/ml-models',
    icon: _lucideReact.Brain,
    badge: 'PRO',
    description: 'Advanced machine learning models',
    category: 'analytics',
    isPremium: true
  }, {
    id: 'performance',
    name: 'Performance',
    href: '/performance',
    icon: _lucideReact.Trophy,
    description: 'Detailed performance analytics',
    category: 'analytics'
  }, {
    id: 'data-ecosystem',
    name: 'Data Ecosystem',
    href: '/data-ecosystem',
    icon: _lucideReact.Database,
    badge: 'NEW',
    description: 'Monitor data infrastructure and quality',
    category: 'analytics',
    isNew: true
  }, {
    id: 'ai-dashboard',
    name: 'Advanced AI Dashboard',
    href: '/ai-dashboard',
    icon: _lucideReact.Brain,
    badge: 'Phase 3',
    description: 'Multi-sport AI enhancement platform with real-time inference',
    category: 'analytics',
    isNew: true,
    isHot: true
  }, {
    id: 'live-betting',
    name: 'Live Betting Engine',
    href: '/live-betting',
    icon: _lucideReact.Zap,
    badge: 'Phase 4',
    description: 'Real-time odds tracking and opportunities across 15+ sportsbooks',
    category: 'main',
    isNew: true,
    isHot: true
  }, {
    id: 'propfinder-comparison',
    name: 'vs PropFinder',
    href: '/comparison',
    icon: _lucideReact.Star,
    badge: 'NEW',
    description: '4x faster, free forever comparison',
    category: 'main',
    isNew: true
  }, {
    id: 'advanced-player-dashboard',
    name: 'Advanced Player Dashboard',
    href: '/advanced-player',
    icon: _lucideReact.User,
    badge: 'HOT',
    description: 'Enhanced dashboard with customizable trend ranges',
    category: 'research',
    isHot: true
  }, {
    id: 'real-time-lookup',
    name: 'Player Lookup',
    href: '/player-lookup',
    icon: _lucideReact.Search,
    badge: 'NEW',
    description: 'Sub-second player search with comprehensive data',
    category: 'research',
    isNew: true
  }, {
    id: 'matchup-analysis',
    name: 'Matchup Analysis',
    href: '/matchup-analysis',
    icon: _lucideReact.Target,
    badge: 'PRO',
    description: 'Head-to-head player vs player comparisons',
    category: 'analytics',
    isPremium: true
  }];
  const categories = [{
    id: 'main',
    name: 'Main',
    icon: _lucideReact.Home
  }, {
    id: 'research',
    name: 'Research',
    icon: _lucideReact.Search
  }, {
    id: 'tools',
    name: 'Tools',
    icon: _lucideReact.Calculator
  }, {
    id: 'analytics',
    name: 'Analytics',
    icon: _lucideReact.BarChart3
  }];
  const filteredItems = navigationItems.filter(item => {
    const matchesCategory = item.category === activeCategory;
    const matchesSearch = searchQuery === '' || item.name.toLowerCase().includes(searchQuery.toLowerCase()) || item.description && item.description.toLowerCase().includes(searchQuery.toLowerCase());
    return matchesCategory && matchesSearch;
  });
  const isCurrentPath = href => {
    if (href === '/' && location.pathname === '/') return true;
    if (href !== '/' && location.pathname.startsWith(href)) return true;
    return false;
  };
  const getBadgeColor = (badge, item) => {
    if (typeof badge === 'number') return 'bg-red-500 text-white';
    if (item.isHot) return 'bg-gradient-to-r from-red-500 to-orange-500 text-white';
    if (item.isNew) return 'bg-gradient-to-r from-green-500 to-emerald-500 text-white';
    if (item.isPremium) return 'bg-gradient-to-r from-purple-500 to-indigo-500 text-white';
    switch (badge) {
      case 'HOT':
        return 'bg-gradient-to-r from-red-500 to-orange-500 text-white';
      case 'NEW':
        return 'bg-gradient-to-r from-green-500 to-emerald-500 text-white';
      case 'BETA':
        return 'bg-gradient-to-r from-blue-500 to-cyan-500 text-white';
      case 'PRO':
        return 'bg-gradient-to-r from-purple-500 to-indigo-500 text-white';
      default:
        return 'bg-slate-600 text-white';
    }
  };

  // Close on route change
  (0, _react.useEffect)(() => {
    onClose();
  }, [location.pathname, onClose]);
  return /*#__PURE__*/(0, _jsxRuntime.jsxs)(_jsxRuntime.Fragment, {
    children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("button", {
      onClick: e => {
        e.preventDefault();
        e.stopPropagation();
        // eslint-disable-next-line no-console
        console.log('Navigation toggle clicked, isOpen:', isOpen);
        onToggle();
      },
      className: "fixed top-4 left-4 z-[9999] bg-slate-800/90 backdrop-blur-sm p-3 rounded-xl text-white hover:bg-slate-700 transition-all duration-200 shadow-lg border border-slate-600 hover:shadow-xl pointer-events-auto cursor-pointer",
      title: isOpen ? 'Close Navigation' : 'Open Navigation',
      children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_framerMotion.AnimatePresence, {
        mode: "wait",
        children: isOpen ? /*#__PURE__*/(0, _jsxRuntime.jsx)(_framerMotion.motion.div, {
          initial: {
            rotate: -90,
            opacity: 0
          },
          animate: {
            rotate: 0,
            opacity: 1
          },
          exit: {
            rotate: 90,
            opacity: 0
          },
          transition: {
            duration: 0.15
          },
          children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_lucideReact.X, {
            className: "w-5 h-5"
          })
        }, "close") : /*#__PURE__*/(0, _jsxRuntime.jsx)(_framerMotion.motion.div, {
          initial: {
            rotate: 90,
            opacity: 0
          },
          animate: {
            rotate: 0,
            opacity: 1
          },
          exit: {
            rotate: -90,
            opacity: 0
          },
          transition: {
            duration: 0.15
          },
          children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_lucideReact.Menu, {
            className: "w-5 h-5"
          })
        }, "menu")
      })
    }), /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
      className: "fixed top-4 left-20 z-[9999] hidden md:flex items-center space-x-3",
      children: [/*#__PURE__*/(0, _jsxRuntime.jsx)(_reactRouterDom.Link, {
        to: "/ml-models",
        className: "text-sm text-gray-300 hover:text-white",
        "aria-label": "AI/ML Models Link",
        children: "AI/ML Models"
      }), /*#__PURE__*/(0, _jsxRuntime.jsx)(_reactRouterDom.Link, {
        to: "/betting",
        className: "text-sm text-gray-300 hover:text-white",
        "aria-label": "Betting Interface Link",
        children: "Betting Interface"
      }), /*#__PURE__*/(0, _jsxRuntime.jsx)(_reactRouterDom.Link, {
        to: "/arbitrage",
        className: "text-sm text-gray-300 hover:text-white",
        "aria-label": "Arbitrage Link",
        children: "Arbitrage"
      }), isLocalAdmin && /*#__PURE__*/(0, _jsxRuntime.jsx)("a", {
        href: "/admin",
        role: "button",
        "aria-label": "Admin",
        className: "text-sm ml-2 inline-flex items-center px-3 py-1 rounded bg-slate-700 text-white text-xs hover:bg-slate-600 transition-colors",
        children: "Admin"
      }), isLocalAdmin && /*#__PURE__*/(0, _jsxRuntime.jsx)("button", {
        type: "button",
        "aria-label": "Switch to User",
        className: "text-sm ml-2 inline-flex items-center px-3 py-1 rounded bg-slate-700 text-white text-xs hover:bg-slate-600 transition-colors",
        onClick: () => {
          try {
            const raw = window.localStorage.getItem('user');
            const parsed = raw ? JSON.parse(raw) : {};
            const newUser = {
              ...(parsed || {}),
              role: 'user',
              permissions: []
            };
            window.localStorage.setItem('user', JSON.stringify(newUser));
          } catch {
            // ignore
          }
          try {
            navigate('/betting');
          } catch {
            window.location.href = '/betting';
          }
        },
        children: "Switch to User"
      })]
    }), /*#__PURE__*/(0, _jsxRuntime.jsx)(_framerMotion.AnimatePresence, {
      children: isOpen && /*#__PURE__*/(0, _jsxRuntime.jsx)(_framerMotion.motion.div, {
        initial: {
          opacity: 0
        },
        animate: {
          opacity: 1
        },
        exit: {
          opacity: 0
        },
        onClick: onClose,
        className: "fixed inset-0 bg-black/50 backdrop-blur-sm z-[9998]"
      })
    }), /*#__PURE__*/(0, _jsxRuntime.jsx)(_framerMotion.AnimatePresence, {
      children: isOpen && /*#__PURE__*/(0, _jsxRuntime.jsxs)(_framerMotion.motion.div, {
        initial: {
          x: -400,
          opacity: 0
        },
        animate: {
          x: 0,
          opacity: 1
        },
        exit: {
          x: -400,
          opacity: 0
        },
        transition: {
          type: "spring",
          damping: 25,
          stiffness: 200
        },
        className: "fixed left-0 top-0 h-full w-80 bg-slate-900/95 backdrop-blur-lg border-r border-slate-700 shadow-2xl z-[9998] flex flex-col",
        role: "navigation",
        "data-testid": "primary-nav",
        children: [/*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
          className: "p-6 border-b border-slate-700",
          children: [/*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
            className: "flex items-center justify-between mb-4",
            children: [/*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
              className: "flex items-center space-x-3",
              children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
                className: "w-10 h-10 bg-gradient-to-r from-cyan-500 to-purple-500 rounded-xl flex items-center justify-center",
                children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_lucideReact.Zap, {
                  className: "w-6 h-6 text-white"
                })
              }), /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
                children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("h1", {
                  className: "text-xl font-bold text-white",
                  children: "A1 Betting"
                }), /*#__PURE__*/(0, _jsxRuntime.jsx)("p", {
                  className: "text-xs text-gray-400",
                  children: "PropFinder Killer"
                })]
              })]
            }), /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
              className: "relative",
              children: /*#__PURE__*/(0, _jsxRuntime.jsxs)("button", {
                className: "p-2 text-gray-400 hover:text-white transition-colors",
                children: [/*#__PURE__*/(0, _jsxRuntime.jsx)(_lucideReact.Bell, {
                  className: "w-5 h-5"
                }), notifications > 0 && /*#__PURE__*/(0, _jsxRuntime.jsx)("span", {
                  className: "absolute -top-1 -right-1 w-5 h-5 bg-red-500 text-white text-xs font-bold rounded-full flex items-center justify-center",
                  children: notifications
                })]
              })
            })]
          }), /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
            className: "relative",
            children: [/*#__PURE__*/(0, _jsxRuntime.jsx)(_lucideReact.Search, {
              className: "absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400"
            }), /*#__PURE__*/(0, _jsxRuntime.jsx)("input", {
              type: "text",
              placeholder: "Search features...",
              value: searchQuery,
              onChange: e => setSearchQuery(e.target.value),
              className: "w-full pl-10 pr-4 py-2 bg-slate-800 border border-slate-600 rounded-lg text-white placeholder-gray-400 focus:border-cyan-400 focus:ring-1 focus:ring-cyan-400 transition-all text-sm"
            })]
          })]
        }), /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
          className: "px-6 py-4 border-b border-slate-700",
          children: /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
            className: "grid grid-cols-2 gap-2",
            children: categories.map(category => {
              const Icon = category.icon;
              const isActive = activeCategory === category.id;
              return /*#__PURE__*/(0, _jsxRuntime.jsxs)("button", {
                onClick: () => setActiveCategory(category.id),
                className: `flex items-center justify-center space-x-2 px-3 py-2 rounded-lg font-medium transition-all text-sm ${isActive ? 'bg-cyan-500 text-white shadow-lg' : 'text-gray-400 hover:text-white hover:bg-slate-800'}`,
                children: [/*#__PURE__*/(0, _jsxRuntime.jsx)(Icon, {
                  className: "w-4 h-4"
                }), /*#__PURE__*/(0, _jsxRuntime.jsx)("span", {
                  children: category.name
                })]
              }, category.id);
            })
          })
        }), /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
          className: "flex-1 overflow-y-auto px-4 py-4",
          children: [/*#__PURE__*/(0, _jsxRuntime.jsx)(_framerMotion.AnimatePresence, {
            mode: "wait",
            children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_framerMotion.motion.div, {
              initial: {
                opacity: 0,
                y: 20
              },
              animate: {
                opacity: 1,
                y: 0
              },
              exit: {
                opacity: 0,
                y: -20
              },
              transition: {
                duration: 0.2
              },
              className: "space-y-2",
              children: filteredItems.map((item, index) => {
                const Icon = item.icon;
                const isCurrent = isCurrentPath(item.href);
                return /*#__PURE__*/(0, _jsxRuntime.jsx)(_framerMotion.motion.div, {
                  initial: {
                    opacity: 0,
                    x: -20
                  },
                  animate: {
                    opacity: 1,
                    x: 0
                  },
                  transition: {
                    delay: index * 0.05
                  },
                  children: /*#__PURE__*/(0, _jsxRuntime.jsxs)(_reactRouterDom.Link, {
                    to: item.href,
                    onClick: onClose,
                    className: `group flex items-center justify-between p-3 rounded-xl transition-all duration-200 ${isCurrent ? 'bg-gradient-to-r from-cyan-500 to-purple-500 text-white shadow-lg' : 'text-gray-300 hover:text-white hover:bg-slate-800/50'}`,
                    children: [/*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
                      className: "flex items-center space-x-3",
                      children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
                        className: `p-2 rounded-lg transition-all ${isCurrent ? 'bg-white/20' : 'bg-slate-800 group-hover:bg-slate-700'}`,
                        children: /*#__PURE__*/(0, _jsxRuntime.jsx)(Icon, {
                          className: "w-4 h-4"
                        })
                      }), /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
                        className: "flex-1",
                        children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
                          className: "font-medium text-sm",
                          children: item.name
                        }), item.description && /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
                          className: `text-xs ${isCurrent ? 'text-white/70' : 'text-gray-400'}`,
                          children: item.description
                        })]
                      })]
                    }), /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
                      className: "flex items-center space-x-2",
                      children: [item.badge && /*#__PURE__*/(0, _jsxRuntime.jsx)("span", {
                        className: `px-2 py-1 text-xs font-bold rounded-full ${getBadgeColor(item.badge, item)}`,
                        children: item.badge
                      }), !isCurrent && /*#__PURE__*/(0, _jsxRuntime.jsx)(_lucideReact.ChevronRight, {
                        className: "w-4 h-4 text-gray-400 group-hover:text-white transition-colors"
                      })]
                    })]
                  })
                }, item.id);
              })
            }, activeCategory)
          }), filteredItems.length === 0 && /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
            className: "text-center py-8",
            children: [/*#__PURE__*/(0, _jsxRuntime.jsx)(_lucideReact.Search, {
              className: "w-12 h-12 text-gray-600 mx-auto mb-4"
            }), /*#__PURE__*/(0, _jsxRuntime.jsx)("p", {
              className: "text-gray-400 text-sm",
              children: "No features found"
            }), /*#__PURE__*/(0, _jsxRuntime.jsx)("button", {
              onClick: () => setSearchQuery(''),
              className: "mt-2 text-cyan-400 text-sm hover:text-cyan-300 transition-colors",
              children: "Clear search"
            })]
          })]
        }), /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
          className: "p-4 border-t border-slate-700",
          children: [/*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
            className: "flex items-center justify-between mb-3",
            children: [/*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
              className: "flex items-center space-x-2",
              children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
                className: "w-8 h-8 bg-slate-700 rounded-full flex items-center justify-center",
                children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_lucideReact.User, {
                  className: "w-4 h-4 text-gray-400"
                })
              }), /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
                children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
                  className: "text-sm font-medium text-white",
                  children: "Pro User"
                }), /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
                  className: "text-xs text-gray-400",
                  children: "Premium Access"
                })]
              })]
            }), /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
              className: "flex items-center space-x-2",
              children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("button", {
                className: "p-2 text-gray-400 hover:text-white transition-colors",
                children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_lucideReact.Settings, {
                  className: "w-4 h-4"
                })
              }), isLocalAdmin && /*#__PURE__*/(0, _jsxRuntime.jsx)("a", {
                href: "/admin",
                role: "button",
                "aria-label": "Admin",
                className: "ml-2 inline-flex items-center px-3 py-1 rounded bg-slate-700 text-white text-xs hover:bg-slate-600 transition-colors",
                children: "Admin"
              })]
            })]
          }), /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
            className: "flex items-center justify-between text-xs",
            children: [/*#__PURE__*/(0, _jsxRuntime.jsxs)("button", {
              className: "flex items-center space-x-1 text-gray-400 hover:text-white transition-colors",
              children: [/*#__PURE__*/(0, _jsxRuntime.jsx)(_lucideReact.HelpCircle, {
                className: "w-3 h-3"
              }), /*#__PURE__*/(0, _jsxRuntime.jsx)("span", {
                children: "Help"
              })]
            }), /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
              className: "flex items-center space-x-1 text-gray-400",
              children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
                className: "w-2 h-2 bg-green-400 rounded-full"
              }), /*#__PURE__*/(0, _jsxRuntime.jsx)("span", {
                children: "Online"
              })]
            })]
          })]
        })]
      })
    })]
  });
};
var _default = exports.default = EnhancedNavigation;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,