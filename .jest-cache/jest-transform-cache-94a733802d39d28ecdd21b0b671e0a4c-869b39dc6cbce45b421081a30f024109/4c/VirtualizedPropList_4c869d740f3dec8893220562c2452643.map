{"version":3,"names":["_reactVirtual","require","_react","_interopRequireDefault","_CondensedPropCard","_jsxRuntime","extractTeamFromMatchup","matchup","split","getGradeFromConfidence","confidence","getLogoUrl","toLowerCase","getAccentColor","includes","VirtualizedPropList","projections","isSelected","addProp","removeProp","expandedRowKey","setExpandedRowKey","expandedCardRef","propAnalystResponses","clicksEnabled","enhancedAnalysisCache","fetchEnhancedAnalysis","loadingAnalysis","containerRef","React","useRef","estimateItemHeight","useCallback","index","baseHeight","isExpanded","id","expandedHeight","virtualizer","useVirtualizer","count","length","getScrollElement","current","estimateSize","overscan","measureElement","element","getBoundingClientRect","height","useEffect","console","log","getVirtualItems","getTotalSize","jsxs","className","children","jsx","toFixed","ref","style","contain","width","position","map","virtualItem","proj","top","left","transform","start","default","player","team","stat","line","grade","logoUrl","accentColor","bookmarked","espnPlayerId","onClick","showStatcastMetrics","sport","statcastData","_originalData","alternativeProps","key","toLocaleString","_default","exports"],"sources":["VirtualizedPropList.tsx"],"sourcesContent":["import { useVirtualizer } from '@tanstack/react-virtual';\r\nimport React from 'react';\r\nimport { EnhancedPropAnalysis } from '../services/EnhancedPropAnalysisService';\r\nimport { FeaturedProp } from '../services/unified/FeaturedPropsService';\r\nimport CondensedPropCard from './CondensedPropCard';\r\n\r\n// Helper functions\r\nconst extractTeamFromMatchup = (matchup: string): string => {\r\n  return matchup.split(' vs ')[0] || matchup.split(' @ ')[0] || matchup;\r\n};\r\n\r\nconst getGradeFromConfidence = (confidence: number): string => {\r\n  return confidence >= 80 ? 'A+' : confidence >= 60 ? 'B' : 'C';\r\n};\r\n\r\nconst getLogoUrl = (matchup: string): string => {\r\n  return matchup ? `/logos/${matchup.split(' ')[0].toLowerCase()}.png` : '';\r\n};\r\n\r\nconst getAccentColor = (matchup: string): string => {\r\n  if (matchup && matchup.toLowerCase().includes('chiefs')) return '#b71c1c';\r\n  if (matchup && matchup.toLowerCase().includes('rams')) return '#0d47a1';\r\n  if (matchup && matchup.toLowerCase().includes('eagles')) return '#004d40';\r\n  return '#222';\r\n};\r\n\r\ninterface VirtualizedPropListProps {\r\n  projections: FeaturedProp[];\r\n  isSelected: (id: string) => boolean;\r\n  addProp: (proj: FeaturedProp, choice: 'over' | 'under') => void;\r\n  removeProp: (propId: string) => void;\r\n  expandedRowKey: string | null;\r\n  setExpandedRowKey: (key: string | null) => void;\r\n  expandedCardRef: React.RefObject<HTMLDivElement | null>;\r\n  propAnalystResponses: Record<string, any>;\r\n  clicksEnabled: boolean;\r\n  enhancedAnalysisCache: Map<string, EnhancedPropAnalysis>;\r\n  fetchEnhancedAnalysis: (proj: FeaturedProp) => Promise<EnhancedPropAnalysis | null>;\r\n  loadingAnalysis: Set<string>;\r\n}\r\n\r\nconst VirtualizedPropList: React.FC<VirtualizedPropListProps> = ({\r\n  projections,\r\n  isSelected,\r\n  addProp,\r\n  removeProp,\r\n  expandedRowKey,\r\n  setExpandedRowKey,\r\n  expandedCardRef,\r\n  propAnalystResponses,\r\n  clicksEnabled,\r\n  enhancedAnalysisCache,\r\n  fetchEnhancedAnalysis,\r\n  loadingAnalysis,\r\n}) => {\r\n  // Create container ref for the virtualizer\r\n  const containerRef = React.useRef<HTMLDivElement>(null);\r\n\r\n  // Calculate estimated item height (this should match your CondensedPropCard height)\r\n  const estimateItemHeight = React.useCallback(\r\n    (index: number) => {\r\n      // Base card height\r\n      const baseHeight = 180;\r\n\r\n      // If this card is expanded, add space for expanded content\r\n      const isExpanded = projections[index]?.id === expandedRowKey;\r\n      const expandedHeight = isExpanded ? 400 : 0; // Estimate expanded content height\r\n\r\n      return baseHeight + expandedHeight;\r\n    },\r\n    [projections, expandedRowKey]\r\n  );\r\n\r\n  // Create the virtualizer\r\n  const virtualizer = useVirtualizer({\r\n    count: projections.length,\r\n    getScrollElement: () => containerRef.current,\r\n    estimateSize: estimateItemHeight,\r\n    overscan: 5, // Render 5 extra items outside the viewport for smooth scrolling\r\n    measureElement: element => {\r\n      // Measure the actual element height for dynamic sizing\r\n      return element.getBoundingClientRect().height;\r\n    },\r\n  });\r\n\r\n  // Debug logging\r\n  React.useEffect(() => {\r\n    console.log('[VirtualizedPropList] Rendering', projections.length, 'items');\r\n    console.log('[VirtualizedPropList] Virtual items:', virtualizer.getVirtualItems().length);\r\n    console.log('[VirtualizedPropList] Total size:', virtualizer.getTotalSize());\r\n  }, [projections.length, virtualizer]);\r\n\r\n  return (\r\n    <div className='w-full'>\r\n      {/* Performance Stats */}\r\n      <div className='mb-4 text-sm text-gray-400 bg-slate-800 rounded p-2 border border-slate-700'>\r\n        <div className='flex justify-between items-center'>\r\n          <span>ðŸ“Š Dataset: {projections.length} props</span>\r\n          <span>ðŸš€ Rendering: {virtualizer.getVirtualItems().length} visible</span>\r\n          <span>\r\n            âš¡ Performance:{' '}\r\n            {((virtualizer.getVirtualItems().length / projections.length) * 100).toFixed(1)}%\r\n            efficiency\r\n          </span>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Virtualized Container */}\r\n      <div\r\n        ref={containerRef}\r\n        className='h-[800px] overflow-auto'\r\n        style={{\r\n          contain: 'strict',\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            height: `${virtualizer.getTotalSize()}px`,\r\n            width: '100%',\r\n            position: 'relative',\r\n          }}\r\n        >\r\n          {virtualizer.getVirtualItems().map(virtualItem => {\r\n            const proj = projections[virtualItem.index];\r\n            const isExpanded = proj.id === expandedRowKey;\r\n\r\n            return (\r\n              <div\r\n                key={virtualItem.key}\r\n                data-index={virtualItem.index}\r\n                ref={virtualizer.measureElement}\r\n                style={{\r\n                  position: 'absolute',\r\n                  top: 0,\r\n                  left: 0,\r\n                  width: '100%',\r\n                  transform: `translateY(${virtualItem.start}px)`,\r\n                }}\r\n              >\r\n                {/* Expanded card wrapper for click-outside detection */}\r\n                <div\r\n                  ref={isExpanded ? expandedCardRef : null}\r\n                  className={`transition-all duration-200 ${isExpanded ? 'z-10 relative' : ''}`}\r\n                >\r\n                  <CondensedPropCard\r\n                    key={proj.id}\r\n                    player={proj.player}\r\n                    team={extractTeamFromMatchup(proj.matchup || '')}\r\n                    stat={proj.stat || 'Unknown'}\r\n                    line={proj.line || 0}\r\n                    confidence={proj.confidence || 0}\r\n                    grade={getGradeFromConfidence(proj.confidence || 0)}\r\n                    logoUrl={getLogoUrl(proj.matchup || '')}\r\n                    accentColor={getAccentColor(proj.matchup || '')}\r\n                    bookmarked={proj.confidence >= 90}\r\n                    matchup={proj.matchup}\r\n                    espnPlayerId={proj.espnPlayerId}\r\n                    onClick={() => {\r\n                      if (!clicksEnabled) return;\r\n                      setExpandedRowKey(isExpanded ? null : proj.id);\r\n                    }}\r\n                    isExpanded={isExpanded}\r\n                    showStatcastMetrics={proj.sport === 'MLB'}\r\n                    statcastData={proj._originalData}\r\n                    alternativeProps={(proj as any).alternativeProps}\r\n                  />\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Load More Button (if needed) */}\r\n      {projections.length > 100 && (\r\n        <div className='mt-4 text-center'>\r\n          <div className='text-sm text-gray-400 bg-slate-800 rounded p-3 border border-slate-700'>\r\n            <div className='flex items-center justify-center space-x-4'>\r\n              <span>âš¡ Virtualized rendering active</span>\r\n              <span>ðŸ“ˆ Smooth scrolling for {projections.length.toLocaleString()} items</span>\r\n              <span>ðŸ”¥ Memory optimized</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VirtualizedPropList;\r\n"],"mappings":"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","ignoreList":[]}