{"version":3,"names":["_react","_interopRequireWildcard","require","React","_enhancedLogger","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","createLazyComponent","importFn","options","fallback","createElement","className","retryDelay","maxRetries","importWithRetry","attempt","error","enhancedLogger","warn","Promise","resolve","setTimeout","undefined","LazyComponent","lazy","WrappedComponent","props","hasError","setHasError","useState","useEffect","FallbackComponent","LazyAsComponent","Forwarder","p","Fragment","Suspense","lazyDisplayName","displayName","withLazyLoading","Component","preloadLazyComponent","catch"],"sources":["lazyLoading.ts"],"sourcesContent":["import * as React from 'react';\r\nimport { lazy, Suspense } from 'react';\r\nimport { enhancedLogger } from './enhancedLogger';\r\n\r\ninterface LazyComponentOptions {\r\n  fallback?: React.ComponentType | (() => React.ReactElement);\r\n  retryDelay?: number;\r\n  maxRetries?: number;\r\n}\r\n\r\n/**\r\n * Creates a lazy-loaded component with error handling and retry logic\r\n */\r\nexport function createLazyComponent<T extends React.ComponentType<unknown>>(\r\n  importFn: () => Promise<{ default: T }>,\r\n  options: LazyComponentOptions = {}\r\n): React.ComponentType<React.ComponentProps<T>> {\r\n  const {\r\n    fallback = () => React.createElement('div', { className: 'text-white p-8' }, 'Loading...'),\r\n    retryDelay = 1000,\r\n    maxRetries = 3\r\n  } = options;\r\n\r\n  // Create a wrapper around the import function to handle retries\r\n  const importWithRetry = async (attempt = 1): Promise<{ default: T }> => {\r\n    try {\r\n      return await importFn();\r\n    } catch (error) {\r\n      if (attempt < maxRetries) {\r\n        enhancedLogger.warn('lazyLoading', 'importWithRetry', `Failed to load component (attempt ${attempt}/${maxRetries}). Retrying in ${retryDelay}ms...`, { attempt, maxRetries }, error as unknown as Error);\r\n        await new Promise(resolve => setTimeout(resolve, retryDelay));\r\n        return importWithRetry(attempt + 1);\r\n      }\r\n      enhancedLogger.error('lazyLoading', 'importWithRetry', 'Failed to load component after maximum retries', undefined, error as unknown as Error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const LazyComponent = lazy(() => importWithRetry());\r\n\r\n  const WrappedComponent: React.ComponentType<React.ComponentProps<T>> = (props) => {\r\n    const [hasError, setHasError] = React.useState(false);\r\n\r\n    // Reset error state when props change\r\n    React.useEffect(() => {\r\n      setHasError(false);\r\n    }, [props]);\r\n\r\n    if (hasError) {\r\n      // Return a simple error fallback (createElement to avoid JSX in .ts file)\r\n      return React.createElement(\r\n        'div',\r\n        { className: 'text-red-400 p-8 text-center' },\r\n        'Failed to load component. Please refresh the page.'\r\n      );\r\n    }\r\n\r\n    const FallbackComponent = typeof fallback === 'function' ? fallback : () => React.createElement(fallback);\r\n\r\n    const LazyAsComponent = (LazyComponent as unknown) as React.ComponentType<React.ComponentProps<T>>;\r\n\r\n    // Forward props to the lazy component with proper typing using a function component\r\n    function Forwarder(p: React.ComponentProps<T>) {\r\n      // cast to any for React.createElement to satisfy overloads\r\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n      return React.createElement(LazyAsComponent as any, p as any);\r\n    }\r\n\r\n    return React.createElement(\r\n      React.Fragment,\r\n      null,\r\n      React.createElement(\r\n        Suspense,\r\n        { fallback: React.createElement(FallbackComponent) },\r\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n  React.createElement(Forwarder as any, props as any)\r\n      )\r\n    );\r\n  };\r\n\r\n  const lazyDisplayName = ((LazyComponent as unknown) as { displayName?: string }).displayName || 'Unknown';\r\n  WrappedComponent.displayName = `LazyComponent(${lazyDisplayName})`;\r\n\r\n  return WrappedComponent;\r\n}\r\n\r\n/**\r\n * Higher-order component for adding lazy loading to existing components\r\n */\r\nexport function withLazyLoading<T extends React.ComponentType<unknown>>(\r\n  Component: T,\r\n  options: LazyComponentOptions = {}\r\n): React.ComponentType<React.ComponentProps<T>> {\r\n  return createLazyComponent(() => Promise.resolve({ default: Component }), options);\r\n}\r\n\r\n/**\r\n * Preload a lazy component\r\n */\r\nexport function preloadLazyComponent<T extends React.ComponentType<unknown>>(\r\n  importFn: () => Promise<{ default: T }>\r\n): Promise<{ default: T }> {\r\n  return importFn().catch(error => {\r\n  enhancedLogger.warn('lazyLoading', 'preloadLazyComponent', 'Failed to preload component', undefined, error as unknown as Error);\r\n    throw error;\r\n  });\r\n}\r\n"],"mappings":"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","ignoreList":[]}