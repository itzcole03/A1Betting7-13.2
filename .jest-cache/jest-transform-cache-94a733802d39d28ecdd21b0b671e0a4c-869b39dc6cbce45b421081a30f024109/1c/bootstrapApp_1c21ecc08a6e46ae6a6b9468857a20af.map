{"version":3,"names":["_env","require","_interopRequireWildcard","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","logger","info","console","bind","debug","error","warn","ensureLoggerLoaded","mod","Promise","resolve","then","modTyped","BOOTSTRAP_FLAG","Symbol","for","getGlobal","globalThis","isBootstrapped","markBootstrapped","timestamp","Date","toISOString","symbol","bootstrapApp","options","startTime","performance","now","environment","getRuntimeEnv","result","alreadyBootstrapped","durationMs","services","authRestored","reliabilityStarted","webVitalsInitialized","errorHandlersRegistered","force","mode","source","userAgent","navigator","initializeErrorHandlers","skipAuth","initializeAuthRestoration","skipReliability","isLeanMode","initializeReliabilityOrchestrator","skipWebVitals","initializeWebVitals","toFixed","Error","message","String","stack","undefined","_environment","__A1_ERROR_HANDLERS_REGISTERED","window","addEventListener","event","includes","preventDefault","filename","lineno","colno","reason","TypeError","errorDetails","reasonType","reasonString","name","code","cause","_authService","isAuthenticated","user","getUser","globalState","__A1_AUTH_RESTORED","email","role","userId","id","reliabilityMonitoringOrchestrator","startMonitoring","webVitalsService","init","localStorage","getItem","URLSearchParams","location","search","__resetBootstrapForTesting","process","env","NODE_ENV"],"sources":["bootstrapApp.ts"],"sourcesContent":["/**\r\n * Bootstrap App Module - Idempotent Application Initialization\r\n * \r\n * Provides centralized, idempotent initialization of core A1Betting platform\r\n * services to eliminate duplicate bootstrap executions.\r\n * \r\n * Features:\r\n * - Global symbol guard prevents duplicate initialization\r\n * - Accurate environment detection and logging\r\n * - Single initialization of auth restoration, ReliabilityOrchestrator\r\n * - Performance timing instrumentation\r\n * - Force option for development/testing scenarios\r\n * \r\n * @module bootstrap/bootstrapApp\r\n */\r\n\r\nimport { getRuntimeEnv, type RuntimeEnv } from './env';\r\n\r\n// Lazily populated logger. Tests mock the logger module and may rely on dynamic\r\n// imports; to ensure the test mocks are used we load the logger at runtime with\r\n// a safe console fallback. This avoids TypeErrors when a mock isn't wired up.\r\nlet logger: {\r\n  info: (...args: unknown[]) => void;\r\n  debug: (...args: unknown[]) => void;\r\n  error: (...args: unknown[]) => void;\r\n  warn: (...args: unknown[]) => void;\r\n} = {\r\n  info: console.info.bind(console),\r\n  debug: console.debug.bind(console),\r\n  error: console.error.bind(console),\r\n  warn: console.warn.bind(console),\r\n};\r\n\r\nasync function ensureLoggerLoaded(): Promise<void> {\r\n  try {\r\n    // dynamic import so jest module mocks are respected\r\n    const mod = await import('../utils/logger');\r\n    // Some modules export a named `logger`, others export a default with `logger`.\r\n    type LoggerModuleShape = {\r\n      logger?: typeof logger;\r\n      default?: { logger?: typeof logger };\r\n    };\r\n\r\n    const modTyped = mod as unknown as LoggerModuleShape;\r\n    if (modTyped.logger) {\r\n      logger = modTyped.logger;\r\n    } else if (modTyped.default && modTyped.default.logger) {\r\n      logger = modTyped.default.logger;\r\n    }\r\n  } catch {\r\n    // keep console fallback\r\n  }\r\n}\r\n\r\n// Global symbol to prevent accidental name collisions\r\nconst BOOTSTRAP_FLAG = Symbol.for('a1.bet.platform.bootstrapped');\r\n\r\n/**\r\n * Type-safe global property access for bootstrap state\r\n */\r\ntype BootstrapGlobalState = Record<symbol, unknown> & {\r\n  __A1_ERROR_HANDLERS_REGISTERED?: boolean;\r\n};\r\n\r\n// Helper functions for type-safe global access\r\nconst getGlobal = (): BootstrapGlobalState => globalThis as unknown as BootstrapGlobalState;\r\n\r\n/**\r\n * Bootstrap result information\r\n */\r\nexport interface BootstrapResult {\r\n  alreadyBootstrapped: boolean;\r\n  environment: RuntimeEnv;\r\n  durationMs: number;\r\n  timestamp: string;\r\n  services: {\r\n    authRestored: boolean;\r\n    reliabilityStarted: boolean;\r\n    webVitalsInitialized: boolean;\r\n    errorHandlersRegistered: boolean;\r\n  };\r\n}\r\n\r\n/**\r\n * Bootstrap options for controlling initialization behavior\r\n */\r\nexport interface BootstrapOptions {\r\n  /** Force re-initialization even if already bootstrapped */\r\n  force?: boolean;\r\n  /** Skip authentication restoration (for testing scenarios) */\r\n  skipAuth?: boolean;\r\n  /** Skip reliability monitoring (for lean mode) */\r\n  skipReliability?: boolean;\r\n  /** Skip Web Vitals initialization (for performance testing) */\r\n  skipWebVitals?: boolean;\r\n}\r\n\r\n/**\r\n * Check if the application has already been bootstrapped\r\n * @returns {boolean} True if already bootstrapped\r\n */\r\nexport function isBootstrapped(): boolean {\r\n  return !!getGlobal()[BOOTSTRAP_FLAG];\r\n}\r\n\r\n/**\r\n * Mark the application as bootstrapped\r\n * @private\r\n */\r\nfunction markBootstrapped(): void {\r\n  getGlobal()[BOOTSTRAP_FLAG] = {\r\n    timestamp: new Date().toISOString(),\r\n    symbol: BOOTSTRAP_FLAG,\r\n  };\r\n}\r\n\r\n/**\r\n * Main bootstrap function with idempotency guarantee\r\n * \r\n * Initializes core platform services in proper order:\r\n * 1. Environment detection & logging setup\r\n * 2. Error handlers registration\r\n * 3. Auth session restoration  \r\n * 4. ReliabilityOrchestrator initialization\r\n * 5. Web Vitals service initialization\r\n * \r\n * @param {BootstrapOptions} options - Bootstrap configuration options\r\n * @returns {Promise<BootstrapResult>} Bootstrap result with timing and status\r\n */\r\nexport async function bootstrapApp(options: BootstrapOptions = {}): Promise<BootstrapResult> {\r\n  const startTime = performance.now();\r\n  const environment = getRuntimeEnv();\r\n  const timestamp = new Date().toISOString();\r\n\r\n  // Ensure test-time mocks for logger are applied before any logger usage\r\n  await ensureLoggerLoaded();\r\n\r\n  // Initialize result structure\r\n  const result: BootstrapResult = {\r\n    alreadyBootstrapped: false,\r\n    environment,\r\n    durationMs: 0,\r\n    timestamp,\r\n    services: {\r\n      authRestored: false,\r\n      reliabilityStarted: false,  \r\n      webVitalsInitialized: false,\r\n      errorHandlersRegistered: false,\r\n    },\r\n  };\r\n\r\n  // Check if already bootstrapped (unless force option is used)\r\n  if (!options.force && isBootstrapped()) {\r\n    result.alreadyBootstrapped = true;\r\n    result.durationMs = performance.now() - startTime;\r\n    \r\n    logger.debug(\r\n      'Bootstrap skipped - already initialized',\r\n      { \r\n        environment: environment.mode,\r\n        timestamp,\r\n        durationMs: result.durationMs,\r\n      },\r\n      'Bootstrap'\r\n    );\r\n    \r\n    return result;\r\n  }\r\n\r\n  // Start bootstrap process\r\n  logger.info(\r\n    `A1Betting Platform Loading - ${environment.mode === 'production' ? 'Production' : environment.mode === 'development' ? 'Development' : 'Test'} Mode`,\r\n    {\r\n      environment: environment.mode,\r\n      source: environment.source,\r\n      timestamp,\r\n      userAgent: typeof navigator !== 'undefined' ? navigator.userAgent : 'N/A',\r\n      force: options.force || false,\r\n    },\r\n    'Bootstrap'\r\n  );\r\n\r\n  try {\r\n    // 1. Initialize error handlers\r\n    await initializeErrorHandlers(environment);\r\n    result.services.errorHandlersRegistered = true;\r\n\r\n    // 2. Initialize auth session restoration (unless skipped)\r\n    if (!options.skipAuth) {\r\n      await initializeAuthRestoration();\r\n      result.services.authRestored = true;\r\n    }\r\n\r\n    // 3. Initialize ReliabilityOrchestrator (unless skipped or in lean mode)\r\n    if (!options.skipReliability && !isLeanMode()) {\r\n      await initializeReliabilityOrchestrator();\r\n      result.services.reliabilityStarted = true;\r\n    }\r\n\r\n    // 4. Initialize Web Vitals service (unless skipped)\r\n    if (!options.skipWebVitals) {\r\n      await initializeWebVitals();\r\n      result.services.webVitalsInitialized = true;\r\n    }\r\n\r\n    // Mark as successfully bootstrapped\r\n    markBootstrapped();\r\n    \r\n    const durationMs = performance.now() - startTime;\r\n    result.durationMs = durationMs;\r\n\r\n    logger.info(\r\n      `Bootstrap ✅ Completed in ${durationMs.toFixed(1)}ms`,\r\n      {\r\n        environment: environment.mode,\r\n        services: result.services,\r\n        durationMs,\r\n        timestamp,\r\n      },\r\n      'Bootstrap'\r\n    );\r\n\r\n    return result;\r\n\r\n  } catch (error) {\r\n    const durationMs = performance.now() - startTime;\r\n    result.durationMs = durationMs;\r\n\r\n    logger.error(\r\n      'Bootstrap failed',\r\n      {\r\n        error: error instanceof Error ? error.message : String(error),\r\n        stack: error instanceof Error ? error.stack : undefined,\r\n        environment: environment.mode,\r\n        durationMs,\r\n        services: result.services,\r\n      },\r\n      'Bootstrap'\r\n    );\r\n\r\n    throw error;\r\n  }\r\n}\r\n\r\n/**\r\n * Initialize global error handlers\r\n * @private\r\n */\r\nasync function initializeErrorHandlers(_environment: RuntimeEnv): Promise<void> {\r\n  // Only register if not already done\r\n  if (!getGlobal().__A1_ERROR_HANDLERS_REGISTERED) {\r\n    // Global error handler\r\n    window.addEventListener('error', (event) => {\r\n      // Suppress known Vite development issues in production\r\n      if (event.error?.message?.includes(\"Cannot read properties of undefined (reading 'frame')\")) {\r\n        logger.warn('Vite error overlay issue suppressed', event.error, 'Bootstrap');\r\n        event.preventDefault();\r\n        return;\r\n      }\r\n\r\n      // Suppress WebSocket connection errors that don't impact core functionality\r\n      if (\r\n        event.error?.message?.includes('WebSocket closed without opened') ||\r\n        event.error?.message?.includes('WebSocket connection failed') ||\r\n        event.error?.message?.includes('Connection refused')\r\n      ) {\r\n        logger.warn('WebSocket connectivity issue (non-critical)', event.error, 'Bootstrap');\r\n        event.preventDefault();\r\n        return;\r\n      }\r\n\r\n      // Suppress fetch errors from API services (expected in development)\r\n      if (\r\n        event.error?.message?.includes('Failed to fetch') ||\r\n        event.error?.message?.includes('TypeError: fetch') ||\r\n        event.error?.message?.includes('API_UNAVAILABLE')\r\n      ) {\r\n        logger.debug('API connectivity issue (non-critical)', event.error, 'Bootstrap');\r\n        event.preventDefault();\r\n        return;\r\n      }\r\n\r\n      // Log all other errors for production monitoring\r\n      logger.error(\r\n        'Global error caught',\r\n        {\r\n          message: event.error?.message,\r\n          filename: event.filename,\r\n          lineno: event.lineno,\r\n          colno: event.colno,\r\n          stack: event.error?.stack,\r\n        },\r\n        'Global'\r\n      );\r\n    });\r\n\r\n    // Unhandled promise rejection handler\r\n    window.addEventListener('unhandledrejection', (event) => {\r\n      // Suppress known Vite WebSocket errors\r\n      if (\r\n        event.reason?.message?.includes('WebSocket closed without opened') ||\r\n        event.reason?.message?.includes('WebSocket connection') ||\r\n        (event.reason instanceof Error && event.reason.message.includes('WebSocket'))\r\n      ) {\r\n        logger.warn('Vite WebSocket error suppressed', { message: event.reason?.message }, 'Bootstrap');\r\n        event.preventDefault();\r\n        return;\r\n      }\r\n\r\n      // Suppress fetch errors from API services (expected in development)\r\n      if (\r\n        event.reason?.message?.includes('Failed to fetch') ||\r\n        event.reason?.message?.includes('TypeError: fetch') ||\r\n        event.reason?.message?.includes('API_UNAVAILABLE') ||\r\n        (event.reason instanceof TypeError && event.reason.message.includes('fetch'))\r\n      ) {\r\n        logger.debug(\r\n          'API connectivity issue (non-critical)',\r\n          { message: event.reason?.message },\r\n          'Bootstrap'\r\n        );\r\n        event.preventDefault();\r\n        return;\r\n      }\r\n\r\n      // Properly serialize the error reason\r\n      const errorDetails = {\r\n        reasonType: typeof event.reason,\r\n        reasonString: String(event.reason),\r\n        message: event.reason?.message || 'No message',\r\n        stack: event.reason?.stack || 'No stack trace',\r\n        name: event.reason?.name || 'Unknown error',\r\n        code: event.reason?.code,\r\n        cause: event.reason?.cause,\r\n      };\r\n\r\n      // Try to extract more details if it's an Error object\r\n      if (event.reason instanceof Error) {\r\n        errorDetails.message = event.reason.message;\r\n        errorDetails.stack = event.reason.stack || 'No stack trace';\r\n        errorDetails.name = event.reason.name;\r\n      }\r\n\r\n      logger.error('Unhandled promise rejection detected', errorDetails, 'Global');\r\n\r\n      // Prevent the default browser handling to avoid \"Uncaught (in promise)\" errors\r\n      event.preventDefault();\r\n    });\r\n\r\n    getGlobal().__A1_ERROR_HANDLERS_REGISTERED = true;\r\n  }\r\n}\r\n\r\n/**\r\n * Initialize authentication session restoration \r\n * @private\r\n */\r\nasync function initializeAuthRestoration(): Promise<void> {\r\n  // Lazy import to avoid circular dependencies\r\n  const { _authService } = await import('../services/authService');\r\n  \r\n  // Only restore if authenticated (prevents duplicate restoration logs)\r\n  if (_authService.isAuthenticated()) {\r\n    const user = _authService.getUser();\r\n    if (user) {\r\n      // Mark as restored to coordinate with AuthContext\r\n      const globalState = window as typeof window & { __A1_AUTH_RESTORED?: boolean };\r\n      globalState.__A1_AUTH_RESTORED = true;\r\n      \r\n      // Log structured auth restoration (only once per bootstrap)\r\n      logger.info(\r\n        '🔐 Authentication restored',\r\n        {\r\n          email: user.email,\r\n          role: user.role,\r\n          userId: user.id,\r\n          timestamp: new Date().toISOString(),\r\n        },\r\n        'Auth'\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Initialize ReliabilityOrchestrator with singleton pattern\r\n * @private  \r\n */\r\nasync function initializeReliabilityOrchestrator(): Promise<void> {\r\n  // Lazy import to avoid circular dependencies\r\n  const { reliabilityMonitoringOrchestrator } = await import('../services/reliabilityMonitoringOrchestrator');\r\n  \r\n  // The orchestrator already has built-in singleton and isActive checks\r\n  // This ensures idempotent initialization\r\n  await reliabilityMonitoringOrchestrator.startMonitoring();\r\n}\r\n\r\n/**\r\n * Initialize Web Vitals service with idempotency\r\n * @private\r\n */\r\nasync function initializeWebVitals(): Promise<void> {\r\n  // Lazy import to avoid circular dependencies  \r\n  const { webVitalsService } = await import('../services/webVitalsService');\r\n  \r\n  // The webVitalsService.init() method already handles idempotency\r\n  webVitalsService.init();\r\n}\r\n\r\n/**\r\n * Check if lean mode is enabled (prevents heavy monitoring in development)\r\n * @private\r\n */\r\nfunction isLeanMode(): boolean {\r\n  return (\r\n    localStorage.getItem('DEV_LEAN_MODE') === 'true' ||\r\n    new URLSearchParams(window.location.search).get('lean') === 'true'\r\n  );\r\n}\r\n\r\n/**\r\n * Reset bootstrap state (for testing scenarios)\r\n * @internal Used only for testing - not part of public API\r\n */\r\nexport function __resetBootstrapForTesting(): void {\r\n  if (process.env.NODE_ENV === 'test') {\r\n    delete getGlobal()[BOOTSTRAP_FLAG];\r\n    delete getGlobal().__A1_ERROR_HANDLERS_REGISTERED;\r\n  }\r\n}"],"mappings":"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","ignoreList":[]}