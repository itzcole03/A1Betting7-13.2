{"version":3,"names":["_axios","_interopRequireDefault","require","_apiConfig","_EnhancedDataValidator","_enhancedLogger","_websocketBuilder","_objectGuards","EnhancedDataManager","constructor","cache","Map","subscriptions","pendingRequests","batchQueue","metrics","totalRequests","cacheHits","cacheMisses","errors","avgResponseTime","lastUpdate","Date","now","websocket","reconnectAttempts","maxReconnectAttempts","batchTimeout","maxCacheSize","compressionThreshold","startBatchProcessor","startCacheCleanup","initializeWebSocket","getBackendUrl","API_BASE_URL","fetchData","endpoint","params","options","ttl","priority","compression","retries","cacheKey","generateCacheKey","startTime","enhancedLogger","debug","cached","getCachedData","duration","updateMetrics","logCacheOperation","logApiRequest","has","get","requestPromise","executeRequest","set","data","setCachedData","dataSize","JSON","stringify","length","delete","error","errorType","Error","name","staleData","getStaleData","warn","message","String","fetchBatch","requests","includes","fetchBatchPredictions","results","groupedRequests","high","filter","r","normal","low","group","request","promise","then","id","catch","undefined","push","Promise","resolve","setTimeout","all","props","Array","isArray","map","url","info","response","axios","post","headers","timeout","predictions","forEach","result","index","safeObjectKeys","subscribe","key","callback","subscription","realtime","prefetch","prefetchData","subs","indexOf","splice","pattern","getPrefetchPredictions","prediction","fetchSportsProps","sport","propType","useCache","consolidate","statTypes","limit","offset","baseUrl","market_type","stat_types","join","rawData","odds","consolidateProps","featuredProps","mapToFeaturedProps","filteredProps","filterByPlayerPosition","updatedData","handlePropsUpdate","isConnectivityError","code","mockProps","player","matchup","stat","line","overOdds","underOdds","confidence","gameTime","toISOString","pickType","p","dataSource","validatedAt","qualityScore","_originalData","fetchPropAnalysis","propId","getMetrics","hitRate","cacheSize","size","from","values","reduce","sum","enhancedMetrics","getRequestMetrics","invalidateCache","event","keysToDelete","type","eventType","gameId","reason","keys","toLowerCase","affectedKeys","invalidatedKeys","remainingCacheSize","warmCache","predictionsCount","warmingPromises","allSettled","clearCache","clear","destroy","close","lastError","attempt","config","getTimeoutForPriority","status","delay","Math","min","pow","console","log","normalizedError","paramsStr","sort","entry","timestamp","accessCount","lastAccess","evictLRU","oldestEntry","oldestTime","entries","responseTime","consolidatedMap","prop","event_id","stat_type","line_score","existing","odds_type","value","consolidated","event_name","validatedProps","propsCount","i","validationResult","dataValidator","validateSportsProp","source","isValid","errorMsg","e","warnings","legacyProp","legacyMapProp","successRate","logDataValidation","errorsCount","mappedProp","player_name","parseFloat","over_odds","under_odds","start_time","espnPlayerId","player_id","playerId","original","mapped","getWebSocketUrl","buildWebSocketUrl","role","version","wsUrl","WebSocket","onopen","onmessage","parse","handleWebSocketMessage","errObj","onclose","onerror","toString","invalidateCachePattern","sub","matchesPattern","str","regex","RegExp","replace","test","setInterval","batch","processBatch","_results","pitcherStatTypes","batterStatTypes","statType","originalData","position","pos","isPitcher","isPitcherStat","some","isBatterStat","shouldKeep","enhancedDataManager","exports"],"sources":["EnhancedDataManager.ts"],"sourcesContent":["/**\r\n * Enhanced Frontend Data Management Service\r\n * Optimized data fetching, caching, and real-time updates for the frontend\r\n */\r\n\r\nimport axios, { AxiosResponse } from 'axios';\r\nimport { API_BASE_URL } from '../config/apiConfig';\r\nimport {\r\n  CacheInvalidationEvent,\r\n  EnhancedRequestMetrics,\r\n  RawSportsData,\r\n  ValidatedSportsProp,\r\n} from '../types/DataValidation';\r\nimport { dataValidator } from './EnhancedDataValidator';\r\nimport { enhancedLogger } from '../utils/enhancedLogger';\r\nimport { buildWebSocketUrl } from '../utils/websocketBuilder';\r\nimport { safeObjectKeys } from '../utils/objectGuards';\r\n\r\ninterface FeaturedProp extends ValidatedSportsProp {\r\n  // Backward compatibility - ValidatedSportsProp now provides all the fields\r\n}\r\n\r\ninterface CacheEntry<T> {\r\n  data: T;\r\n  timestamp: number;\r\n  ttl: number;\r\n  key: string;\r\n  accessCount: number;\r\n  lastAccess: number;\r\n}\r\n\r\ninterface DataSubscription<T = unknown> {\r\n  key: string;\r\n  callback: (data: T) => void;\r\n  options: {\r\n    realtime?: boolean;\r\n    prefetch?: boolean;\r\n    priority?: 'high' | 'normal' | 'low';\r\n  };\r\n}\r\n\r\ninterface BatchRequest {\r\n  id: string;\r\n  endpoint: string;\r\n  params?: Record<string, unknown>;\r\n  priority?: 'high' | 'normal' | 'low';\r\n}\r\n\r\ninterface RequestMetrics {\r\n  totalRequests: number;\r\n  cacheHits: number;\r\n  cacheMisses: number;\r\n  errors: number;\r\n  avgResponseTime: number;\r\n  lastUpdate: number;\r\n}\r\n\r\nclass EnhancedDataManager {\r\n  private cache: Map<string, CacheEntry<unknown>> = new Map();\r\n  private subscriptions: Map<string, DataSubscription<unknown>[]> = new Map();\r\n  private pendingRequests: Map<string, Promise<unknown>> = new Map();\r\n  private batchQueue: BatchRequest[] = [];\r\n  private metrics: RequestMetrics = {\r\n    totalRequests: 0,\r\n    cacheHits: 0,\r\n    cacheMisses: 0,\r\n    errors: 0,\r\n    avgResponseTime: 0,\r\n    lastUpdate: Date.now(),\r\n  };\r\n\r\n  private websocket: WebSocket | null = null;\r\n  private reconnectAttempts = 0;\r\n  private maxReconnectAttempts = 5;\r\n  private batchTimeout = 100; // 100ms batch window\r\n  private maxCacheSize = 1000;\r\n  private compressionThreshold = 10240; // 10KB\r\n\r\n  constructor() {\r\n    this.startBatchProcessor();\r\n    this.startCacheCleanup();\r\n    this.initializeWebSocket();\r\n  }\r\n\r\n  /**\r\n   * Get the backend base URL for API requests\r\n   */\r\n  private getBackendUrl(): string {\r\n    // Use unified API configuration\r\n    return API_BASE_URL;\r\n  }\r\n\r\n  /**\r\n   * Enhanced data fetching with intelligent caching and batching\r\n   */\r\n  async fetchData<T>(\r\n    endpoint: string,\r\n    params?: Record<string, any>,\r\n    options: {\r\n      cache?: boolean;\r\n      ttl?: number;\r\n      priority?: 'high' | 'normal' | 'low';\r\n      compression?: boolean;\r\n      retries?: number;\r\n    } = {}\r\n  ): Promise<T> {\r\n    const {\r\n      cache = true,\r\n      ttl = 300000, // 5 minutes default\r\n      priority = 'normal',\r\n      compression = false,\r\n      retries = 3,\r\n    } = options;\r\n\r\n    const cacheKey = this.generateCacheKey(endpoint, params);\r\n    const startTime = Date.now();\r\n\r\n    enhancedLogger.debug('DataManager', 'fetchData', `Starting request to ${endpoint}`, {\r\n      endpoint,\r\n      params,\r\n      cacheKey,\r\n      priority,\r\n      cache,\r\n    });\r\n\r\n    try {\r\n      // Check cache first\r\n      if (cache) {\r\n        const cached = this.getCachedData<T>(cacheKey);\r\n        if (cached) {\r\n          this.metrics.cacheHits++;\r\n          const duration = Date.now() - startTime;\r\n          this.updateMetrics(duration);\r\n\r\n          enhancedLogger.logCacheOperation('hit', cacheKey, { endpoint, duration });\r\n          enhancedLogger.logApiRequest(endpoint, 'GET', params, duration, 'cached', { priority });\r\n\r\n          return cached;\r\n        }\r\n\r\n        enhancedLogger.logCacheOperation('miss', cacheKey, { endpoint });\r\n      }\r\n\r\n      // Check if request is already pending (deduplication)\r\n      if (this.pendingRequests.has(cacheKey)) {\r\n        enhancedLogger.debug(\r\n          'DataManager',\r\n          'deduplication',\r\n          `Deduplicating request for ${cacheKey}`,\r\n          {\r\n            endpoint,\r\n            cacheKey,\r\n          }\r\n        );\r\n        return (await this.pendingRequests.get(cacheKey)!) as T;\r\n      }\r\n\r\n      // Create the request promise\r\n      const requestPromise = this.executeRequest<T>(endpoint, params, {\r\n        priority,\r\n        compression,\r\n        retries,\r\n      });\r\n\r\n      // Store pending request\r\n      this.pendingRequests.set(cacheKey, requestPromise);\r\n\r\n      try {\r\n        const data = await requestPromise;\r\n        const duration = Date.now() - startTime;\r\n\r\n        // Cache successful response\r\n        if (cache && data) {\r\n          this.setCachedData(cacheKey, data, ttl);\r\n          enhancedLogger.logCacheOperation('set', cacheKey, { endpoint, ttl, duration });\r\n        }\r\n\r\n        this.metrics.cacheMisses++;\r\n        this.updateMetrics(duration);\r\n\r\n        enhancedLogger.logApiRequest(endpoint, 'GET', params, duration, 'success', {\r\n          priority,\r\n          cacheKey,\r\n          dataSize: JSON.stringify(data).length,\r\n        });\r\n\r\n        return data;\r\n      } finally {\r\n        // Clean up pending request\r\n        this.pendingRequests.delete(cacheKey);\r\n      }\r\n    } catch (error) {\r\n      const duration = Date.now() - startTime;\r\n      this.metrics.errors++;\r\n      this.updateMetrics(duration);\r\n\r\n      enhancedLogger.logApiRequest(endpoint, 'GET', params, duration, 'error', {\r\n        priority,\r\n        cacheKey,\r\n        errorType: error instanceof Error ? error.name : 'UnknownError',\r\n      });\r\n\r\n      // Try to return stale cache data as fallback\r\n      if (cache) {\r\n        const staleData = this.getStaleData<T>(cacheKey);\r\n        if (staleData) {\r\n          enhancedLogger.warn(\r\n            'DataManager',\r\n            'staleDataFallback',\r\n            `Returning stale data for ${cacheKey}`,\r\n            {\r\n              endpoint,\r\n              cacheKey,\r\n              error: error instanceof Error ? error.message : String(error),\r\n            },\r\n            error instanceof Error ? error : new Error(String(error))\r\n          );\r\n          return staleData;\r\n        }\r\n      }\r\n\r\n      enhancedLogger.error(\r\n        'DataManager',\r\n        'fetchData',\r\n        `Request failed for ${endpoint}`,\r\n        {\r\n          endpoint,\r\n          params,\r\n          cacheKey,\r\n          duration,\r\n          priority,\r\n          retries,\r\n        },\r\n        error instanceof Error ? error : new Error(String(error))\r\n      );\r\n\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Batch multiple requests for optimal performance\r\n   */\r\n  async fetchBatch<T>(requests: BatchRequest[]): Promise<Record<string, T>> {\r\n    // Special handling for batch predictions endpoint\r\n    if (requests.length > 0 && requests[0].endpoint.includes('batch-predictions')) {\r\n      return this.fetchBatchPredictions(requests);\r\n    }\r\n\r\n    const results: Record<string, T> = {};\r\n    const pendingRequests: Promise<void>[] = [];\r\n\r\n    // Group requests by priority\r\n    const groupedRequests = {\r\n      high: requests.filter(r => r.priority === 'high'),\r\n      normal: requests.filter(r => r.priority === 'normal' || !r.priority),\r\n      low: requests.filter(r => r.priority === 'low'),\r\n    };\r\n\r\n    // Process high priority requests first\r\n    for (const group of [groupedRequests.high, groupedRequests.normal, groupedRequests.low]) {\r\n      for (const request of group) {\r\n        const promise = this.fetchData<T>(request.endpoint, request.params, {\r\n          priority: request.priority,\r\n        })\r\n          .then(data => {\r\n            results[request.id] = data;\r\n          })\r\n          .catch(error => {\r\n            enhancedLogger.error('DataManager', 'batchRequest', `Batch request failed for ${request.id}`, undefined, error as Error);\r\n            results[request.id] = null as any;\r\n          });\r\n\r\n        pendingRequests.push(promise);\r\n\r\n        // Add small delay between requests to avoid overwhelming the server\r\n        if (group.length > 5) {\r\n          await new Promise(resolve => setTimeout(resolve, 10));\r\n        }\r\n      }\r\n    }\r\n\r\n    await Promise.all(pendingRequests);\r\n    return results;\r\n  }\r\n\r\n  /**\r\n   * Special method for batch predictions - makes a single POST request to backend\r\n   */\r\n  private async fetchBatchPredictions<T>(requests: BatchRequest[]): Promise<Record<string, T>> {\r\n    const results: Record<string, T> = {};\r\n\r\n    try {\r\n      // Handle the case where we have a single request with an array of props\r\n      let props: any[];\r\n\r\n      if (requests.length === 1 && Array.isArray(requests[0].params)) {\r\n        // Single batch request containing array of props\r\n        props = requests[0].params;\r\n      } else {\r\n        // Multiple individual requests - convert to props array\r\n        props = requests.map(request => request.params);\r\n      }\r\n\r\n      // Make single POST request to batch predictions endpoint\r\n      const url = `${this.getBackendUrl()}/api/unified/batch-predictions`;\r\n  enhancedLogger.info('DataManager', 'batchPredictions', `Making batch predictions request to ${url} with ${props.length} props`);\r\n\r\n      const response = await axios.post(url, props, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        timeout: 8000, // 8 second timeout for batch operations - faster fallback\r\n      });\r\n\r\n      // Handle backend response format\r\n      if (response.data && Array.isArray(response.data.predictions)) {\r\n        // Backend returns { predictions: [...], errors: [...] }\r\n        if (requests.length === 1 && Array.isArray(requests[0].params)) {\r\n          // Single batch request - store entire response under the single request ID\r\n          results[requests[0].id] = response.data;\r\n        } else {\r\n          // Multiple individual requests\r\n          response.data.predictions.forEach((result: any, index: number) => {\r\n            if (index < requests.length) {\r\n              results[requests[index].id] = result;\r\n            }\r\n          });\r\n        }\r\n      } else if (response.data && Array.isArray(response.data.results)) {\r\n        // Backend returns { results: [...] }\r\n        if (requests.length === 1 && Array.isArray(requests[0].params)) {\r\n          results[requests[0].id] = response.data;\r\n        } else {\r\n          response.data.results.forEach((result: any, index: number) => {\r\n            if (index < requests.length) {\r\n              results[requests[index].id] = result;\r\n            }\r\n          });\r\n        }\r\n      } else if (Array.isArray(response.data)) {\r\n        // Backend returns array directly\r\n        if (requests.length === 1 && Array.isArray(requests[0].params)) {\r\n          results[requests[0].id] = { predictions: response.data } as T;\r\n        } else {\r\n          response.data.forEach((result: any, index: number) => {\r\n            if (index < requests.length) {\r\n              results[requests[index].id] = result;\r\n            }\r\n          });\r\n        }\r\n      } else {\r\n        enhancedLogger.warn('DataManager', 'batchPredictions', 'Unexpected batch predictions response format', { data: response.data });\r\n      }\r\n\r\n      enhancedLogger.info('DataManager', 'batchPredictions', `Batch predictions completed: ${safeObjectKeys(results).length} results`);\r\n    } catch (error: any) {\r\n      enhancedLogger.error('DataManager', 'batchPredictions', 'Batch predictions request failed', undefined, error as Error);\r\n\r\n      // Mark all requests as failed\r\n      requests.forEach(request => {\r\n        results[request.id] = null as any;\r\n      });\r\n    }\r\n\r\n    return results;\r\n  }\r\n\r\n  /**\r\n   * Subscribe to real-time data updates\r\n   */\r\n  subscribe(\r\n    key: string,\r\n    callback: (data: any) => void,\r\n    options: {\r\n      realtime?: boolean;\r\n      prefetch?: boolean;\r\n      priority?: 'high' | 'normal' | 'low';\r\n    } = {}\r\n  ): () => void {\r\n    if (!this.subscriptions.has(key)) {\r\n      this.subscriptions.set(key, []);\r\n    }\r\n\r\n    const subscription: DataSubscription = {\r\n      key,\r\n      callback,\r\n      options: {\r\n        realtime: true,\r\n        prefetch: false,\r\n        priority: 'normal',\r\n        ...options,\r\n      },\r\n    };\r\n\r\n    this.subscriptions.get(key)!.push(subscription);\r\n\r\n    // Enable WebSocket if real-time is requested\r\n    if (options.realtime && !this.websocket) {\r\n      this.initializeWebSocket();\r\n    }\r\n\r\n    // Prefetch data if requested\r\n    if (options.prefetch) {\r\n      this.prefetchData(key);\r\n    }\r\n\r\n    // Return unsubscribe function\r\n    return () => {\r\n      const subs = this.subscriptions.get(key);\r\n      if (subs) {\r\n        const index = subs.indexOf(subscription);\r\n        if (index > -1) {\r\n          subs.splice(index, 1);\r\n        }\r\n        if (subs.length === 0) {\r\n          this.subscriptions.delete(key);\r\n        }\r\n      }\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Prefetch data based on predicted user behavior\r\n   */\r\n  async prefetchData(pattern: string): Promise<void> {\r\n    try {\r\n      // Analyze access patterns and prefetch likely needed data\r\n      const predictions = this.getPrefetchPredictions(pattern);\r\n\r\n      for (const prediction of predictions) {\r\n          this.fetchData(prediction.endpoint, prediction.params, {\r\n            priority: 'low',\r\n            cache: true,\r\n            ttl: 600000, // 10 minutes for prefetched data\r\n          }).catch(error => {\r\n            enhancedLogger.debug('DataManager', 'prefetch', `Prefetch failed for ${prediction.endpoint}`, undefined, error as Error);\r\n          });\r\n      }\r\n    } catch (error) {\r\n      enhancedLogger.error('DataManager', 'prefetch', 'Prefetch error', undefined, error as Error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Optimized data fetching for sports props with smart consolidation\r\n   */\r\n  async fetchSportsProps(\r\n    sport: string,\r\n    propType: string = 'player',\r\n    options: {\r\n      useCache?: boolean;\r\n      realtime?: boolean;\r\n      consolidate?: boolean;\r\n      statTypes?: string[]; // Add stat types filtering\r\n      limit?: number; // Add pagination support\r\n      offset?: number;\r\n    } = {}\r\n  ): Promise<FeaturedProp[]> {\r\n    const {\r\n      useCache = true,\r\n      realtime = false,\r\n      consolidate = true,\r\n      statTypes,\r\n      limit = 50,\r\n      offset = 0,\r\n    } = options;\r\n\r\n    try {\r\n      // Fetch raw props data with absolute URLs\r\n      const baseUrl = this.getBackendUrl();\r\n      const endpoint =\r\n        sport === 'MLB' ? `${baseUrl}/mlb/odds-comparison/` : `${baseUrl}/api/props/${sport}`;\r\n      const params = {\r\n        market_type: propType === 'player' ? 'playerprops' : 'regular',\r\n        ...(statTypes && statTypes.length > 0 && { stat_types: statTypes.join(',') }),\r\n        limit,\r\n        offset,\r\n      };\r\n\r\n      // Debug cache key generation\r\n      const cacheKey = this.generateCacheKey(endpoint, params);\r\n      enhancedLogger.debug('DataManager', 'fetchSportsProps', `fetchSportsProps cache key: ${cacheKey}`, { params, statTypes });\r\n\r\n      const rawData = await this.fetchData<any>(endpoint, params, {\r\n        cache: useCache,\r\n        ttl: 180000, // 3 minutes for props data\r\n        priority: 'high',\r\n      });\r\n\r\n      let props: any[] = [];\r\n      if (Array.isArray(rawData)) {\r\n        props = rawData;\r\n      } else if (Array.isArray(rawData?.odds)) {\r\n        props = rawData.odds;\r\n      } else if (Array.isArray(rawData?.data)) {\r\n        props = rawData.data;\r\n      } else {\r\n        enhancedLogger.warn('DataManager', 'fetchSportsProps', 'Unexpected rawData format', { rawData });\r\n      }\r\n\r\n      // Consolidate props if requested\r\n      if (consolidate && props.length > 0) {\r\n        props = this.consolidateProps(props);\r\n      }\r\n\r\n      // Map to FeaturedProp interface, passing sport context\r\n      const featuredProps = this.mapToFeaturedProps(props, sport);\r\n\r\n      // Apply position-based filtering for MLB to ensure logical player-stat combinations\r\n      const filteredProps =\r\n        sport === 'MLB' ? this.filterByPlayerPosition(featuredProps) : featuredProps;\r\n\r\n  enhancedLogger.info('DataManager', 'positionFilter', `Position filtering: ${featuredProps.length} -> ${filteredProps.length} props`);\r\n\r\n      // Subscribe to real-time updates if requested\r\n      if (realtime) {\r\n        this.subscribe(\r\n          `sports:${sport}:${propType}`,\r\n          updatedData => {\r\n            // Handle real-time prop updates\r\n            this.handlePropsUpdate(sport, propType, updatedData);\r\n          },\r\n          { realtime: true }\r\n        );\r\n      }\r\n\r\n      return filteredProps;\r\n    } catch (error) {\r\n      enhancedLogger.error('DataManager', 'fetchSportsProps', `Failed to fetch ${sport} props`, undefined, error as Error);\r\n\r\n      // Check if this is a connectivity issue (including axios errors)\r\n      const isConnectivityError =\r\n        error instanceof Error &&\r\n        (error.message.includes('Failed to fetch') ||\r\n          error.message.includes('Network Error') ||\r\n          error.message.includes('timeout') ||\r\n          error.message.includes('signal timed out') ||\r\n          error.name === 'NetworkError' ||\r\n          (error as any).code === 'ERR_NETWORK');\r\n\r\n      if (isConnectivityError) {\r\n        enhancedLogger.info('DataManager', 'fetchSportsProps', `Backend unavailable for ${sport} - using mock data`);\r\n\r\n        // Return mock props when backend is unavailable\r\n        const mockProps = [\r\n          {\r\n            id: 'mock-aaron-judge-hr',\r\n            player: 'Aaron Judge',\r\n            matchup: 'Yankees vs Red Sox',\r\n            stat: 'Home Runs',\r\n            line: 1.5,\r\n            overOdds: 120,\r\n            underOdds: -110,\r\n            confidence: 85,\r\n            sport: sport,\r\n            gameTime: new Date().toISOString(),\r\n            pickType: 'over',\r\n          },\r\n          {\r\n            id: 'mock-mike-trout-hits',\r\n            player: 'Mike Trout',\r\n            matchup: 'Angels vs Astros',\r\n            stat: 'Hits',\r\n            line: 1.5,\r\n            overOdds: -105,\r\n            underOdds: -115,\r\n            confidence: 78,\r\n            sport: sport,\r\n            gameTime: new Date().toISOString(),\r\n            pickType: 'over',\r\n          },\r\n          {\r\n            id: 'mock-mookie-betts-rbis',\r\n            player: 'Mookie Betts',\r\n            matchup: 'Dodgers vs Giants',\r\n            stat: 'RBIs',\r\n            line: 0.5,\r\n            overOdds: 110,\r\n            underOdds: -130,\r\n            confidence: 82,\r\n            sport: sport,\r\n            gameTime: new Date().toISOString(),\r\n            pickType: 'over',\r\n          },\r\n        ];\r\n\r\n        // Ensure mockProps match FeaturedProp interface\r\n        return mockProps.map(p => ({\r\n          ...p,\r\n          dataSource: 'mock',\r\n          validatedAt: new Date().toISOString(),\r\n          qualityScore: 50,\r\n          _originalData: p,\r\n        })) as FeaturedProp[];\r\n      }\r\n\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Enhanced prop analysis fetching with intelligent caching\r\n   */\r\n  async fetchPropAnalysis(\r\n    propId: string,\r\n    player: string,\r\n    stat: string,\r\n    options: {\r\n      useCache?: boolean;\r\n      priority?: 'high' | 'normal' | 'low';\r\n    } = {}\r\n  ): Promise<any> {\r\n    const { useCache = true, priority = 'normal' } = options;\r\n\r\n    const endpoint = '/api/prop-analysis/enhanced';\r\n    const params = { propId, player, stat };\r\n\r\n    return await this.fetchData(endpoint, params, {\r\n      cache: useCache,\r\n      ttl: 600000, // 10 minutes for analysis\r\n      priority,\r\n      compression: true, // Analysis data can be large\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Get comprehensive performance metrics\r\n   */\r\n  getMetrics(): RequestMetrics & {\r\n    cacheSize: number;\r\n    hitRate: number;\r\n    subscriptions: number;\r\n    pendingRequests: number;\r\n    enhancedMetrics: EnhancedRequestMetrics;\r\n  } {\r\n    const totalRequests = this.metrics.cacheHits + this.metrics.cacheMisses;\r\n    const hitRate = totalRequests > 0 ? (this.metrics.cacheHits / totalRequests) * 100 : 0;\r\n\r\n    return {\r\n      ...this.metrics,\r\n      cacheSize: this.cache.size,\r\n      hitRate,\r\n      subscriptions: Array.from(this.subscriptions.values()).reduce(\r\n        (sum, subs) => sum + subs.length,\r\n        0\r\n      ),\r\n      pendingRequests: this.pendingRequests.size,\r\n  enhancedMetrics: enhancedLogger.getRequestMetrics(),\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Invalidate cache based on events\r\n   */\r\n  invalidateCache(event: CacheInvalidationEvent): void {\r\n    const keysToDelete: string[] = [];\r\n\r\n    enhancedLogger.info(\r\n      'DataManager',\r\n      'cacheInvalidation',\r\n      `Processing cache invalidation event: ${event.type}`,\r\n      {\r\n        eventType: event.type,\r\n        sport: event.sport,\r\n        gameId: event.gameId,\r\n        propId: event.propId,\r\n        reason: event.reason,\r\n      }\r\n    );\r\n\r\n    switch (event.type) {\r\n      case 'sport_update':\r\n        if (event.sport) {\r\n          for (const key of Array.from(this.cache.keys())) {\r\n            if (key.includes(event.sport.toLowerCase())) {\r\n              keysToDelete.push(key);\r\n            }\r\n          }\r\n        }\r\n        break;\r\n\r\n      case 'prop_update':\r\n        if (event.propId) {\r\n          for (const key of Array.from(this.cache.keys())) {\r\n            if (key.includes(event.propId)) {\r\n              keysToDelete.push(key);\r\n            }\r\n          }\r\n        }\r\n        break;\r\n\r\n      case 'game_update':\r\n        if (event.gameId) {\r\n          for (const key of Array.from(this.cache.keys())) {\r\n            if (key.includes(event.gameId)) {\r\n              keysToDelete.push(key);\r\n            }\r\n          }\r\n        }\r\n        break;\r\n\r\n      case 'manual':\r\n        keysToDelete.push(...event.affectedKeys);\r\n        break;\r\n\r\n      case 'time_based':\r\n        // Already handled by cache cleanup\r\n        break;\r\n    }\r\n\r\n    // Remove invalidated entries\r\n    keysToDelete.forEach(key => {\r\n      this.cache.delete(key);\r\n      enhancedLogger.logCacheOperation('invalidate', key, {\r\n        eventType: event.type,\r\n        reason: event.reason,\r\n      });\r\n    });\r\n\r\n    enhancedLogger.info(\r\n      'DataManager',\r\n      'cacheInvalidation',\r\n      `Invalidated ${keysToDelete.length} cache entries`,\r\n      {\r\n        eventType: event.type,\r\n        invalidatedKeys: keysToDelete.length,\r\n        remainingCacheSize: this.cache.size,\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Warm cache with predicted data needs\r\n   */\r\n  async warmCache(\r\n    predictions: Array<{ endpoint: string; params?: any; sport?: string }>\r\n  ): Promise<void> {\r\n    enhancedLogger.info(\r\n      'DataManager',\r\n      'cacheWarming',\r\n      `Starting cache warming for ${predictions.length} predictions`,\r\n      {\r\n        predictionsCount: predictions.length,\r\n      }\r\n    );\r\n\r\n    const warmingPromises = predictions.map(async (prediction, index) => {\r\n      try {\r\n        await new Promise(resolve => setTimeout(resolve, index * 50)); // Stagger requests\r\n        await this.fetchData(prediction.endpoint, prediction.params, {\r\n          priority: 'low',\r\n          cache: true,\r\n          ttl: 600000, // 10 minutes for warmed data\r\n        });\r\n\r\n        enhancedLogger.debug(\r\n          'DataManager',\r\n          'cacheWarming',\r\n          `Successfully warmed cache for ${prediction.endpoint}`,\r\n          {\r\n            endpoint: prediction.endpoint,\r\n            sport: prediction.sport,\r\n          }\r\n        );\r\n      } catch (error) {\r\n        enhancedLogger.warn(\r\n          'DataManager',\r\n          'cacheWarming',\r\n          `Failed to warm cache for ${prediction.endpoint}`,\r\n          {\r\n            endpoint: prediction.endpoint,\r\n            sport: prediction.sport,\r\n          },\r\n          error instanceof Error ? error : new Error(String(error))\r\n        );\r\n      }\r\n    });\r\n\r\n    await Promise.allSettled(warmingPromises);\r\n\r\n    enhancedLogger.info('DataManager', 'cacheWarming', 'Cache warming completed', {\r\n      predictionsCount: predictions.length,\r\n      cacheSize: this.cache.size,\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Clear cache and reset state\r\n   */\r\n  clearCache(): void {\r\n    this.cache.clear();\r\n    this.pendingRequests.clear();\r\n    enhancedLogger.info('DataManager', 'cache', 'Cache cleared');\r\n  }\r\n\r\n  /**\r\n   * Graceful shutdown\r\n   */\r\n  destroy(): void {\r\n    if (this.websocket) {\r\n      this.websocket.close();\r\n      this.websocket = null;\r\n    }\r\n    this.clearCache();\r\n    this.subscriptions.clear();\r\n  }\r\n\r\n  // Private methods\r\n\r\n  private async executeRequest<T>(\r\n    endpoint: string,\r\n    params?: Record<string, any>,\r\n    options: {\r\n      priority?: 'high' | 'normal' | 'low';\r\n      compression?: boolean;\r\n      retries?: number;\r\n    } = {}\r\n  ): Promise<T> {\r\n    const { retries = 0, compression = false } = options; // Disable retries for faster fallback\r\n\r\n    let lastError: Error | undefined;\r\n\r\n    for (let attempt = 0; attempt <= retries; attempt++) {\r\n      try {\r\n        const config: any = {\r\n          timeout: this.getTimeoutForPriority(options.priority),\r\n          headers: {},\r\n        };\r\n\r\n        if (compression) {\r\n          config.headers['Accept-Encoding'] = 'gzip, deflate, br';\r\n        }\r\n\r\n        let response: AxiosResponse<T>;\r\n\r\n        if (params && safeObjectKeys(params).length > 0) {\r\n          response = await axios.get(endpoint, { params, ...config });\r\n        } else {\r\n          response = await axios.get(endpoint, config);\r\n        }\r\n\r\n        this.metrics.totalRequests++;\r\n\r\n        return response.data;\r\n      } catch (error: any) {\r\n        lastError = error;\r\n\r\n        // Don't retry on client errors (4xx)\r\n        if (error.response?.status >= 400 && error.response?.status < 500) {\r\n          break;\r\n        }\r\n\r\n        // Exponential backoff for retries\r\n        if (attempt < retries) {\r\n          const delay = Math.min(1000 * Math.pow(2, attempt), 5000);\r\n          await new Promise(resolve => setTimeout(resolve, delay));\r\n          console.log(\r\n            `[DataManager] Retrying request to ${endpoint} (attempt ${attempt + 2}/${retries + 1})`\r\n          );\r\n        }\r\n      }\r\n    }\r\n\r\n    // Check if this is a connectivity issue and normalize the error message\r\n    if (lastError) {\r\n      const isConnectivityError =\r\n        lastError.message.includes('Network Error') ||\r\n        lastError.message.includes('Failed to fetch') ||\r\n        lastError.message.includes('timeout') ||\r\n        (lastError as any).code === 'ERR_NETWORK' ||\r\n        !(lastError as any).response; // No response means network issue\r\n\r\n      if (isConnectivityError) {\r\n        // Create a normalized error that fallback logic can detect\r\n        const normalizedError = new Error('Failed to fetch');\r\n        normalizedError.name = 'NetworkError';\r\n        throw normalizedError;\r\n      }\r\n    }\r\n\r\n    throw lastError!;\r\n  }\r\n\r\n  private generateCacheKey(endpoint: string, params?: Record<string, any>): string {\r\n    const paramsStr = params ? JSON.stringify(params, safeObjectKeys(params).sort()) : '';\r\n    return `${endpoint}${paramsStr}`;\r\n  }\r\n\r\n  private getCachedData<T>(key: string): T | null {\r\n    const entry = this.cache.get(key);\r\n    if (!entry) return null;\r\n\r\n    const now = Date.now();\r\n    if (now > entry.timestamp + entry.ttl) {\r\n      this.cache.delete(key);\r\n      return null;\r\n    }\r\n\r\n    // Update access statistics\r\n    entry.accessCount++;\r\n    entry.lastAccess = now;\r\n\r\n    return entry.data as T;\r\n  }\r\n\r\n  private getStaleData<T>(key: string): T | null {\r\n    const entry = this.cache.get(key);\r\n    return entry ? (entry.data as T) : null;\r\n  }\r\n\r\n  private setCachedData<T>(key: string, data: T, ttl: number): void {\r\n    // Implement LRU eviction if cache is full\r\n    if (this.cache.size >= this.maxCacheSize) {\r\n      this.evictLRU();\r\n    }\r\n\r\n    const entry: CacheEntry<T> = {\r\n      data,\r\n      timestamp: Date.now(),\r\n      ttl,\r\n      key,\r\n      accessCount: 1,\r\n      lastAccess: Date.now(),\r\n    };\r\n\r\n    this.cache.set(key, entry);\r\n  }\r\n\r\n  private evictLRU(): void {\r\n    let oldestEntry: [string, CacheEntry<any>] | null = null;\r\n    let oldestTime = Date.now();\r\n\r\n    for (const [key, entry] of Array.from(this.cache.entries())) {\r\n      if (entry.lastAccess < oldestTime) {\r\n        oldestTime = entry.lastAccess;\r\n        oldestEntry = [key, entry];\r\n      }\r\n    }\r\n\r\n    if (oldestEntry) {\r\n      this.cache.delete(oldestEntry[0]);\r\n      enhancedLogger.debug('DataManager', 'evictLRU', `Evicted LRU cache entry: ${oldestEntry[0]}`);\r\n    }\r\n  }\r\n\r\n  private updateMetrics(responseTime: number): void {\r\n    this.metrics.avgResponseTime = this.metrics.avgResponseTime * 0.9 + responseTime * 0.1;\r\n    this.metrics.lastUpdate = Date.now();\r\n  }\r\n\r\n  private getTimeoutForPriority(priority?: 'high' | 'normal' | 'low'): number {\r\n    switch (priority) {\r\n      case 'high':\r\n        return 5000; // 5 seconds for high priority - fail fast to use mock data\r\n      case 'low':\r\n        return 8000; // 8 seconds for low priority\r\n      default:\r\n        return 6000; // 6 seconds for normal priority\r\n    }\r\n  }\r\n\r\n  private consolidateProps(props: any[]): any[] {\r\n    const consolidatedMap = new Map<string, any>();\r\n\r\n    for (const prop of props) {\r\n      const key = `${prop.event_id || prop.id}-${prop.stat_type}-${\r\n        prop.line || prop.line_score || 0\r\n      }`;\r\n\r\n      if (prop.stat_type?.toLowerCase() === 'totals') {\r\n        if (consolidatedMap.has(key)) {\r\n          const existing = consolidatedMap.get(key);\r\n          if (prop.odds_type?.toLowerCase().includes('over')) {\r\n            existing.overOdds = prop.value || prop.odds;\r\n          } else if (prop.odds_type?.toLowerCase().includes('under')) {\r\n            existing.underOdds = prop.value || prop.odds;\r\n          }\r\n        } else {\r\n          const consolidated = { ...prop };\r\n          consolidated.player = prop.event_name || prop.matchup || 'Total (Game)';\r\n\r\n          if (prop.odds_type?.toLowerCase().includes('over')) {\r\n            consolidated.overOdds = prop.value || prop.odds;\r\n            consolidated.underOdds = null;\r\n          } else if (prop.odds_type?.toLowerCase().includes('under')) {\r\n            consolidated.overOdds = null;\r\n            consolidated.underOdds = prop.value || prop.odds;\r\n          }\r\n\r\n          consolidatedMap.set(key, consolidated);\r\n        }\r\n      } else {\r\n        consolidatedMap.set(key, prop);\r\n      }\r\n    }\r\n\r\n    return Array.from(consolidatedMap.values());\r\n  }\r\n\r\n  private mapToFeaturedProps(props: any[], sport?: string): FeaturedProp[] {\r\n    const startTime = Date.now();\r\n    const validatedProps: FeaturedProp[] = [];\r\n    const errors: string[] = [];\r\n\r\n    enhancedLogger.debug(\r\n      'DataManager',\r\n      'mapToFeaturedProps',\r\n      `Starting validation of ${props.length} props`,\r\n      {\r\n        sport,\r\n        propsCount: props.length,\r\n      }\r\n    );\r\n\r\n    for (let i = 0; i < props.length; i++) {\r\n      const prop = props[i];\r\n\r\n      try {\r\n        // Use the enhanced validator\r\n        const validationResult = dataValidator.validateSportsProp(prop as RawSportsData, sport, {\r\n          source: 'mapToFeaturedProps',\r\n          timestamp: Date.now(),\r\n        });\r\n\r\n        if (validationResult.isValid && validationResult.data) {\r\n          validatedProps.push(validationResult.data);\r\n        } else {\r\n          // Log validation failure but continue processing\r\n          const errorMsg = validationResult.errors.map(e => e.message).join(', ');\r\n          errors.push(`Prop ${i}: ${errorMsg}`);\r\n\r\n          enhancedLogger.warn(\r\n            'DataManager',\r\n            'propValidation',\r\n            `Prop validation failed: ${errorMsg}`,\r\n            {\r\n              prop: prop,\r\n              sport,\r\n              errors: validationResult.errors,\r\n              warnings: validationResult.warnings,\r\n            }\r\n          );\r\n        }\r\n      } catch (error) {\r\n        // Fallback to legacy mapping for compatibility\r\n        const legacyProp = this.legacyMapProp(prop, sport);\r\n        if (legacyProp) {\r\n          validatedProps.push(legacyProp);\r\n          enhancedLogger.warn(\r\n            'DataManager',\r\n            'fallbackMapping',\r\n            `Used legacy mapping for prop due to validation error`,\r\n            {\r\n              prop: prop,\r\n              sport,\r\n              error: error instanceof Error ? error.message : String(error),\r\n            }\r\n          );\r\n        }\r\n      }\r\n    }\r\n\r\n    const duration = Date.now() - startTime;\r\n    const successRate = props.length > 0 ? (validatedProps.length / props.length) * 100 : 0;\r\n\r\n    enhancedLogger.logDataValidation(\r\n      'mapToFeaturedProps',\r\n      sport || 'Unknown',\r\n      props.length,\r\n      validatedProps.length,\r\n      errors.length,\r\n      validatedProps.length > 0\r\n        ? validatedProps.reduce((sum, p) => sum + p.qualityScore, 0) / validatedProps.length\r\n        : 0,\r\n      duration,\r\n      { successRate, errorsCount: errors.length }\r\n    );\r\n\r\n    return validatedProps;\r\n  }\r\n\r\n  /**\r\n   * Legacy prop mapping for fallback compatibility\r\n   */\r\n  private legacyMapProp(prop: any, sport?: string): FeaturedProp | null {\r\n    try {\r\n      const mappedProp = {\r\n        id: prop.id || prop.event_id || `${prop.player_name}-${prop.stat_type}`,\r\n        player: prop.player || prop.player_name || prop.event_name || 'Unknown',\r\n        matchup: prop.matchup || prop.event_name || 'Unknown vs Unknown',\r\n        stat: prop.stat || prop.stat_type || 'Unknown',\r\n        line: parseFloat(prop.line || prop.line_score || 0),\r\n        overOdds: parseFloat(prop.overOdds || prop.over_odds || prop.value || 0),\r\n        underOdds: parseFloat(prop.underOdds || prop.under_odds || prop.value || 0),\r\n        confidence: parseFloat(prop.confidence || 0),\r\n        sport: prop.sport || sport || 'Unknown',\r\n        gameTime: prop.gameTime || prop.start_time || new Date().toISOString(),\r\n        pickType: (prop.pickType || 'prop') as 'prop' | 'spread' | 'total' | 'moneyline',\r\n        espnPlayerId: prop.espnPlayerId || prop.player_id || prop.playerId || undefined,\r\n        dataSource: 'legacy_mapping',\r\n        validatedAt: new Date().toISOString(),\r\n        qualityScore: 50, // Default quality score for legacy mapping\r\n        _originalData: prop,\r\n      };\r\n\r\n      // Debug logging for stat mapping\r\n      if (prop.stat_type && prop.stat_type !== mappedProp.stat) {\r\n        enhancedLogger.debug('DataManager', 'statMapping', `[DataManager] Stat mapping: ${prop.stat_type} -> ${mappedProp.stat}`, {\r\n          original: prop,\r\n          mapped: mappedProp,\r\n        });\r\n      }\r\n\r\n      return mappedProp;\r\n    } catch (error) {\r\n      enhancedLogger.error(\r\n        'DataManager',\r\n        'legacyMapping',\r\n        'Failed to map prop using legacy method',\r\n        { prop, sport },\r\n        error instanceof Error ? error : new Error(String(error))\r\n      );\r\n      return null;\r\n    }\r\n  }\r\n\r\n  private getWebSocketUrl(): string {\r\n    // Use canonical builder - single source of truth\r\n    return buildWebSocketUrl({\r\n      role: 'frontend',\r\n      version: 1\r\n    });\r\n  }\r\n\r\n  private initializeWebSocket(): void {\r\n    try {\r\n      const wsUrl = this.getWebSocketUrl();\r\n      this.websocket = new WebSocket(wsUrl);\r\n      enhancedLogger.info('DataManager', 'WebSocket', `Connecting to ${wsUrl}`);\r\n\r\n      this.websocket.onopen = () => {\r\n        enhancedLogger.info('DataManager', 'WebSocket', 'WebSocket connected');\r\n        this.reconnectAttempts = 0;\r\n      };\r\n\r\n      this.websocket.onmessage = event => {\r\n        try {\r\n          const message = JSON.parse(event.data);\r\n          this.handleWebSocketMessage(message);\r\n        } catch (error) {\r\n          const errObj = error instanceof Error ? error : new Error(String(error));\r\n          enhancedLogger.warn('DataManager', 'WebSocket', 'Message parsing error', {}, errObj);\r\n        }\r\n      };\r\n\r\n      this.websocket.onclose = event => {\r\n        enhancedLogger.warn('DataManager', 'WebSocket', `Disconnected (code ${event.code})`);\r\n        this.websocket = null;\r\n        if (event.code !== 1000 && this.reconnectAttempts < this.maxReconnectAttempts) {\r\n          const delay = Math.min(1000 * Math.pow(2, this.reconnectAttempts), 30000);\r\n          enhancedLogger.info('DataManager', 'WebSocket', `Attempting reconnection in ${delay}ms`);\r\n          setTimeout(() => {\r\n            this.reconnectAttempts++;\r\n            this.initializeWebSocket();\r\n          }, delay);\r\n        } else {\r\n          enhancedLogger.info(\r\n            'DataManager',\r\n            'WebSocket',\r\n            'Reconnection stopped, continuing in local mode'\r\n          );\r\n        }\r\n      };\r\n\r\n      this.websocket.onerror = error => {\r\n        const errObj =\r\n          error instanceof Error ? error : new Error(error?.toString?.() || 'WebSocket error');\r\n        enhancedLogger.warn('DataManager', 'WebSocket', 'Connection issue', {}, errObj);\r\n      };\r\n    } catch (error) {\r\n      const errObj = error instanceof Error ? error : new Error(String(error));\r\n      enhancedLogger.warn(\r\n        'DataManager',\r\n        'WebSocket',\r\n        'Initialization failed, continuing in local mode',\r\n        {},\r\n        errObj\r\n      );\r\n    }\r\n  }\r\n\r\n  private handleWebSocketMessage(message: any): void {\r\n    if (message.type === 'data_update') {\r\n      // Invalidate relevant cache entries\r\n      const pattern = `*${message.source}*`;\r\n      this.invalidateCachePattern(pattern);\r\n\r\n      // Notify subscribers\r\n      for (const [key, subscriptions] of Array.from(this.subscriptions.entries())) {\r\n        if (key.includes(message.source)) {\r\n          subscriptions.forEach(sub => {\r\n            if (sub.options.realtime) {\r\n              sub.callback(message.data);\r\n            }\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private invalidateCachePattern(pattern: string): void {\r\n    const keysToDelete: string[] = [];\r\n\r\n    for (const key of Array.from(this.cache.keys())) {\r\n      if (this.matchesPattern(key, pattern)) {\r\n        keysToDelete.push(key);\r\n      }\r\n    }\r\n\r\n    keysToDelete.forEach(key => this.cache.delete(key));\r\n\r\n    if (keysToDelete.length > 0) {\r\n      enhancedLogger.info('DataManager', 'invalidatePattern', `Invalidated ${keysToDelete.length} cache entries matching pattern: ${pattern}`);\r\n    }\r\n  }\r\n\r\n  private matchesPattern(str: string, pattern: string): boolean {\r\n    const regex = new RegExp(pattern.replace(/\\*/g, '.*'));\r\n    return regex.test(str);\r\n  }\r\n\r\n  private getPrefetchPredictions(\r\n    pattern: string\r\n  ): Array<{ endpoint: string; params?: Record<string, unknown> }> {\r\n    // Simple prediction logic - in reality this would be more sophisticated\r\n    const predictions: Array<{ endpoint: string; params?: Record<string, unknown> }> = [];\r\n\r\n    if (pattern.includes('MLB')) {\r\n      predictions.push(\r\n        { endpoint: '/mlb/odds-comparison/', params: { market_type: 'playerprops' } },\r\n        { endpoint: '/api/prop-analysis/trends', params: { sport: 'MLB' } }\r\n      );\r\n    }\r\n\r\n    return predictions;\r\n  }\r\n\r\n  private handlePropsUpdate(sport: string, propType: string, data: unknown): void {\r\n  // Handle real-time props updates\r\n    enhancedLogger.info('DataManager', 'realtimeUpdate', `Real-time update for ${sport} ${propType}`, { data });\r\n\r\n    // Invalidate related cache entries\r\n    this.invalidateCachePattern(`*${sport.toLowerCase()}*`);\r\n  }\r\n\r\n  private startBatchProcessor(): void {\r\n    setInterval(() => {\r\n      if (this.batchQueue.length > 0) {\r\n        const batch = this.batchQueue.splice(0);\r\n        this.processBatch(batch);\r\n      }\r\n    }, this.batchTimeout);\r\n  }\r\n\r\n  private async processBatch(batch: BatchRequest[]): Promise<void> {\r\n    if (batch.length === 0) return;\r\n\r\n    try {\r\n  const _results = await this.fetchBatch(batch);\r\n  enhancedLogger.info('DataManager', 'processBatch', `Processed batch of ${batch.length} requests`);\r\n    } catch (error) {\r\n      enhancedLogger.error('DataManager', 'processBatch', 'Batch processing error', undefined, error as Error);\r\n    }\r\n  }\r\n\r\n  private startCacheCleanup(): void {\r\n    // Clean up expired cache entries every 5 minutes\r\n    setInterval(() => {\r\n      const now = Date.now();\r\n      const keysToDelete: string[] = [];\r\n\r\n      for (const [key, entry] of Array.from(this.cache.entries())) {\r\n        if (now > entry.timestamp + entry.ttl) {\r\n          keysToDelete.push(key);\r\n        }\r\n      }\r\n\r\n      keysToDelete.forEach(key => this.cache.delete(key));\r\n\r\n      if (keysToDelete.length > 0) {\r\n        enhancedLogger.info('DataManager', 'cacheCleanup', `Cleaned up ${keysToDelete.length} expired cache entries`);\r\n      }\r\n    }, 300000); // 5 minutes\r\n  }\r\n\r\n  /**\r\n   * Filter props based on player position and stat type compatibility\r\n   * Ensures pitchers only see pitcher stats and position players only see batter stats\r\n   */\r\n  private filterByPlayerPosition(props: FeaturedProp[]): FeaturedProp[] {\r\n  enhancedLogger.debug('DataManager', 'positionFilterStart', `Starting position-based filtering for ${props.length} props`);\r\n\r\n    // Define pitcher stat types\r\n    const pitcherStatTypes = [\r\n      'strikeouts',\r\n      'walks_allowed',\r\n      'hits_allowed',\r\n      'earned_runs',\r\n      'innings_pitched',\r\n      'wins',\r\n      'saves',\r\n      'whip',\r\n      'era',\r\n      'pitches_thrown',\r\n      'first_inning_runs_allowed',\r\n      'pitching_outs',\r\n      'pitcher_strikeouts',\r\n      'pitcher_walks',\r\n      'pitcher_hits_allowed',\r\n    ];\r\n\r\n    // Define batter stat types\r\n    const batterStatTypes = [\r\n      'hits',\r\n      'home_runs',\r\n      'runs_batted_in',\r\n      'runs_scored',\r\n      'stolen_bases',\r\n      'total_bases',\r\n      'doubles',\r\n      'triples',\r\n      'walks',\r\n      'strikeouts_as_batter',\r\n      'batting_average',\r\n      'on_base_percentage',\r\n      'slugging_percentage',\r\n      'singles',\r\n      'extra_base_hits',\r\n      'bases_on_balls',\r\n    ];\r\n\r\n    const filteredProps = props.filter(prop => {\r\n      try {\r\n        // Skip filtering for team totals or game props\r\n        if (\r\n          !prop.player ||\r\n          prop.player.toLowerCase().includes('total') ||\r\n          prop.player.toLowerCase().includes('game') ||\r\n          prop.stat?.toLowerCase() === 'totals'\r\n        ) {\r\n          enhancedLogger.debug('DataManager', 'positionFilter', `Keeping team/game prop: ${prop.player} - ${prop.stat}`);\r\n          return true;\r\n        }\r\n\r\n        const statType = prop.stat?.toLowerCase() || '';\r\n\r\n        // Try to get position from original data\r\n        const originalData = prop._originalData;\r\n        const position = originalData?.position || originalData?.pos || '';\r\n\r\n        // Check if we have position data\r\n        if (!position) {\r\n          enhancedLogger.debug('DataManager', 'positionFilter', `No position data for ${prop.player}, keeping prop`);\r\n          return true;\r\n        }\r\n\r\n        // Position \"1\" indicates pitcher in baseball\r\n        const isPitcher = position === '1' || position === 1 || position === 'P';\r\n        const isPitcherStat = pitcherStatTypes.some(type => statType.includes(type.toLowerCase()));\r\n        const isBatterStat = batterStatTypes.some(type => statType.includes(type.toLowerCase()));\r\n\r\n        let shouldKeep = true;\r\n\r\n        if (isPitcher && isBatterStat) {\r\n          enhancedLogger.info('DataManager', 'positionFilter', `Filtering out batter stat \"${statType}\" for pitcher ${prop.player}`);\r\n          shouldKeep = false;\r\n        } else if (!isPitcher && isPitcherStat) {\r\n          enhancedLogger.info('DataManager', 'positionFilter', `Filtering out pitcher stat \"${statType}\" for position player ${prop.player} (pos: ${position})`);\r\n          shouldKeep = false;\r\n        } else {\r\n          enhancedLogger.debug(\r\n            'DataManager',\r\n            'positionFilter',\r\n            `Keeping ${isPitcher ? 'pitcher' : 'position player'} ${prop.player} with stat \"${statType}\"`\r\n          );\r\n        }\r\n\r\n        return shouldKeep;\r\n      } catch (error) {\r\n  enhancedLogger.error('DataManager', 'positionFilter', `Error filtering prop for ${prop.player}`, undefined, error as Error);\r\n        return true; // Keep prop if there's an error\r\n      }\r\n    });\r\n\r\n    enhancedLogger.info(\r\n      'DataManager',\r\n      'positionFilterSummary',\r\n      `Position filtering: ${props.length} → ${filteredProps.length} props (filtered out ${props.length - filteredProps.length})`\r\n    );\r\n    return filteredProps;\r\n  }\r\n}\r\n\r\n// Global instance\r\nexport const enhancedDataManager = new EnhancedDataManager();\r\n"],"mappings":";;;;;;;AAKA,IAAAA,MAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,UAAA,GAAAD,OAAA;AAOA,IAAAE,sBAAA,GAAAF,OAAA;AACA,IAAAG,eAAA,GAAAH,OAAA;AACA,IAAAI,iBAAA,GAAAJ,OAAA;AACA,IAAAK,aAAA,GAAAL,OAAA;AAhBA;AACA;AACA;AACA;;AAsDA,MAAMM,mBAAmB,CAAC;EAmBc;;EAEtCC,WAAWA,CAAA,EAAG;IAAA,KApBNC,KAAK,GAAqC,IAAIC,GAAG,CAAC,CAAC;IAAA,KACnDC,aAAa,GAA6C,IAAID,GAAG,CAAC,CAAC;IAAA,KACnEE,eAAe,GAAkC,IAAIF,GAAG,CAAC,CAAC;IAAA,KAC1DG,UAAU,GAAmB,EAAE;IAAA,KAC/BC,OAAO,GAAmB;MAChCC,aAAa,EAAE,CAAC;MAChBC,SAAS,EAAE,CAAC;MACZC,WAAW,EAAE,CAAC;MACdC,MAAM,EAAE,CAAC;MACTC,eAAe,EAAE,CAAC;MAClBC,UAAU,EAAEC,IAAI,CAACC,GAAG,CAAC;IACvB,CAAC;IAAA,KAEOC,SAAS,GAAqB,IAAI;IAAA,KAClCC,iBAAiB,GAAG,CAAC;IAAA,KACrBC,oBAAoB,GAAG,CAAC;IAAA,KACxBC,YAAY,GAAG,GAAG;IAAE;IAAA,KACpBC,YAAY,GAAG,IAAI;IAAA,KACnBC,oBAAoB,GAAG,KAAK;IAGlC,IAAI,CAACC,mBAAmB,CAAC,CAAC;IAC1B,IAAI,CAACC,iBAAiB,CAAC,CAAC;IACxB,IAAI,CAACC,mBAAmB,CAAC,CAAC;EAC5B;;EAEA;AACF;AACA;EACUC,aAAaA,CAAA,EAAW;IAC9B;IACA,OAAOC,uBAAY;EACrB;;EAEA;AACF;AACA;EACE,MAAMC,SAASA,CACbC,QAAgB,EAChBC,MAA4B,EAC5BC,OAMC,GAAG,CAAC,CAAC,EACM;IACZ,MAAM;MACJ5B,KAAK,GAAG,IAAI;MACZ6B,GAAG,GAAG,MAAM;MAAE;MACdC,QAAQ,GAAG,QAAQ;MACnBC,WAAW,GAAG,KAAK;MACnBC,OAAO,GAAG;IACZ,CAAC,GAAGJ,OAAO;IAEX,MAAMK,QAAQ,GAAG,IAAI,CAACC,gBAAgB,CAACR,QAAQ,EAAEC,MAAM,CAAC;IACxD,MAAMQ,SAAS,GAAGvB,IAAI,CAACC,GAAG,CAAC,CAAC;IAE5BuB,8BAAc,CAACC,KAAK,CAAC,aAAa,EAAE,WAAW,EAAE,uBAAuBX,QAAQ,EAAE,EAAE;MAClFA,QAAQ;MACRC,MAAM;MACNM,QAAQ;MACRH,QAAQ;MACR9B;IACF,CAAC,CAAC;IAEF,IAAI;MACF;MACA,IAAIA,KAAK,EAAE;QACT,MAAMsC,MAAM,GAAG,IAAI,CAACC,aAAa,CAAIN,QAAQ,CAAC;QAC9C,IAAIK,MAAM,EAAE;UACV,IAAI,CAACjC,OAAO,CAACE,SAAS,EAAE;UACxB,MAAMiC,QAAQ,GAAG5B,IAAI,CAACC,GAAG,CAAC,CAAC,GAAGsB,SAAS;UACvC,IAAI,CAACM,aAAa,CAACD,QAAQ,CAAC;UAE5BJ,8BAAc,CAACM,iBAAiB,CAAC,KAAK,EAAET,QAAQ,EAAE;YAAEP,QAAQ;YAAEc;UAAS,CAAC,CAAC;UACzEJ,8BAAc,CAACO,aAAa,CAACjB,QAAQ,EAAE,KAAK,EAAEC,MAAM,EAAEa,QAAQ,EAAE,QAAQ,EAAE;YAAEV;UAAS,CAAC,CAAC;UAEvF,OAAOQ,MAAM;QACf;QAEAF,8BAAc,CAACM,iBAAiB,CAAC,MAAM,EAAET,QAAQ,EAAE;UAAEP;QAAS,CAAC,CAAC;MAClE;;MAEA;MACA,IAAI,IAAI,CAACvB,eAAe,CAACyC,GAAG,CAACX,QAAQ,CAAC,EAAE;QACtCG,8BAAc,CAACC,KAAK,CAClB,aAAa,EACb,eAAe,EACf,6BAA6BJ,QAAQ,EAAE,EACvC;UACEP,QAAQ;UACRO;QACF,CACF,CAAC;QACD,OAAQ,MAAM,IAAI,CAAC9B,eAAe,CAAC0C,GAAG,CAACZ,QAAQ,CAAE;MACnD;;MAEA;MACA,MAAMa,cAAc,GAAG,IAAI,CAACC,cAAc,CAAIrB,QAAQ,EAAEC,MAAM,EAAE;QAC9DG,QAAQ;QACRC,WAAW;QACXC;MACF,CAAC,CAAC;;MAEF;MACA,IAAI,CAAC7B,eAAe,CAAC6C,GAAG,CAACf,QAAQ,EAAEa,cAAc,CAAC;MAElD,IAAI;QACF,MAAMG,IAAI,GAAG,MAAMH,cAAc;QACjC,MAAMN,QAAQ,GAAG5B,IAAI,CAACC,GAAG,CAAC,CAAC,GAAGsB,SAAS;;QAEvC;QACA,IAAInC,KAAK,IAAIiD,IAAI,EAAE;UACjB,IAAI,CAACC,aAAa,CAACjB,QAAQ,EAAEgB,IAAI,EAAEpB,GAAG,CAAC;UACvCO,8BAAc,CAACM,iBAAiB,CAAC,KAAK,EAAET,QAAQ,EAAE;YAAEP,QAAQ;YAAEG,GAAG;YAAEW;UAAS,CAAC,CAAC;QAChF;QAEA,IAAI,CAACnC,OAAO,CAACG,WAAW,EAAE;QAC1B,IAAI,CAACiC,aAAa,CAACD,QAAQ,CAAC;QAE5BJ,8BAAc,CAACO,aAAa,CAACjB,QAAQ,EAAE,KAAK,EAAEC,MAAM,EAAEa,QAAQ,EAAE,SAAS,EAAE;UACzEV,QAAQ;UACRG,QAAQ;UACRkB,QAAQ,EAAEC,IAAI,CAACC,SAAS,CAACJ,IAAI,CAAC,CAACK;QACjC,CAAC,CAAC;QAEF,OAAOL,IAAI;MACb,CAAC,SAAS;QACR;QACA,IAAI,CAAC9C,eAAe,CAACoD,MAAM,CAACtB,QAAQ,CAAC;MACvC;IACF,CAAC,CAAC,OAAOuB,KAAK,EAAE;MACd,MAAMhB,QAAQ,GAAG5B,IAAI,CAACC,GAAG,CAAC,CAAC,GAAGsB,SAAS;MACvC,IAAI,CAAC9B,OAAO,CAACI,MAAM,EAAE;MACrB,IAAI,CAACgC,aAAa,CAACD,QAAQ,CAAC;MAE5BJ,8BAAc,CAACO,aAAa,CAACjB,QAAQ,EAAE,KAAK,EAAEC,MAAM,EAAEa,QAAQ,EAAE,OAAO,EAAE;QACvEV,QAAQ;QACRG,QAAQ;QACRwB,SAAS,EAAED,KAAK,YAAYE,KAAK,GAAGF,KAAK,CAACG,IAAI,GAAG;MACnD,CAAC,CAAC;;MAEF;MACA,IAAI3D,KAAK,EAAE;QACT,MAAM4D,SAAS,GAAG,IAAI,CAACC,YAAY,CAAI5B,QAAQ,CAAC;QAChD,IAAI2B,SAAS,EAAE;UACbxB,8BAAc,CAAC0B,IAAI,CACjB,aAAa,EACb,mBAAmB,EACnB,4BAA4B7B,QAAQ,EAAE,EACtC;YACEP,QAAQ;YACRO,QAAQ;YACRuB,KAAK,EAAEA,KAAK,YAAYE,KAAK,GAAGF,KAAK,CAACO,OAAO,GAAGC,MAAM,CAACR,KAAK;UAC9D,CAAC,EACDA,KAAK,YAAYE,KAAK,GAAGF,KAAK,GAAG,IAAIE,KAAK,CAACM,MAAM,CAACR,KAAK,CAAC,CAC1D,CAAC;UACD,OAAOI,SAAS;QAClB;MACF;MAEAxB,8BAAc,CAACoB,KAAK,CAClB,aAAa,EACb,WAAW,EACX,sBAAsB9B,QAAQ,EAAE,EAChC;QACEA,QAAQ;QACRC,MAAM;QACNM,QAAQ;QACRO,QAAQ;QACRV,QAAQ;QACRE;MACF,CAAC,EACDwB,KAAK,YAAYE,KAAK,GAAGF,KAAK,GAAG,IAAIE,KAAK,CAACM,MAAM,CAACR,KAAK,CAAC,CAC1D,CAAC;MAED,MAAMA,KAAK;IACb;EACF;;EAEA;AACF;AACA;EACE,MAAMS,UAAUA,CAAIC,QAAwB,EAA8B;IACxE;IACA,IAAIA,QAAQ,CAACZ,MAAM,GAAG,CAAC,IAAIY,QAAQ,CAAC,CAAC,CAAC,CAACxC,QAAQ,CAACyC,QAAQ,CAAC,mBAAmB,CAAC,EAAE;MAC7E,OAAO,IAAI,CAACC,qBAAqB,CAACF,QAAQ,CAAC;IAC7C;IAEA,MAAMG,OAA0B,GAAG,CAAC,CAAC;IACrC,MAAMlE,eAAgC,GAAG,EAAE;;IAE3C;IACA,MAAMmE,eAAe,GAAG;MACtBC,IAAI,EAAEL,QAAQ,CAACM,MAAM,CAACC,CAAC,IAAIA,CAAC,CAAC3C,QAAQ,KAAK,MAAM,CAAC;MACjD4C,MAAM,EAAER,QAAQ,CAACM,MAAM,CAACC,CAAC,IAAIA,CAAC,CAAC3C,QAAQ,KAAK,QAAQ,IAAI,CAAC2C,CAAC,CAAC3C,QAAQ,CAAC;MACpE6C,GAAG,EAAET,QAAQ,CAACM,MAAM,CAACC,CAAC,IAAIA,CAAC,CAAC3C,QAAQ,KAAK,KAAK;IAChD,CAAC;;IAED;IACA,KAAK,MAAM8C,KAAK,IAAI,CAACN,eAAe,CAACC,IAAI,EAAED,eAAe,CAACI,MAAM,EAAEJ,eAAe,CAACK,GAAG,CAAC,EAAE;MACvF,KAAK,MAAME,OAAO,IAAID,KAAK,EAAE;QAC3B,MAAME,OAAO,GAAG,IAAI,CAACrD,SAAS,CAAIoD,OAAO,CAACnD,QAAQ,EAAEmD,OAAO,CAAClD,MAAM,EAAE;UAClEG,QAAQ,EAAE+C,OAAO,CAAC/C;QACpB,CAAC,CAAC,CACCiD,IAAI,CAAC9B,IAAI,IAAI;UACZoB,OAAO,CAACQ,OAAO,CAACG,EAAE,CAAC,GAAG/B,IAAI;QAC5B,CAAC,CAAC,CACDgC,KAAK,CAACzB,KAAK,IAAI;UACdpB,8BAAc,CAACoB,KAAK,CAAC,aAAa,EAAE,cAAc,EAAE,4BAA4BqB,OAAO,CAACG,EAAE,EAAE,EAAEE,SAAS,EAAE1B,KAAc,CAAC;UACxHa,OAAO,CAACQ,OAAO,CAACG,EAAE,CAAC,GAAG,IAAW;QACnC,CAAC,CAAC;QAEJ7E,eAAe,CAACgF,IAAI,CAACL,OAAO,CAAC;;QAE7B;QACA,IAAIF,KAAK,CAACtB,MAAM,GAAG,CAAC,EAAE;UACpB,MAAM,IAAI8B,OAAO,CAACC,OAAO,IAAIC,UAAU,CAACD,OAAO,EAAE,EAAE,CAAC,CAAC;QACvD;MACF;IACF;IAEA,MAAMD,OAAO,CAACG,GAAG,CAACpF,eAAe,CAAC;IAClC,OAAOkE,OAAO;EAChB;;EAEA;AACF;AACA;EACE,MAAcD,qBAAqBA,CAAIF,QAAwB,EAA8B;IAC3F,MAAMG,OAA0B,GAAG,CAAC,CAAC;IAErC,IAAI;MACF;MACA,IAAImB,KAAY;MAEhB,IAAItB,QAAQ,CAACZ,MAAM,KAAK,CAAC,IAAImC,KAAK,CAACC,OAAO,CAACxB,QAAQ,CAAC,CAAC,CAAC,CAACvC,MAAM,CAAC,EAAE;QAC9D;QACA6D,KAAK,GAAGtB,QAAQ,CAAC,CAAC,CAAC,CAACvC,MAAM;MAC5B,CAAC,MAAM;QACL;QACA6D,KAAK,GAAGtB,QAAQ,CAACyB,GAAG,CAACd,OAAO,IAAIA,OAAO,CAAClD,MAAM,CAAC;MACjD;;MAEA;MACA,MAAMiE,GAAG,GAAG,GAAG,IAAI,CAACrE,aAAa,CAAC,CAAC,gCAAgC;MACvEa,8BAAc,CAACyD,IAAI,CAAC,aAAa,EAAE,kBAAkB,EAAE,uCAAuCD,GAAG,SAASJ,KAAK,CAAClC,MAAM,QAAQ,CAAC;MAE3H,MAAMwC,QAAQ,GAAG,MAAMC,cAAK,CAACC,IAAI,CAACJ,GAAG,EAAEJ,KAAK,EAAE;QAC5CS,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,OAAO,EAAE,IAAI,CAAE;MACjB,CAAC,CAAC;;MAEF;MACA,IAAIJ,QAAQ,CAAC7C,IAAI,IAAIwC,KAAK,CAACC,OAAO,CAACI,QAAQ,CAAC7C,IAAI,CAACkD,WAAW,CAAC,EAAE;QAC7D;QACA,IAAIjC,QAAQ,CAACZ,MAAM,KAAK,CAAC,IAAImC,KAAK,CAACC,OAAO,CAACxB,QAAQ,CAAC,CAAC,CAAC,CAACvC,MAAM,CAAC,EAAE;UAC9D;UACA0C,OAAO,CAACH,QAAQ,CAAC,CAAC,CAAC,CAACc,EAAE,CAAC,GAAGc,QAAQ,CAAC7C,IAAI;QACzC,CAAC,MAAM;UACL;UACA6C,QAAQ,CAAC7C,IAAI,CAACkD,WAAW,CAACC,OAAO,CAAC,CAACC,MAAW,EAAEC,KAAa,KAAK;YAChE,IAAIA,KAAK,GAAGpC,QAAQ,CAACZ,MAAM,EAAE;cAC3Be,OAAO,CAACH,QAAQ,CAACoC,KAAK,CAAC,CAACtB,EAAE,CAAC,GAAGqB,MAAM;YACtC;UACF,CAAC,CAAC;QACJ;MACF,CAAC,MAAM,IAAIP,QAAQ,CAAC7C,IAAI,IAAIwC,KAAK,CAACC,OAAO,CAACI,QAAQ,CAAC7C,IAAI,CAACoB,OAAO,CAAC,EAAE;QAChE;QACA,IAAIH,QAAQ,CAACZ,MAAM,KAAK,CAAC,IAAImC,KAAK,CAACC,OAAO,CAACxB,QAAQ,CAAC,CAAC,CAAC,CAACvC,MAAM,CAAC,EAAE;UAC9D0C,OAAO,CAACH,QAAQ,CAAC,CAAC,CAAC,CAACc,EAAE,CAAC,GAAGc,QAAQ,CAAC7C,IAAI;QACzC,CAAC,MAAM;UACL6C,QAAQ,CAAC7C,IAAI,CAACoB,OAAO,CAAC+B,OAAO,CAAC,CAACC,MAAW,EAAEC,KAAa,KAAK;YAC5D,IAAIA,KAAK,GAAGpC,QAAQ,CAACZ,MAAM,EAAE;cAC3Be,OAAO,CAACH,QAAQ,CAACoC,KAAK,CAAC,CAACtB,EAAE,CAAC,GAAGqB,MAAM;YACtC;UACF,CAAC,CAAC;QACJ;MACF,CAAC,MAAM,IAAIZ,KAAK,CAACC,OAAO,CAACI,QAAQ,CAAC7C,IAAI,CAAC,EAAE;QACvC;QACA,IAAIiB,QAAQ,CAACZ,MAAM,KAAK,CAAC,IAAImC,KAAK,CAACC,OAAO,CAACxB,QAAQ,CAAC,CAAC,CAAC,CAACvC,MAAM,CAAC,EAAE;UAC9D0C,OAAO,CAACH,QAAQ,CAAC,CAAC,CAAC,CAACc,EAAE,CAAC,GAAG;YAAEmB,WAAW,EAAEL,QAAQ,CAAC7C;UAAK,CAAM;QAC/D,CAAC,MAAM;UACL6C,QAAQ,CAAC7C,IAAI,CAACmD,OAAO,CAAC,CAACC,MAAW,EAAEC,KAAa,KAAK;YACpD,IAAIA,KAAK,GAAGpC,QAAQ,CAACZ,MAAM,EAAE;cAC3Be,OAAO,CAACH,QAAQ,CAACoC,KAAK,CAAC,CAACtB,EAAE,CAAC,GAAGqB,MAAM;YACtC;UACF,CAAC,CAAC;QACJ;MACF,CAAC,MAAM;QACLjE,8BAAc,CAAC0B,IAAI,CAAC,aAAa,EAAE,kBAAkB,EAAE,8CAA8C,EAAE;UAAEb,IAAI,EAAE6C,QAAQ,CAAC7C;QAAK,CAAC,CAAC;MACjI;MAEAb,8BAAc,CAACyD,IAAI,CAAC,aAAa,EAAE,kBAAkB,EAAE,gCAAgC,IAAAU,4BAAc,EAAClC,OAAO,CAAC,CAACf,MAAM,UAAU,CAAC;IAClI,CAAC,CAAC,OAAOE,KAAU,EAAE;MACnBpB,8BAAc,CAACoB,KAAK,CAAC,aAAa,EAAE,kBAAkB,EAAE,kCAAkC,EAAE0B,SAAS,EAAE1B,KAAc,CAAC;;MAEtH;MACAU,QAAQ,CAACkC,OAAO,CAACvB,OAAO,IAAI;QAC1BR,OAAO,CAACQ,OAAO,CAACG,EAAE,CAAC,GAAG,IAAW;MACnC,CAAC,CAAC;IACJ;IAEA,OAAOX,OAAO;EAChB;;EAEA;AACF;AACA;EACEmC,SAASA,CACPC,GAAW,EACXC,QAA6B,EAC7B9E,OAIC,GAAG,CAAC,CAAC,EACM;IACZ,IAAI,CAAC,IAAI,CAAC1B,aAAa,CAAC0C,GAAG,CAAC6D,GAAG,CAAC,EAAE;MAChC,IAAI,CAACvG,aAAa,CAAC8C,GAAG,CAACyD,GAAG,EAAE,EAAE,CAAC;IACjC;IAEA,MAAME,YAA8B,GAAG;MACrCF,GAAG;MACHC,QAAQ;MACR9E,OAAO,EAAE;QACPgF,QAAQ,EAAE,IAAI;QACdC,QAAQ,EAAE,KAAK;QACf/E,QAAQ,EAAE,QAAQ;QAClB,GAAGF;MACL;IACF,CAAC;IAED,IAAI,CAAC1B,aAAa,CAAC2C,GAAG,CAAC4D,GAAG,CAAC,CAAEtB,IAAI,CAACwB,YAAY,CAAC;;IAE/C;IACA,IAAI/E,OAAO,CAACgF,QAAQ,IAAI,CAAC,IAAI,CAAC9F,SAAS,EAAE;MACvC,IAAI,CAACQ,mBAAmB,CAAC,CAAC;IAC5B;;IAEA;IACA,IAAIM,OAAO,CAACiF,QAAQ,EAAE;MACpB,IAAI,CAACC,YAAY,CAACL,GAAG,CAAC;IACxB;;IAEA;IACA,OAAO,MAAM;MACX,MAAMM,IAAI,GAAG,IAAI,CAAC7G,aAAa,CAAC2C,GAAG,CAAC4D,GAAG,CAAC;MACxC,IAAIM,IAAI,EAAE;QACR,MAAMT,KAAK,GAAGS,IAAI,CAACC,OAAO,CAACL,YAAY,CAAC;QACxC,IAAIL,KAAK,GAAG,CAAC,CAAC,EAAE;UACdS,IAAI,CAACE,MAAM,CAACX,KAAK,EAAE,CAAC,CAAC;QACvB;QACA,IAAIS,IAAI,CAACzD,MAAM,KAAK,CAAC,EAAE;UACrB,IAAI,CAACpD,aAAa,CAACqD,MAAM,CAACkD,GAAG,CAAC;QAChC;MACF;IACF,CAAC;EACH;;EAEA;AACF;AACA;EACE,MAAMK,YAAYA,CAACI,OAAe,EAAiB;IACjD,IAAI;MACF;MACA,MAAMf,WAAW,GAAG,IAAI,CAACgB,sBAAsB,CAACD,OAAO,CAAC;MAExD,KAAK,MAAME,UAAU,IAAIjB,WAAW,EAAE;QAClC,IAAI,CAAC1E,SAAS,CAAC2F,UAAU,CAAC1F,QAAQ,EAAE0F,UAAU,CAACzF,MAAM,EAAE;UACrDG,QAAQ,EAAE,KAAK;UACf9B,KAAK,EAAE,IAAI;UACX6B,GAAG,EAAE,MAAM,CAAE;QACf,CAAC,CAAC,CAACoD,KAAK,CAACzB,KAAK,IAAI;UAChBpB,8BAAc,CAACC,KAAK,CAAC,aAAa,EAAE,UAAU,EAAE,uBAAuB+E,UAAU,CAAC1F,QAAQ,EAAE,EAAEwD,SAAS,EAAE1B,KAAc,CAAC;QAC1H,CAAC,CAAC;MACN;IACF,CAAC,CAAC,OAAOA,KAAK,EAAE;MACdpB,8BAAc,CAACoB,KAAK,CAAC,aAAa,EAAE,UAAU,EAAE,gBAAgB,EAAE0B,SAAS,EAAE1B,KAAc,CAAC;IAC9F;EACF;;EAEA;AACF;AACA;EACE,MAAM6D,gBAAgBA,CACpBC,KAAa,EACbC,QAAgB,GAAG,QAAQ,EAC3B3F,OAOC,GAAG,CAAC,CAAC,EACmB;IACzB,MAAM;MACJ4F,QAAQ,GAAG,IAAI;MACfZ,QAAQ,GAAG,KAAK;MAChBa,WAAW,GAAG,IAAI;MAClBC,SAAS;MACTC,KAAK,GAAG,EAAE;MACVC,MAAM,GAAG;IACX,CAAC,GAAGhG,OAAO;IAEX,IAAI;MACF;MACA,MAAMiG,OAAO,GAAG,IAAI,CAACtG,aAAa,CAAC,CAAC;MACpC,MAAMG,QAAQ,GACZ4F,KAAK,KAAK,KAAK,GAAG,GAAGO,OAAO,uBAAuB,GAAG,GAAGA,OAAO,cAAcP,KAAK,EAAE;MACvF,MAAM3F,MAAM,GAAG;QACbmG,WAAW,EAAEP,QAAQ,KAAK,QAAQ,GAAG,aAAa,GAAG,SAAS;QAC9D,IAAIG,SAAS,IAAIA,SAAS,CAACpE,MAAM,GAAG,CAAC,IAAI;UAAEyE,UAAU,EAAEL,SAAS,CAACM,IAAI,CAAC,GAAG;QAAE,CAAC,CAAC;QAC7EL,KAAK;QACLC;MACF,CAAC;;MAED;MACA,MAAM3F,QAAQ,GAAG,IAAI,CAACC,gBAAgB,CAACR,QAAQ,EAAEC,MAAM,CAAC;MACxDS,8BAAc,CAACC,KAAK,CAAC,aAAa,EAAE,kBAAkB,EAAE,+BAA+BJ,QAAQ,EAAE,EAAE;QAAEN,MAAM;QAAE+F;MAAU,CAAC,CAAC;MAEzH,MAAMO,OAAO,GAAG,MAAM,IAAI,CAACxG,SAAS,CAAMC,QAAQ,EAAEC,MAAM,EAAE;QAC1D3B,KAAK,EAAEwH,QAAQ;QACf3F,GAAG,EAAE,MAAM;QAAE;QACbC,QAAQ,EAAE;MACZ,CAAC,CAAC;MAEF,IAAI0D,KAAY,GAAG,EAAE;MACrB,IAAIC,KAAK,CAACC,OAAO,CAACuC,OAAO,CAAC,EAAE;QAC1BzC,KAAK,GAAGyC,OAAO;MACjB,CAAC,MAAM,IAAIxC,KAAK,CAACC,OAAO,CAACuC,OAAO,EAAEC,IAAI,CAAC,EAAE;QACvC1C,KAAK,GAAGyC,OAAO,CAACC,IAAI;MACtB,CAAC,MAAM,IAAIzC,KAAK,CAACC,OAAO,CAACuC,OAAO,EAAEhF,IAAI,CAAC,EAAE;QACvCuC,KAAK,GAAGyC,OAAO,CAAChF,IAAI;MACtB,CAAC,MAAM;QACLb,8BAAc,CAAC0B,IAAI,CAAC,aAAa,EAAE,kBAAkB,EAAE,2BAA2B,EAAE;UAAEmE;QAAQ,CAAC,CAAC;MAClG;;MAEA;MACA,IAAIR,WAAW,IAAIjC,KAAK,CAAClC,MAAM,GAAG,CAAC,EAAE;QACnCkC,KAAK,GAAG,IAAI,CAAC2C,gBAAgB,CAAC3C,KAAK,CAAC;MACtC;;MAEA;MACA,MAAM4C,aAAa,GAAG,IAAI,CAACC,kBAAkB,CAAC7C,KAAK,EAAE8B,KAAK,CAAC;;MAE3D;MACA,MAAMgB,aAAa,GACjBhB,KAAK,KAAK,KAAK,GAAG,IAAI,CAACiB,sBAAsB,CAACH,aAAa,CAAC,GAAGA,aAAa;MAElFhG,8BAAc,CAACyD,IAAI,CAAC,aAAa,EAAE,gBAAgB,EAAE,uBAAuBuC,aAAa,CAAC9E,MAAM,OAAOgF,aAAa,CAAChF,MAAM,QAAQ,CAAC;;MAEhI;MACA,IAAIsD,QAAQ,EAAE;QACZ,IAAI,CAACJ,SAAS,CACZ,UAAUc,KAAK,IAAIC,QAAQ,EAAE,EAC7BiB,WAAW,IAAI;UACb;UACA,IAAI,CAACC,iBAAiB,CAACnB,KAAK,EAAEC,QAAQ,EAAEiB,WAAW,CAAC;QACtD,CAAC,EACD;UAAE5B,QAAQ,EAAE;QAAK,CACnB,CAAC;MACH;MAEA,OAAO0B,aAAa;IACtB,CAAC,CAAC,OAAO9E,KAAK,EAAE;MACdpB,8BAAc,CAACoB,KAAK,CAAC,aAAa,EAAE,kBAAkB,EAAE,mBAAmB8D,KAAK,QAAQ,EAAEpC,SAAS,EAAE1B,KAAc,CAAC;;MAEpH;MACA,MAAMkF,mBAAmB,GACvBlF,KAAK,YAAYE,KAAK,KACrBF,KAAK,CAACO,OAAO,CAACI,QAAQ,CAAC,iBAAiB,CAAC,IACxCX,KAAK,CAACO,OAAO,CAACI,QAAQ,CAAC,eAAe,CAAC,IACvCX,KAAK,CAACO,OAAO,CAACI,QAAQ,CAAC,SAAS,CAAC,IACjCX,KAAK,CAACO,OAAO,CAACI,QAAQ,CAAC,kBAAkB,CAAC,IAC1CX,KAAK,CAACG,IAAI,KAAK,cAAc,IAC5BH,KAAK,CAASmF,IAAI,KAAK,aAAa,CAAC;MAE1C,IAAID,mBAAmB,EAAE;QACvBtG,8BAAc,CAACyD,IAAI,CAAC,aAAa,EAAE,kBAAkB,EAAE,2BAA2ByB,KAAK,oBAAoB,CAAC;;QAE5G;QACA,MAAMsB,SAAS,GAAG,CAChB;UACE5D,EAAE,EAAE,qBAAqB;UACzB6D,MAAM,EAAE,aAAa;UACrBC,OAAO,EAAE,oBAAoB;UAC7BC,IAAI,EAAE,WAAW;UACjBC,IAAI,EAAE,GAAG;UACTC,QAAQ,EAAE,GAAG;UACbC,SAAS,EAAE,CAAC,GAAG;UACfC,UAAU,EAAE,EAAE;UACd7B,KAAK,EAAEA,KAAK;UACZ8B,QAAQ,EAAE,IAAIxI,IAAI,CAAC,CAAC,CAACyI,WAAW,CAAC,CAAC;UAClCC,QAAQ,EAAE;QACZ,CAAC,EACD;UACEtE,EAAE,EAAE,sBAAsB;UAC1B6D,MAAM,EAAE,YAAY;UACpBC,OAAO,EAAE,kBAAkB;UAC3BC,IAAI,EAAE,MAAM;UACZC,IAAI,EAAE,GAAG;UACTC,QAAQ,EAAE,CAAC,GAAG;UACdC,SAAS,EAAE,CAAC,GAAG;UACfC,UAAU,EAAE,EAAE;UACd7B,KAAK,EAAEA,KAAK;UACZ8B,QAAQ,EAAE,IAAIxI,IAAI,CAAC,CAAC,CAACyI,WAAW,CAAC,CAAC;UAClCC,QAAQ,EAAE;QACZ,CAAC,EACD;UACEtE,EAAE,EAAE,wBAAwB;UAC5B6D,MAAM,EAAE,cAAc;UACtBC,OAAO,EAAE,mBAAmB;UAC5BC,IAAI,EAAE,MAAM;UACZC,IAAI,EAAE,GAAG;UACTC,QAAQ,EAAE,GAAG;UACbC,SAAS,EAAE,CAAC,GAAG;UACfC,UAAU,EAAE,EAAE;UACd7B,KAAK,EAAEA,KAAK;UACZ8B,QAAQ,EAAE,IAAIxI,IAAI,CAAC,CAAC,CAACyI,WAAW,CAAC,CAAC;UAClCC,QAAQ,EAAE;QACZ,CAAC,CACF;;QAED;QACA,OAAOV,SAAS,CAACjD,GAAG,CAAC4D,CAAC,KAAK;UACzB,GAAGA,CAAC;UACJC,UAAU,EAAE,MAAM;UAClBC,WAAW,EAAE,IAAI7I,IAAI,CAAC,CAAC,CAACyI,WAAW,CAAC,CAAC;UACrCK,YAAY,EAAE,EAAE;UAChBC,aAAa,EAAEJ;QACjB,CAAC,CAAC,CAAC;MACL;MAEA,MAAM/F,KAAK;IACb;EACF;;EAEA;AACF;AACA;EACE,MAAMoG,iBAAiBA,CACrBC,MAAc,EACdhB,MAAc,EACdE,IAAY,EACZnH,OAGC,GAAG,CAAC,CAAC,EACQ;IACd,MAAM;MAAE4F,QAAQ,GAAG,IAAI;MAAE1F,QAAQ,GAAG;IAAS,CAAC,GAAGF,OAAO;IAExD,MAAMF,QAAQ,GAAG,6BAA6B;IAC9C,MAAMC,MAAM,GAAG;MAAEkI,MAAM;MAAEhB,MAAM;MAAEE;IAAK,CAAC;IAEvC,OAAO,MAAM,IAAI,CAACtH,SAAS,CAACC,QAAQ,EAAEC,MAAM,EAAE;MAC5C3B,KAAK,EAAEwH,QAAQ;MACf3F,GAAG,EAAE,MAAM;MAAE;MACbC,QAAQ;MACRC,WAAW,EAAE,IAAI,CAAE;IACrB,CAAC,CAAC;EACJ;;EAEA;AACF;AACA;EACE+H,UAAUA,CAAA,EAMR;IACA,MAAMxJ,aAAa,GAAG,IAAI,CAACD,OAAO,CAACE,SAAS,GAAG,IAAI,CAACF,OAAO,CAACG,WAAW;IACvE,MAAMuJ,OAAO,GAAGzJ,aAAa,GAAG,CAAC,GAAI,IAAI,CAACD,OAAO,CAACE,SAAS,GAAGD,aAAa,GAAI,GAAG,GAAG,CAAC;IAEtF,OAAO;MACL,GAAG,IAAI,CAACD,OAAO;MACf2J,SAAS,EAAE,IAAI,CAAChK,KAAK,CAACiK,IAAI;MAC1BF,OAAO;MACP7J,aAAa,EAAEuF,KAAK,CAACyE,IAAI,CAAC,IAAI,CAAChK,aAAa,CAACiK,MAAM,CAAC,CAAC,CAAC,CAACC,MAAM,CAC3D,CAACC,GAAG,EAAEtD,IAAI,KAAKsD,GAAG,GAAGtD,IAAI,CAACzD,MAAM,EAChC,CACF,CAAC;MACDnD,eAAe,EAAE,IAAI,CAACA,eAAe,CAAC8J,IAAI;MAC9CK,eAAe,EAAElI,8BAAc,CAACmI,iBAAiB,CAAC;IAChD,CAAC;EACH;;EAEA;AACF;AACA;EACEC,eAAeA,CAACC,KAA6B,EAAQ;IACnD,MAAMC,YAAsB,GAAG,EAAE;IAEjCtI,8BAAc,CAACyD,IAAI,CACjB,aAAa,EACb,mBAAmB,EACnB,wCAAwC4E,KAAK,CAACE,IAAI,EAAE,EACpD;MACEC,SAAS,EAAEH,KAAK,CAACE,IAAI;MACrBrD,KAAK,EAAEmD,KAAK,CAACnD,KAAK;MAClBuD,MAAM,EAAEJ,KAAK,CAACI,MAAM;MACpBhB,MAAM,EAAEY,KAAK,CAACZ,MAAM;MACpBiB,MAAM,EAAEL,KAAK,CAACK;IAChB,CACF,CAAC;IAED,QAAQL,KAAK,CAACE,IAAI;MAChB,KAAK,cAAc;QACjB,IAAIF,KAAK,CAACnD,KAAK,EAAE;UACf,KAAK,MAAMb,GAAG,IAAIhB,KAAK,CAACyE,IAAI,CAAC,IAAI,CAAClK,KAAK,CAAC+K,IAAI,CAAC,CAAC,CAAC,EAAE;YAC/C,IAAItE,GAAG,CAACtC,QAAQ,CAACsG,KAAK,CAACnD,KAAK,CAAC0D,WAAW,CAAC,CAAC,CAAC,EAAE;cAC3CN,YAAY,CAACvF,IAAI,CAACsB,GAAG,CAAC;YACxB;UACF;QACF;QACA;MAEF,KAAK,aAAa;QAChB,IAAIgE,KAAK,CAACZ,MAAM,EAAE;UAChB,KAAK,MAAMpD,GAAG,IAAIhB,KAAK,CAACyE,IAAI,CAAC,IAAI,CAAClK,KAAK,CAAC+K,IAAI,CAAC,CAAC,CAAC,EAAE;YAC/C,IAAItE,GAAG,CAACtC,QAAQ,CAACsG,KAAK,CAACZ,MAAM,CAAC,EAAE;cAC9Ba,YAAY,CAACvF,IAAI,CAACsB,GAAG,CAAC;YACxB;UACF;QACF;QACA;MAEF,KAAK,aAAa;QAChB,IAAIgE,KAAK,CAACI,MAAM,EAAE;UAChB,KAAK,MAAMpE,GAAG,IAAIhB,KAAK,CAACyE,IAAI,CAAC,IAAI,CAAClK,KAAK,CAAC+K,IAAI,CAAC,CAAC,CAAC,EAAE;YAC/C,IAAItE,GAAG,CAACtC,QAAQ,CAACsG,KAAK,CAACI,MAAM,CAAC,EAAE;cAC9BH,YAAY,CAACvF,IAAI,CAACsB,GAAG,CAAC;YACxB;UACF;QACF;QACA;MAEF,KAAK,QAAQ;QACXiE,YAAY,CAACvF,IAAI,CAAC,GAAGsF,KAAK,CAACQ,YAAY,CAAC;QACxC;MAEF,KAAK,YAAY;QACf;QACA;IACJ;;IAEA;IACAP,YAAY,CAACtE,OAAO,CAACK,GAAG,IAAI;MAC1B,IAAI,CAACzG,KAAK,CAACuD,MAAM,CAACkD,GAAG,CAAC;MACtBrE,8BAAc,CAACM,iBAAiB,CAAC,YAAY,EAAE+D,GAAG,EAAE;QAClDmE,SAAS,EAAEH,KAAK,CAACE,IAAI;QACrBG,MAAM,EAAEL,KAAK,CAACK;MAChB,CAAC,CAAC;IACJ,CAAC,CAAC;IAEF1I,8BAAc,CAACyD,IAAI,CACjB,aAAa,EACb,mBAAmB,EACnB,eAAe6E,YAAY,CAACpH,MAAM,gBAAgB,EAClD;MACEsH,SAAS,EAAEH,KAAK,CAACE,IAAI;MACrBO,eAAe,EAAER,YAAY,CAACpH,MAAM;MACpC6H,kBAAkB,EAAE,IAAI,CAACnL,KAAK,CAACiK;IACjC,CACF,CAAC;EACH;;EAEA;AACF;AACA;EACE,MAAMmB,SAASA,CACbjF,WAAsE,EACvD;IACf/D,8BAAc,CAACyD,IAAI,CACjB,aAAa,EACb,cAAc,EACd,8BAA8BM,WAAW,CAAC7C,MAAM,cAAc,EAC9D;MACE+H,gBAAgB,EAAElF,WAAW,CAAC7C;IAChC,CACF,CAAC;IAED,MAAMgI,eAAe,GAAGnF,WAAW,CAACR,GAAG,CAAC,OAAOyB,UAAU,EAAEd,KAAK,KAAK;MACnE,IAAI;QACF,MAAM,IAAIlB,OAAO,CAACC,OAAO,IAAIC,UAAU,CAACD,OAAO,EAAEiB,KAAK,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;QAC/D,MAAM,IAAI,CAAC7E,SAAS,CAAC2F,UAAU,CAAC1F,QAAQ,EAAE0F,UAAU,CAACzF,MAAM,EAAE;UAC3DG,QAAQ,EAAE,KAAK;UACf9B,KAAK,EAAE,IAAI;UACX6B,GAAG,EAAE,MAAM,CAAE;QACf,CAAC,CAAC;QAEFO,8BAAc,CAACC,KAAK,CAClB,aAAa,EACb,cAAc,EACd,iCAAiC+E,UAAU,CAAC1F,QAAQ,EAAE,EACtD;UACEA,QAAQ,EAAE0F,UAAU,CAAC1F,QAAQ;UAC7B4F,KAAK,EAAEF,UAAU,CAACE;QACpB,CACF,CAAC;MACH,CAAC,CAAC,OAAO9D,KAAK,EAAE;QACdpB,8BAAc,CAAC0B,IAAI,CACjB,aAAa,EACb,cAAc,EACd,4BAA4BsD,UAAU,CAAC1F,QAAQ,EAAE,EACjD;UACEA,QAAQ,EAAE0F,UAAU,CAAC1F,QAAQ;UAC7B4F,KAAK,EAAEF,UAAU,CAACE;QACpB,CAAC,EACD9D,KAAK,YAAYE,KAAK,GAAGF,KAAK,GAAG,IAAIE,KAAK,CAACM,MAAM,CAACR,KAAK,CAAC,CAC1D,CAAC;MACH;IACF,CAAC,CAAC;IAEF,MAAM4B,OAAO,CAACmG,UAAU,CAACD,eAAe,CAAC;IAEzClJ,8BAAc,CAACyD,IAAI,CAAC,aAAa,EAAE,cAAc,EAAE,yBAAyB,EAAE;MAC5EwF,gBAAgB,EAAElF,WAAW,CAAC7C,MAAM;MACpC0G,SAAS,EAAE,IAAI,CAAChK,KAAK,CAACiK;IACxB,CAAC,CAAC;EACJ;;EAEA;AACF;AACA;EACEuB,UAAUA,CAAA,EAAS;IACjB,IAAI,CAACxL,KAAK,CAACyL,KAAK,CAAC,CAAC;IAClB,IAAI,CAACtL,eAAe,CAACsL,KAAK,CAAC,CAAC;IAC5BrJ,8BAAc,CAACyD,IAAI,CAAC,aAAa,EAAE,OAAO,EAAE,eAAe,CAAC;EAC9D;;EAEA;AACF;AACA;EACE6F,OAAOA,CAAA,EAAS;IACd,IAAI,IAAI,CAAC5K,SAAS,EAAE;MAClB,IAAI,CAACA,SAAS,CAAC6K,KAAK,CAAC,CAAC;MACtB,IAAI,CAAC7K,SAAS,GAAG,IAAI;IACvB;IACA,IAAI,CAAC0K,UAAU,CAAC,CAAC;IACjB,IAAI,CAACtL,aAAa,CAACuL,KAAK,CAAC,CAAC;EAC5B;;EAEA;;EAEA,MAAc1I,cAAcA,CAC1BrB,QAAgB,EAChBC,MAA4B,EAC5BC,OAIC,GAAG,CAAC,CAAC,EACM;IACZ,MAAM;MAAEI,OAAO,GAAG,CAAC;MAAED,WAAW,GAAG;IAAM,CAAC,GAAGH,OAAO,CAAC,CAAC;;IAEtD,IAAIgK,SAA4B;IAEhC,KAAK,IAAIC,OAAO,GAAG,CAAC,EAAEA,OAAO,IAAI7J,OAAO,EAAE6J,OAAO,EAAE,EAAE;MACnD,IAAI;QACF,MAAMC,MAAW,GAAG;UAClB5F,OAAO,EAAE,IAAI,CAAC6F,qBAAqB,CAACnK,OAAO,CAACE,QAAQ,CAAC;UACrDmE,OAAO,EAAE,CAAC;QACZ,CAAC;QAED,IAAIlE,WAAW,EAAE;UACf+J,MAAM,CAAC7F,OAAO,CAAC,iBAAiB,CAAC,GAAG,mBAAmB;QACzD;QAEA,IAAIH,QAA0B;QAE9B,IAAInE,MAAM,IAAI,IAAA4E,4BAAc,EAAC5E,MAAM,CAAC,CAAC2B,MAAM,GAAG,CAAC,EAAE;UAC/CwC,QAAQ,GAAG,MAAMC,cAAK,CAAClD,GAAG,CAACnB,QAAQ,EAAE;YAAEC,MAAM;YAAE,GAAGmK;UAAO,CAAC,CAAC;QAC7D,CAAC,MAAM;UACLhG,QAAQ,GAAG,MAAMC,cAAK,CAAClD,GAAG,CAACnB,QAAQ,EAAEoK,MAAM,CAAC;QAC9C;QAEA,IAAI,CAACzL,OAAO,CAACC,aAAa,EAAE;QAE5B,OAAOwF,QAAQ,CAAC7C,IAAI;MACtB,CAAC,CAAC,OAAOO,KAAU,EAAE;QACnBoI,SAAS,GAAGpI,KAAK;;QAEjB;QACA,IAAIA,KAAK,CAACsC,QAAQ,EAAEkG,MAAM,IAAI,GAAG,IAAIxI,KAAK,CAACsC,QAAQ,EAAEkG,MAAM,GAAG,GAAG,EAAE;UACjE;QACF;;QAEA;QACA,IAAIH,OAAO,GAAG7J,OAAO,EAAE;UACrB,MAAMiK,KAAK,GAAGC,IAAI,CAACC,GAAG,CAAC,IAAI,GAAGD,IAAI,CAACE,GAAG,CAAC,CAAC,EAAEP,OAAO,CAAC,EAAE,IAAI,CAAC;UACzD,MAAM,IAAIzG,OAAO,CAACC,OAAO,IAAIC,UAAU,CAACD,OAAO,EAAE4G,KAAK,CAAC,CAAC;UACxDI,OAAO,CAACC,GAAG,CACT,qCAAqC5K,QAAQ,aAAamK,OAAO,GAAG,CAAC,IAAI7J,OAAO,GAAG,CAAC,GACtF,CAAC;QACH;MACF;IACF;;IAEA;IACA,IAAI4J,SAAS,EAAE;MACb,MAAMlD,mBAAmB,GACvBkD,SAAS,CAAC7H,OAAO,CAACI,QAAQ,CAAC,eAAe,CAAC,IAC3CyH,SAAS,CAAC7H,OAAO,CAACI,QAAQ,CAAC,iBAAiB,CAAC,IAC7CyH,SAAS,CAAC7H,OAAO,CAACI,QAAQ,CAAC,SAAS,CAAC,IACpCyH,SAAS,CAASjD,IAAI,KAAK,aAAa,IACzC,CAAEiD,SAAS,CAAS9F,QAAQ,CAAC,CAAC;;MAEhC,IAAI4C,mBAAmB,EAAE;QACvB;QACA,MAAM6D,eAAe,GAAG,IAAI7I,KAAK,CAAC,iBAAiB,CAAC;QACpD6I,eAAe,CAAC5I,IAAI,GAAG,cAAc;QACrC,MAAM4I,eAAe;MACvB;IACF;IAEA,MAAMX,SAAS;EACjB;EAEQ1J,gBAAgBA,CAACR,QAAgB,EAAEC,MAA4B,EAAU;IAC/E,MAAM6K,SAAS,GAAG7K,MAAM,GAAGyB,IAAI,CAACC,SAAS,CAAC1B,MAAM,EAAE,IAAA4E,4BAAc,EAAC5E,MAAM,CAAC,CAAC8K,IAAI,CAAC,CAAC,CAAC,GAAG,EAAE;IACrF,OAAO,GAAG/K,QAAQ,GAAG8K,SAAS,EAAE;EAClC;EAEQjK,aAAaA,CAAIkE,GAAW,EAAY;IAC9C,MAAMiG,KAAK,GAAG,IAAI,CAAC1M,KAAK,CAAC6C,GAAG,CAAC4D,GAAG,CAAC;IACjC,IAAI,CAACiG,KAAK,EAAE,OAAO,IAAI;IAEvB,MAAM7L,GAAG,GAAGD,IAAI,CAACC,GAAG,CAAC,CAAC;IACtB,IAAIA,GAAG,GAAG6L,KAAK,CAACC,SAAS,GAAGD,KAAK,CAAC7K,GAAG,EAAE;MACrC,IAAI,CAAC7B,KAAK,CAACuD,MAAM,CAACkD,GAAG,CAAC;MACtB,OAAO,IAAI;IACb;;IAEA;IACAiG,KAAK,CAACE,WAAW,EAAE;IACnBF,KAAK,CAACG,UAAU,GAAGhM,GAAG;IAEtB,OAAO6L,KAAK,CAACzJ,IAAI;EACnB;EAEQY,YAAYA,CAAI4C,GAAW,EAAY;IAC7C,MAAMiG,KAAK,GAAG,IAAI,CAAC1M,KAAK,CAAC6C,GAAG,CAAC4D,GAAG,CAAC;IACjC,OAAOiG,KAAK,GAAIA,KAAK,CAACzJ,IAAI,GAAS,IAAI;EACzC;EAEQC,aAAaA,CAAIuD,GAAW,EAAExD,IAAO,EAAEpB,GAAW,EAAQ;IAChE;IACA,IAAI,IAAI,CAAC7B,KAAK,CAACiK,IAAI,IAAI,IAAI,CAAC/I,YAAY,EAAE;MACxC,IAAI,CAAC4L,QAAQ,CAAC,CAAC;IACjB;IAEA,MAAMJ,KAAoB,GAAG;MAC3BzJ,IAAI;MACJ0J,SAAS,EAAE/L,IAAI,CAACC,GAAG,CAAC,CAAC;MACrBgB,GAAG;MACH4E,GAAG;MACHmG,WAAW,EAAE,CAAC;MACdC,UAAU,EAAEjM,IAAI,CAACC,GAAG,CAAC;IACvB,CAAC;IAED,IAAI,CAACb,KAAK,CAACgD,GAAG,CAACyD,GAAG,EAAEiG,KAAK,CAAC;EAC5B;EAEQI,QAAQA,CAAA,EAAS;IACvB,IAAIC,WAA6C,GAAG,IAAI;IACxD,IAAIC,UAAU,GAAGpM,IAAI,CAACC,GAAG,CAAC,CAAC;IAE3B,KAAK,MAAM,CAAC4F,GAAG,EAAEiG,KAAK,CAAC,IAAIjH,KAAK,CAACyE,IAAI,CAAC,IAAI,CAAClK,KAAK,CAACiN,OAAO,CAAC,CAAC,CAAC,EAAE;MAC3D,IAAIP,KAAK,CAACG,UAAU,GAAGG,UAAU,EAAE;QACjCA,UAAU,GAAGN,KAAK,CAACG,UAAU;QAC7BE,WAAW,GAAG,CAACtG,GAAG,EAAEiG,KAAK,CAAC;MAC5B;IACF;IAEA,IAAIK,WAAW,EAAE;MACf,IAAI,CAAC/M,KAAK,CAACuD,MAAM,CAACwJ,WAAW,CAAC,CAAC,CAAC,CAAC;MACjC3K,8BAAc,CAACC,KAAK,CAAC,aAAa,EAAE,UAAU,EAAE,4BAA4B0K,WAAW,CAAC,CAAC,CAAC,EAAE,CAAC;IAC/F;EACF;EAEQtK,aAAaA,CAACyK,YAAoB,EAAQ;IAChD,IAAI,CAAC7M,OAAO,CAACK,eAAe,GAAG,IAAI,CAACL,OAAO,CAACK,eAAe,GAAG,GAAG,GAAGwM,YAAY,GAAG,GAAG;IACtF,IAAI,CAAC7M,OAAO,CAACM,UAAU,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC;EACtC;EAEQkL,qBAAqBA,CAACjK,QAAoC,EAAU;IAC1E,QAAQA,QAAQ;MACd,KAAK,MAAM;QACT,OAAO,IAAI;MAAE;MACf,KAAK,KAAK;QACR,OAAO,IAAI;MAAE;MACf;QACE,OAAO,IAAI;MAAE;IACjB;EACF;EAEQqG,gBAAgBA,CAAC3C,KAAY,EAAS;IAC5C,MAAM2H,eAAe,GAAG,IAAIlN,GAAG,CAAc,CAAC;IAE9C,KAAK,MAAMmN,IAAI,IAAI5H,KAAK,EAAE;MACxB,MAAMiB,GAAG,GAAG,GAAG2G,IAAI,CAACC,QAAQ,IAAID,IAAI,CAACpI,EAAE,IAAIoI,IAAI,CAACE,SAAS,IACvDF,IAAI,CAACpE,IAAI,IAAIoE,IAAI,CAACG,UAAU,IAAI,CAAC,EACjC;MAEF,IAAIH,IAAI,CAACE,SAAS,EAAEtC,WAAW,CAAC,CAAC,KAAK,QAAQ,EAAE;QAC9C,IAAImC,eAAe,CAACvK,GAAG,CAAC6D,GAAG,CAAC,EAAE;UAC5B,MAAM+G,QAAQ,GAAGL,eAAe,CAACtK,GAAG,CAAC4D,GAAG,CAAC;UACzC,IAAI2G,IAAI,CAACK,SAAS,EAAEzC,WAAW,CAAC,CAAC,CAAC7G,QAAQ,CAAC,MAAM,CAAC,EAAE;YAClDqJ,QAAQ,CAACvE,QAAQ,GAAGmE,IAAI,CAACM,KAAK,IAAIN,IAAI,CAAClF,IAAI;UAC7C,CAAC,MAAM,IAAIkF,IAAI,CAACK,SAAS,EAAEzC,WAAW,CAAC,CAAC,CAAC7G,QAAQ,CAAC,OAAO,CAAC,EAAE;YAC1DqJ,QAAQ,CAACtE,SAAS,GAAGkE,IAAI,CAACM,KAAK,IAAIN,IAAI,CAAClF,IAAI;UAC9C;QACF,CAAC,MAAM;UACL,MAAMyF,YAAY,GAAG;YAAE,GAAGP;UAAK,CAAC;UAChCO,YAAY,CAAC9E,MAAM,GAAGuE,IAAI,CAACQ,UAAU,IAAIR,IAAI,CAACtE,OAAO,IAAI,cAAc;UAEvE,IAAIsE,IAAI,CAACK,SAAS,EAAEzC,WAAW,CAAC,CAAC,CAAC7G,QAAQ,CAAC,MAAM,CAAC,EAAE;YAClDwJ,YAAY,CAAC1E,QAAQ,GAAGmE,IAAI,CAACM,KAAK,IAAIN,IAAI,CAAClF,IAAI;YAC/CyF,YAAY,CAACzE,SAAS,GAAG,IAAI;UAC/B,CAAC,MAAM,IAAIkE,IAAI,CAACK,SAAS,EAAEzC,WAAW,CAAC,CAAC,CAAC7G,QAAQ,CAAC,OAAO,CAAC,EAAE;YAC1DwJ,YAAY,CAAC1E,QAAQ,GAAG,IAAI;YAC5B0E,YAAY,CAACzE,SAAS,GAAGkE,IAAI,CAACM,KAAK,IAAIN,IAAI,CAAClF,IAAI;UAClD;UAEAiF,eAAe,CAACnK,GAAG,CAACyD,GAAG,EAAEkH,YAAY,CAAC;QACxC;MACF,CAAC,MAAM;QACLR,eAAe,CAACnK,GAAG,CAACyD,GAAG,EAAE2G,IAAI,CAAC;MAChC;IACF;IAEA,OAAO3H,KAAK,CAACyE,IAAI,CAACiD,eAAe,CAAChD,MAAM,CAAC,CAAC,CAAC;EAC7C;EAEQ9B,kBAAkBA,CAAC7C,KAAY,EAAE8B,KAAc,EAAkB;IACvE,MAAMnF,SAAS,GAAGvB,IAAI,CAACC,GAAG,CAAC,CAAC;IAC5B,MAAMgN,cAA8B,GAAG,EAAE;IACzC,MAAMpN,MAAgB,GAAG,EAAE;IAE3B2B,8BAAc,CAACC,KAAK,CAClB,aAAa,EACb,oBAAoB,EACpB,0BAA0BmD,KAAK,CAAClC,MAAM,QAAQ,EAC9C;MACEgE,KAAK;MACLwG,UAAU,EAAEtI,KAAK,CAAClC;IACpB,CACF,CAAC;IAED,KAAK,IAAIyK,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGvI,KAAK,CAAClC,MAAM,EAAEyK,CAAC,EAAE,EAAE;MACrC,MAAMX,IAAI,GAAG5H,KAAK,CAACuI,CAAC,CAAC;MAErB,IAAI;QACF;QACA,MAAMC,gBAAgB,GAAGC,oCAAa,CAACC,kBAAkB,CAACd,IAAI,EAAmB9F,KAAK,EAAE;UACtF6G,MAAM,EAAE,oBAAoB;UAC5BxB,SAAS,EAAE/L,IAAI,CAACC,GAAG,CAAC;QACtB,CAAC,CAAC;QAEF,IAAImN,gBAAgB,CAACI,OAAO,IAAIJ,gBAAgB,CAAC/K,IAAI,EAAE;UACrD4K,cAAc,CAAC1I,IAAI,CAAC6I,gBAAgB,CAAC/K,IAAI,CAAC;QAC5C,CAAC,MAAM;UACL;UACA,MAAMoL,QAAQ,GAAGL,gBAAgB,CAACvN,MAAM,CAACkF,GAAG,CAAC2I,CAAC,IAAIA,CAAC,CAACvK,OAAO,CAAC,CAACiE,IAAI,CAAC,IAAI,CAAC;UACvEvH,MAAM,CAAC0E,IAAI,CAAC,QAAQ4I,CAAC,KAAKM,QAAQ,EAAE,CAAC;UAErCjM,8BAAc,CAAC0B,IAAI,CACjB,aAAa,EACb,gBAAgB,EAChB,2BAA2BuK,QAAQ,EAAE,EACrC;YACEjB,IAAI,EAAEA,IAAI;YACV9F,KAAK;YACL7G,MAAM,EAAEuN,gBAAgB,CAACvN,MAAM;YAC/B8N,QAAQ,EAAEP,gBAAgB,CAACO;UAC7B,CACF,CAAC;QACH;MACF,CAAC,CAAC,OAAO/K,KAAK,EAAE;QACd;QACA,MAAMgL,UAAU,GAAG,IAAI,CAACC,aAAa,CAACrB,IAAI,EAAE9F,KAAK,CAAC;QAClD,IAAIkH,UAAU,EAAE;UACdX,cAAc,CAAC1I,IAAI,CAACqJ,UAAU,CAAC;UAC/BpM,8BAAc,CAAC0B,IAAI,CACjB,aAAa,EACb,iBAAiB,EACjB,sDAAsD,EACtD;YACEsJ,IAAI,EAAEA,IAAI;YACV9F,KAAK;YACL9D,KAAK,EAAEA,KAAK,YAAYE,KAAK,GAAGF,KAAK,CAACO,OAAO,GAAGC,MAAM,CAACR,KAAK;UAC9D,CACF,CAAC;QACH;MACF;IACF;IAEA,MAAMhB,QAAQ,GAAG5B,IAAI,CAACC,GAAG,CAAC,CAAC,GAAGsB,SAAS;IACvC,MAAMuM,WAAW,GAAGlJ,KAAK,CAAClC,MAAM,GAAG,CAAC,GAAIuK,cAAc,CAACvK,MAAM,GAAGkC,KAAK,CAAClC,MAAM,GAAI,GAAG,GAAG,CAAC;IAEvFlB,8BAAc,CAACuM,iBAAiB,CAC9B,oBAAoB,EACpBrH,KAAK,IAAI,SAAS,EAClB9B,KAAK,CAAClC,MAAM,EACZuK,cAAc,CAACvK,MAAM,EACrB7C,MAAM,CAAC6C,MAAM,EACbuK,cAAc,CAACvK,MAAM,GAAG,CAAC,GACrBuK,cAAc,CAACzD,MAAM,CAAC,CAACC,GAAG,EAAEd,CAAC,KAAKc,GAAG,GAAGd,CAAC,CAACG,YAAY,EAAE,CAAC,CAAC,GAAGmE,cAAc,CAACvK,MAAM,GAClF,CAAC,EACLd,QAAQ,EACR;MAAEkM,WAAW;MAAEE,WAAW,EAAEnO,MAAM,CAAC6C;IAAO,CAC5C,CAAC;IAED,OAAOuK,cAAc;EACvB;;EAEA;AACF;AACA;EACUY,aAAaA,CAACrB,IAAS,EAAE9F,KAAc,EAAuB;IACpE,IAAI;MACF,MAAMuH,UAAU,GAAG;QACjB7J,EAAE,EAAEoI,IAAI,CAACpI,EAAE,IAAIoI,IAAI,CAACC,QAAQ,IAAI,GAAGD,IAAI,CAAC0B,WAAW,IAAI1B,IAAI,CAACE,SAAS,EAAE;QACvEzE,MAAM,EAAEuE,IAAI,CAACvE,MAAM,IAAIuE,IAAI,CAAC0B,WAAW,IAAI1B,IAAI,CAACQ,UAAU,IAAI,SAAS;QACvE9E,OAAO,EAAEsE,IAAI,CAACtE,OAAO,IAAIsE,IAAI,CAACQ,UAAU,IAAI,oBAAoB;QAChE7E,IAAI,EAAEqE,IAAI,CAACrE,IAAI,IAAIqE,IAAI,CAACE,SAAS,IAAI,SAAS;QAC9CtE,IAAI,EAAE+F,UAAU,CAAC3B,IAAI,CAACpE,IAAI,IAAIoE,IAAI,CAACG,UAAU,IAAI,CAAC,CAAC;QACnDtE,QAAQ,EAAE8F,UAAU,CAAC3B,IAAI,CAACnE,QAAQ,IAAImE,IAAI,CAAC4B,SAAS,IAAI5B,IAAI,CAACM,KAAK,IAAI,CAAC,CAAC;QACxExE,SAAS,EAAE6F,UAAU,CAAC3B,IAAI,CAAClE,SAAS,IAAIkE,IAAI,CAAC6B,UAAU,IAAI7B,IAAI,CAACM,KAAK,IAAI,CAAC,CAAC;QAC3EvE,UAAU,EAAE4F,UAAU,CAAC3B,IAAI,CAACjE,UAAU,IAAI,CAAC,CAAC;QAC5C7B,KAAK,EAAE8F,IAAI,CAAC9F,KAAK,IAAIA,KAAK,IAAI,SAAS;QACvC8B,QAAQ,EAAEgE,IAAI,CAAChE,QAAQ,IAAIgE,IAAI,CAAC8B,UAAU,IAAI,IAAItO,IAAI,CAAC,CAAC,CAACyI,WAAW,CAAC,CAAC;QACtEC,QAAQ,EAAG8D,IAAI,CAAC9D,QAAQ,IAAI,MAAoD;QAChF6F,YAAY,EAAE/B,IAAI,CAAC+B,YAAY,IAAI/B,IAAI,CAACgC,SAAS,IAAIhC,IAAI,CAACiC,QAAQ,IAAInK,SAAS;QAC/EsE,UAAU,EAAE,gBAAgB;QAC5BC,WAAW,EAAE,IAAI7I,IAAI,CAAC,CAAC,CAACyI,WAAW,CAAC,CAAC;QACrCK,YAAY,EAAE,EAAE;QAAE;QAClBC,aAAa,EAAEyD;MACjB,CAAC;;MAED;MACA,IAAIA,IAAI,CAACE,SAAS,IAAIF,IAAI,CAACE,SAAS,KAAKuB,UAAU,CAAC9F,IAAI,EAAE;QACxD3G,8BAAc,CAACC,KAAK,CAAC,aAAa,EAAE,aAAa,EAAE,+BAA+B+K,IAAI,CAACE,SAAS,OAAOuB,UAAU,CAAC9F,IAAI,EAAE,EAAE;UACxHuG,QAAQ,EAAElC,IAAI;UACdmC,MAAM,EAAEV;QACV,CAAC,CAAC;MACJ;MAEA,OAAOA,UAAU;IACnB,CAAC,CAAC,OAAOrL,KAAK,EAAE;MACdpB,8BAAc,CAACoB,KAAK,CAClB,aAAa,EACb,eAAe,EACf,wCAAwC,EACxC;QAAE4J,IAAI;QAAE9F;MAAM,CAAC,EACf9D,KAAK,YAAYE,KAAK,GAAGF,KAAK,GAAG,IAAIE,KAAK,CAACM,MAAM,CAACR,KAAK,CAAC,CAC1D,CAAC;MACD,OAAO,IAAI;IACb;EACF;EAEQgM,eAAeA,CAAA,EAAW;IAChC;IACA,OAAO,IAAAC,mCAAiB,EAAC;MACvBC,IAAI,EAAE,UAAU;MAChBC,OAAO,EAAE;IACX,CAAC,CAAC;EACJ;EAEQrO,mBAAmBA,CAAA,EAAS;IAClC,IAAI;MACF,MAAMsO,KAAK,GAAG,IAAI,CAACJ,eAAe,CAAC,CAAC;MACpC,IAAI,CAAC1O,SAAS,GAAG,IAAI+O,SAAS,CAACD,KAAK,CAAC;MACrCxN,8BAAc,CAACyD,IAAI,CAAC,aAAa,EAAE,WAAW,EAAE,iBAAiB+J,KAAK,EAAE,CAAC;MAEzE,IAAI,CAAC9O,SAAS,CAACgP,MAAM,GAAG,MAAM;QAC5B1N,8BAAc,CAACyD,IAAI,CAAC,aAAa,EAAE,WAAW,EAAE,qBAAqB,CAAC;QACtE,IAAI,CAAC9E,iBAAiB,GAAG,CAAC;MAC5B,CAAC;MAED,IAAI,CAACD,SAAS,CAACiP,SAAS,GAAGtF,KAAK,IAAI;QAClC,IAAI;UACF,MAAM1G,OAAO,GAAGX,IAAI,CAAC4M,KAAK,CAACvF,KAAK,CAACxH,IAAI,CAAC;UACtC,IAAI,CAACgN,sBAAsB,CAAClM,OAAO,CAAC;QACtC,CAAC,CAAC,OAAOP,KAAK,EAAE;UACd,MAAM0M,MAAM,GAAG1M,KAAK,YAAYE,KAAK,GAAGF,KAAK,GAAG,IAAIE,KAAK,CAACM,MAAM,CAACR,KAAK,CAAC,CAAC;UACxEpB,8BAAc,CAAC0B,IAAI,CAAC,aAAa,EAAE,WAAW,EAAE,uBAAuB,EAAE,CAAC,CAAC,EAAEoM,MAAM,CAAC;QACtF;MACF,CAAC;MAED,IAAI,CAACpP,SAAS,CAACqP,OAAO,GAAG1F,KAAK,IAAI;QAChCrI,8BAAc,CAAC0B,IAAI,CAAC,aAAa,EAAE,WAAW,EAAE,sBAAsB2G,KAAK,CAAC9B,IAAI,GAAG,CAAC;QACpF,IAAI,CAAC7H,SAAS,GAAG,IAAI;QACrB,IAAI2J,KAAK,CAAC9B,IAAI,KAAK,IAAI,IAAI,IAAI,CAAC5H,iBAAiB,GAAG,IAAI,CAACC,oBAAoB,EAAE;UAC7E,MAAMiL,KAAK,GAAGC,IAAI,CAACC,GAAG,CAAC,IAAI,GAAGD,IAAI,CAACE,GAAG,CAAC,CAAC,EAAE,IAAI,CAACrL,iBAAiB,CAAC,EAAE,KAAK,CAAC;UACzEqB,8BAAc,CAACyD,IAAI,CAAC,aAAa,EAAE,WAAW,EAAE,8BAA8BoG,KAAK,IAAI,CAAC;UACxF3G,UAAU,CAAC,MAAM;YACf,IAAI,CAACvE,iBAAiB,EAAE;YACxB,IAAI,CAACO,mBAAmB,CAAC,CAAC;UAC5B,CAAC,EAAE2K,KAAK,CAAC;QACX,CAAC,MAAM;UACL7J,8BAAc,CAACyD,IAAI,CACjB,aAAa,EACb,WAAW,EACX,gDACF,CAAC;QACH;MACF,CAAC;MAED,IAAI,CAAC/E,SAAS,CAACsP,OAAO,GAAG5M,KAAK,IAAI;QAChC,MAAM0M,MAAM,GACV1M,KAAK,YAAYE,KAAK,GAAGF,KAAK,GAAG,IAAIE,KAAK,CAACF,KAAK,EAAE6M,QAAQ,GAAG,CAAC,IAAI,iBAAiB,CAAC;QACtFjO,8BAAc,CAAC0B,IAAI,CAAC,aAAa,EAAE,WAAW,EAAE,kBAAkB,EAAE,CAAC,CAAC,EAAEoM,MAAM,CAAC;MACjF,CAAC;IACH,CAAC,CAAC,OAAO1M,KAAK,EAAE;MACd,MAAM0M,MAAM,GAAG1M,KAAK,YAAYE,KAAK,GAAGF,KAAK,GAAG,IAAIE,KAAK,CAACM,MAAM,CAACR,KAAK,CAAC,CAAC;MACxEpB,8BAAc,CAAC0B,IAAI,CACjB,aAAa,EACb,WAAW,EACX,iDAAiD,EACjD,CAAC,CAAC,EACFoM,MACF,CAAC;IACH;EACF;EAEQD,sBAAsBA,CAAClM,OAAY,EAAQ;IACjD,IAAIA,OAAO,CAAC4G,IAAI,KAAK,aAAa,EAAE;MAClC;MACA,MAAMzD,OAAO,GAAG,IAAInD,OAAO,CAACoK,MAAM,GAAG;MACrC,IAAI,CAACmC,sBAAsB,CAACpJ,OAAO,CAAC;;MAEpC;MACA,KAAK,MAAM,CAACT,GAAG,EAAEvG,aAAa,CAAC,IAAIuF,KAAK,CAACyE,IAAI,CAAC,IAAI,CAAChK,aAAa,CAAC+M,OAAO,CAAC,CAAC,CAAC,EAAE;QAC3E,IAAIxG,GAAG,CAACtC,QAAQ,CAACJ,OAAO,CAACoK,MAAM,CAAC,EAAE;UAChCjO,aAAa,CAACkG,OAAO,CAACmK,GAAG,IAAI;YAC3B,IAAIA,GAAG,CAAC3O,OAAO,CAACgF,QAAQ,EAAE;cACxB2J,GAAG,CAAC7J,QAAQ,CAAC3C,OAAO,CAACd,IAAI,CAAC;YAC5B;UACF,CAAC,CAAC;QACJ;MACF;IACF;EACF;EAEQqN,sBAAsBA,CAACpJ,OAAe,EAAQ;IACpD,MAAMwD,YAAsB,GAAG,EAAE;IAEjC,KAAK,MAAMjE,GAAG,IAAIhB,KAAK,CAACyE,IAAI,CAAC,IAAI,CAAClK,KAAK,CAAC+K,IAAI,CAAC,CAAC,CAAC,EAAE;MAC/C,IAAI,IAAI,CAACyF,cAAc,CAAC/J,GAAG,EAAES,OAAO,CAAC,EAAE;QACrCwD,YAAY,CAACvF,IAAI,CAACsB,GAAG,CAAC;MACxB;IACF;IAEAiE,YAAY,CAACtE,OAAO,CAACK,GAAG,IAAI,IAAI,CAACzG,KAAK,CAACuD,MAAM,CAACkD,GAAG,CAAC,CAAC;IAEnD,IAAIiE,YAAY,CAACpH,MAAM,GAAG,CAAC,EAAE;MAC3BlB,8BAAc,CAACyD,IAAI,CAAC,aAAa,EAAE,mBAAmB,EAAE,eAAe6E,YAAY,CAACpH,MAAM,oCAAoC4D,OAAO,EAAE,CAAC;IAC1I;EACF;EAEQsJ,cAAcA,CAACC,GAAW,EAAEvJ,OAAe,EAAW;IAC5D,MAAMwJ,KAAK,GAAG,IAAIC,MAAM,CAACzJ,OAAO,CAAC0J,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;IACtD,OAAOF,KAAK,CAACG,IAAI,CAACJ,GAAG,CAAC;EACxB;EAEQtJ,sBAAsBA,CAC5BD,OAAe,EACgD;IAC/D;IACA,MAAMf,WAA0E,GAAG,EAAE;IAErF,IAAIe,OAAO,CAAC/C,QAAQ,CAAC,KAAK,CAAC,EAAE;MAC3BgC,WAAW,CAAChB,IAAI,CACd;QAAEzD,QAAQ,EAAE,uBAAuB;QAAEC,MAAM,EAAE;UAAEmG,WAAW,EAAE;QAAc;MAAE,CAAC,EAC7E;QAAEpG,QAAQ,EAAE,2BAA2B;QAAEC,MAAM,EAAE;UAAE2F,KAAK,EAAE;QAAM;MAAE,CACpE,CAAC;IACH;IAEA,OAAOnB,WAAW;EACpB;EAEQsC,iBAAiBA,CAACnB,KAAa,EAAEC,QAAgB,EAAEtE,IAAa,EAAQ;IAChF;IACEb,8BAAc,CAACyD,IAAI,CAAC,aAAa,EAAE,gBAAgB,EAAE,wBAAwByB,KAAK,IAAIC,QAAQ,EAAE,EAAE;MAAEtE;IAAK,CAAC,CAAC;;IAE3G;IACA,IAAI,CAACqN,sBAAsB,CAAC,IAAIhJ,KAAK,CAAC0D,WAAW,CAAC,CAAC,GAAG,CAAC;EACzD;EAEQ5J,mBAAmBA,CAAA,EAAS;IAClC0P,WAAW,CAAC,MAAM;MAChB,IAAI,IAAI,CAAC1Q,UAAU,CAACkD,MAAM,GAAG,CAAC,EAAE;QAC9B,MAAMyN,KAAK,GAAG,IAAI,CAAC3Q,UAAU,CAAC6G,MAAM,CAAC,CAAC,CAAC;QACvC,IAAI,CAAC+J,YAAY,CAACD,KAAK,CAAC;MAC1B;IACF,CAAC,EAAE,IAAI,CAAC9P,YAAY,CAAC;EACvB;EAEA,MAAc+P,YAAYA,CAACD,KAAqB,EAAiB;IAC/D,IAAIA,KAAK,CAACzN,MAAM,KAAK,CAAC,EAAE;IAExB,IAAI;MACN,MAAM2N,QAAQ,GAAG,MAAM,IAAI,CAAChN,UAAU,CAAC8M,KAAK,CAAC;MAC7C3O,8BAAc,CAACyD,IAAI,CAAC,aAAa,EAAE,cAAc,EAAE,sBAAsBkL,KAAK,CAACzN,MAAM,WAAW,CAAC;IAC/F,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdpB,8BAAc,CAACoB,KAAK,CAAC,aAAa,EAAE,cAAc,EAAE,wBAAwB,EAAE0B,SAAS,EAAE1B,KAAc,CAAC;IAC1G;EACF;EAEQnC,iBAAiBA,CAAA,EAAS;IAChC;IACAyP,WAAW,CAAC,MAAM;MAChB,MAAMjQ,GAAG,GAAGD,IAAI,CAACC,GAAG,CAAC,CAAC;MACtB,MAAM6J,YAAsB,GAAG,EAAE;MAEjC,KAAK,MAAM,CAACjE,GAAG,EAAEiG,KAAK,CAAC,IAAIjH,KAAK,CAACyE,IAAI,CAAC,IAAI,CAAClK,KAAK,CAACiN,OAAO,CAAC,CAAC,CAAC,EAAE;QAC3D,IAAIpM,GAAG,GAAG6L,KAAK,CAACC,SAAS,GAAGD,KAAK,CAAC7K,GAAG,EAAE;UACrC6I,YAAY,CAACvF,IAAI,CAACsB,GAAG,CAAC;QACxB;MACF;MAEAiE,YAAY,CAACtE,OAAO,CAACK,GAAG,IAAI,IAAI,CAACzG,KAAK,CAACuD,MAAM,CAACkD,GAAG,CAAC,CAAC;MAEnD,IAAIiE,YAAY,CAACpH,MAAM,GAAG,CAAC,EAAE;QAC3BlB,8BAAc,CAACyD,IAAI,CAAC,aAAa,EAAE,cAAc,EAAE,cAAc6E,YAAY,CAACpH,MAAM,wBAAwB,CAAC;MAC/G;IACF,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC;EACd;;EAEA;AACF;AACA;AACA;EACUiF,sBAAsBA,CAAC/C,KAAqB,EAAkB;IACtEpD,8BAAc,CAACC,KAAK,CAAC,aAAa,EAAE,qBAAqB,EAAE,yCAAyCmD,KAAK,CAAClC,MAAM,QAAQ,CAAC;;IAEvH;IACA,MAAM4N,gBAAgB,GAAG,CACvB,YAAY,EACZ,eAAe,EACf,cAAc,EACd,aAAa,EACb,iBAAiB,EACjB,MAAM,EACN,OAAO,EACP,MAAM,EACN,KAAK,EACL,gBAAgB,EAChB,2BAA2B,EAC3B,eAAe,EACf,oBAAoB,EACpB,eAAe,EACf,sBAAsB,CACvB;;IAED;IACA,MAAMC,eAAe,GAAG,CACtB,MAAM,EACN,WAAW,EACX,gBAAgB,EAChB,aAAa,EACb,cAAc,EACd,aAAa,EACb,SAAS,EACT,SAAS,EACT,OAAO,EACP,sBAAsB,EACtB,iBAAiB,EACjB,oBAAoB,EACpB,qBAAqB,EACrB,SAAS,EACT,iBAAiB,EACjB,gBAAgB,CACjB;IAED,MAAM7I,aAAa,GAAG9C,KAAK,CAAChB,MAAM,CAAC4I,IAAI,IAAI;MACzC,IAAI;QACF;QACA,IACE,CAACA,IAAI,CAACvE,MAAM,IACZuE,IAAI,CAACvE,MAAM,CAACmC,WAAW,CAAC,CAAC,CAAC7G,QAAQ,CAAC,OAAO,CAAC,IAC3CiJ,IAAI,CAACvE,MAAM,CAACmC,WAAW,CAAC,CAAC,CAAC7G,QAAQ,CAAC,MAAM,CAAC,IAC1CiJ,IAAI,CAACrE,IAAI,EAAEiC,WAAW,CAAC,CAAC,KAAK,QAAQ,EACrC;UACA5I,8BAAc,CAACC,KAAK,CAAC,aAAa,EAAE,gBAAgB,EAAE,2BAA2B+K,IAAI,CAACvE,MAAM,MAAMuE,IAAI,CAACrE,IAAI,EAAE,CAAC;UAC9G,OAAO,IAAI;QACb;QAEA,MAAMqI,QAAQ,GAAGhE,IAAI,CAACrE,IAAI,EAAEiC,WAAW,CAAC,CAAC,IAAI,EAAE;;QAE/C;QACA,MAAMqG,YAAY,GAAGjE,IAAI,CAACzD,aAAa;QACvC,MAAM2H,QAAQ,GAAGD,YAAY,EAAEC,QAAQ,IAAID,YAAY,EAAEE,GAAG,IAAI,EAAE;;QAElE;QACA,IAAI,CAACD,QAAQ,EAAE;UACblP,8BAAc,CAACC,KAAK,CAAC,aAAa,EAAE,gBAAgB,EAAE,wBAAwB+K,IAAI,CAACvE,MAAM,gBAAgB,CAAC;UAC1G,OAAO,IAAI;QACb;;QAEA;QACA,MAAM2I,SAAS,GAAGF,QAAQ,KAAK,GAAG,IAAIA,QAAQ,KAAK,CAAC,IAAIA,QAAQ,KAAK,GAAG;QACxE,MAAMG,aAAa,GAAGP,gBAAgB,CAACQ,IAAI,CAAC/G,IAAI,IAAIyG,QAAQ,CAACjN,QAAQ,CAACwG,IAAI,CAACK,WAAW,CAAC,CAAC,CAAC,CAAC;QAC1F,MAAM2G,YAAY,GAAGR,eAAe,CAACO,IAAI,CAAC/G,IAAI,IAAIyG,QAAQ,CAACjN,QAAQ,CAACwG,IAAI,CAACK,WAAW,CAAC,CAAC,CAAC,CAAC;QAExF,IAAI4G,UAAU,GAAG,IAAI;QAErB,IAAIJ,SAAS,IAAIG,YAAY,EAAE;UAC7BvP,8BAAc,CAACyD,IAAI,CAAC,aAAa,EAAE,gBAAgB,EAAE,8BAA8BuL,QAAQ,iBAAiBhE,IAAI,CAACvE,MAAM,EAAE,CAAC;UAC1H+I,UAAU,GAAG,KAAK;QACpB,CAAC,MAAM,IAAI,CAACJ,SAAS,IAAIC,aAAa,EAAE;UACtCrP,8BAAc,CAACyD,IAAI,CAAC,aAAa,EAAE,gBAAgB,EAAE,+BAA+BuL,QAAQ,yBAAyBhE,IAAI,CAACvE,MAAM,UAAUyI,QAAQ,GAAG,CAAC;UACtJM,UAAU,GAAG,KAAK;QACpB,CAAC,MAAM;UACLxP,8BAAc,CAACC,KAAK,CAClB,aAAa,EACb,gBAAgB,EAChB,WAAWmP,SAAS,GAAG,SAAS,GAAG,iBAAiB,IAAIpE,IAAI,CAACvE,MAAM,eAAeuI,QAAQ,GAC5F,CAAC;QACH;QAEA,OAAOQ,UAAU;MACnB,CAAC,CAAC,OAAOpO,KAAK,EAAE;QACpBpB,8BAAc,CAACoB,KAAK,CAAC,aAAa,EAAE,gBAAgB,EAAE,4BAA4B4J,IAAI,CAACvE,MAAM,EAAE,EAAE3D,SAAS,EAAE1B,KAAc,CAAC;QACrH,OAAO,IAAI,CAAC,CAAC;MACf;IACF,CAAC,CAAC;IAEFpB,8BAAc,CAACyD,IAAI,CACjB,aAAa,EACb,uBAAuB,EACvB,uBAAuBL,KAAK,CAAClC,MAAM,MAAMgF,aAAa,CAAChF,MAAM,wBAAwBkC,KAAK,CAAClC,MAAM,GAAGgF,aAAa,CAAChF,MAAM,GAC1H,CAAC;IACD,OAAOgF,aAAa;EACtB;AACF;;AAEA;AACO,MAAMuJ,mBAAmB,GAAAC,OAAA,CAAAD,mBAAA,GAAG,IAAI/R,mBAAmB,CAAC,CAAC","ignoreList":[]}