{"version":3,"names":["_healthAccessors","require","hasWarnedLegacyCacheRequests","hasWarnedLegacyApiRequests","hasWarnedLegacyCacheHits","hasWarnedLegacyCacheErrors","_getNestedValue","obj","path","current","key","undefined","getTotalRequests","metricsObj","cache","total_requests","cache_performance","process","env","NODE_ENV","console","debug","getSuccessRequests","api","success_requests","totalRequests","errorRequests","error_requests","Math","max","getErrorRequests","api_performance","totalErrors","Object","values","forEach","stats","statsObj","errors","getApiErrorRate","getApiTotalRequests","total_calls","getAverageLatencyMs","avg_latency_ms","totalLatency","endpointCount","avgTime","avg_time_ms","getCacheHits","hits","getCacheMisses","misses","getCacheErrors"],"sources":["metricsAccessors.ts"],"sourcesContent":["/**\r\n * Metrics accessors to prevent runtime errors from total_requests variations\r\n * Handles legacy field mappings and provides safe defaults with fallback paths\r\n * \r\n * @module metricsAccessors\r\n */\r\n\r\n// Metrics-like object types for better type safety  \r\ninterface MetricsLikeObject {\r\n  api?: {\r\n    total_requests?: number;\r\n    success_requests?: number;\r\n    error_requests?: number;\r\n    avg_latency_ms?: number;\r\n  };\r\n  cache?: {\r\n    hits?: number;\r\n    misses?: number;\r\n    total_requests?: number;\r\n    hit_rate?: number;\r\n    errors?: number;\r\n  };\r\n  // Legacy structures\r\n  api_performance?: Record<string, unknown>;\r\n  cache_performance?: {\r\n    hits?: number;\r\n    misses?: number;\r\n    total_requests?: number;\r\n    hit_rate?: number;\r\n    errors?: number;\r\n  };\r\n  // Even flatter legacy\r\n  total_requests?: number;\r\n}\r\n\r\n// Module-scoped warning flags to prevent spam\r\nlet hasWarnedLegacyCacheRequests = false;\r\nlet hasWarnedLegacyApiRequests = false;\r\nlet hasWarnedLegacyCacheHits = false;\r\nlet hasWarnedLegacyCacheErrors = false;\r\n\r\n/**\r\n * Safe helper for nested property traversal (reserved for future use)\r\n */\r\nconst _getNestedValue = (obj: unknown, path: string[]): unknown => {\r\n  let current = obj;\r\n  for (const key of path) {\r\n    if (current && typeof current === 'object' && key in current) {\r\n      current = (current as Record<string, unknown>)[key];\r\n    } else {\r\n      return undefined;\r\n    }\r\n  }\r\n  return current;\r\n};\r\n\r\n/**\r\n * Safely extract total requests from various metrics object structures\r\n * \r\n * Priority order:\r\n * 1. obj?.cache?.total_requests (canonical)\r\n * 2. obj?.cache_performance?.total_requests (legacy mapping)\r\n * 3. obj?.total_requests (flat legacy)\r\n * 4. Default: 0\r\n */\r\nexport function getTotalRequests(obj: unknown): number {\r\n  if (!obj || typeof obj !== 'object') {\r\n    return 0;\r\n  }\r\n\r\n  const metricsObj = obj as MetricsLikeObject;\r\n\r\n  // Priority 1: Canonical cache.total_requests\r\n  if (typeof metricsObj?.cache?.total_requests === 'number') {\r\n    return metricsObj.cache.total_requests;\r\n  }\r\n\r\n  // Priority 2: Legacy cache_performance.total_requests\r\n  if (typeof metricsObj?.cache_performance?.total_requests === 'number') {\r\n    if (!hasWarnedLegacyCacheRequests && process.env.NODE_ENV === 'development') {\r\n      hasWarnedLegacyCacheRequests = true;\r\n      // eslint-disable-next-line no-console\r\n      console.debug('[MetricsCompat] Using legacy cache_performance.total_requests, consider migrating to cache.total_requests');\r\n    }\r\n    return metricsObj.cache_performance.total_requests;\r\n  }\r\n\r\n  // Priority 3: Flat legacy structure\r\n  if (typeof metricsObj?.total_requests === 'number') {\r\n    if (!hasWarnedLegacyCacheRequests && process.env.NODE_ENV === 'development') {\r\n      hasWarnedLegacyCacheRequests = true;\r\n      // eslint-disable-next-line no-console\r\n      console.debug('[MetricsCompat] Using flat total_requests, consider migrating to cache.total_requests');\r\n    }\r\n    return metricsObj.total_requests;\r\n  }\r\n\r\n  // Default: 0\r\n  return 0;\r\n}\r\n\r\n/**\r\n * Safely extract success requests from API metrics\r\n */\r\nexport function getSuccessRequests(obj: unknown): number {\r\n  if (!obj || typeof obj !== 'object') {\r\n    return 0;\r\n  }\r\n\r\n  const metricsObj = obj as MetricsLikeObject;\r\n\r\n  // Priority 1: Canonical api.success_requests\r\n  if (typeof metricsObj?.api?.success_requests === 'number') {\r\n    return metricsObj.api.success_requests;\r\n  }\r\n\r\n  // Priority 2: Calculate from total - errors\r\n  const totalRequests = metricsObj?.api?.total_requests || 0;\r\n  const errorRequests = metricsObj?.api?.error_requests || 0;\r\n  if (totalRequests > 0) {\r\n    return Math.max(0, totalRequests - errorRequests);\r\n  }\r\n\r\n  return 0;\r\n}\r\n\r\n/**\r\n * Safely extract error requests from API metrics\r\n */\r\nexport function getErrorRequests(obj: unknown): number {\r\n  if (!obj || typeof obj !== 'object') {\r\n    return 0;\r\n  }\r\n\r\n  const metricsObj = obj as MetricsLikeObject;\r\n\r\n  // Priority 1: Canonical api.error_requests\r\n  if (typeof metricsObj?.api?.error_requests === 'number') {\r\n    return metricsObj.api.error_requests;\r\n  }\r\n\r\n  // Priority 2: Aggregate from legacy api_performance\r\n  if (metricsObj?.api_performance && typeof metricsObj.api_performance === 'object') {\r\n    let totalErrors = 0;\r\n    Object.values(metricsObj.api_performance).forEach(stats => {\r\n      if (stats && typeof stats === 'object') {\r\n        const statsObj = stats as Record<string, unknown>;\r\n        totalErrors += typeof statsObj.errors === 'number' ? statsObj.errors : 0;\r\n      }\r\n    });\r\n    \r\n    if (totalErrors > 0 && !hasWarnedLegacyApiRequests && process.env.NODE_ENV === 'development') {\r\n      hasWarnedLegacyApiRequests = true;\r\n      // eslint-disable-next-line no-console\r\n      console.debug('[MetricsCompat] Aggregating legacy api_performance errors, consider canonical api.error_requests');\r\n    }\r\n    \r\n    return totalErrors;\r\n  }\r\n\r\n  return 0;\r\n}\r\n\r\n/**\r\n * Safely calculate API error rate with safe division\r\n */\r\nexport function getApiErrorRate(obj: unknown): number {\r\n  const totalRequests = getApiTotalRequests(obj);\r\n  const errorRequests = getErrorRequests(obj);\r\n  \r\n  if (totalRequests === 0) {\r\n    return 0; // No requests = no error rate\r\n  }\r\n  \r\n  return (errorRequests / totalRequests) * 100; // Return as percentage\r\n}\r\n\r\n/**\r\n * Get total API requests (different from cache total_requests)\r\n */\r\nexport function getApiTotalRequests(obj: unknown): number {\r\n  if (!obj || typeof obj !== 'object') {\r\n    return 0;\r\n  }\r\n\r\n  const metricsObj = obj as MetricsLikeObject;\r\n\r\n  // Priority 1: Canonical api.total_requests\r\n  if (typeof metricsObj?.api?.total_requests === 'number') {\r\n    return metricsObj.api.total_requests;\r\n  }\r\n\r\n  // Priority 2: Aggregate from legacy api_performance\r\n  if (metricsObj?.api_performance && typeof metricsObj.api_performance === 'object') {\r\n    let totalRequests = 0;\r\n    Object.values(metricsObj.api_performance).forEach(stats => {\r\n      if (stats && typeof stats === 'object') {\r\n        const statsObj = stats as Record<string, unknown>;\r\n        totalRequests += typeof statsObj.total_calls === 'number' ? statsObj.total_calls : \r\n                         typeof statsObj.total_requests === 'number' ? statsObj.total_requests : 0;\r\n      }\r\n    });\r\n    \r\n    if (totalRequests > 0 && !hasWarnedLegacyApiRequests && process.env.NODE_ENV === 'development') {\r\n      hasWarnedLegacyApiRequests = true;\r\n      // eslint-disable-next-line no-console\r\n      console.debug('[MetricsCompat] Aggregating legacy api_performance total_calls, consider canonical api.total_requests');\r\n    }\r\n    \r\n    return totalRequests;\r\n  }\r\n\r\n  return 0;\r\n}\r\n\r\n/**\r\n * Safely extract average latency from API metrics\r\n */\r\nexport function getAverageLatencyMs(obj: unknown): number {\r\n  if (!obj || typeof obj !== 'object') {\r\n    return 0;\r\n  }\r\n\r\n  const metricsObj = obj as MetricsLikeObject;\r\n\r\n  // Priority 1: Canonical api.avg_latency_ms\r\n  if (typeof metricsObj?.api?.avg_latency_ms === 'number') {\r\n    return metricsObj.api.avg_latency_ms;\r\n  }\r\n\r\n  // Priority 2: Average from legacy api_performance\r\n  if (metricsObj?.api_performance && typeof metricsObj.api_performance === 'object') {\r\n    let totalLatency = 0;\r\n    let endpointCount = 0;\r\n    \r\n    Object.values(metricsObj.api_performance).forEach(stats => {\r\n      if (stats && typeof stats === 'object') {\r\n        const statsObj = stats as Record<string, unknown>;\r\n        const avgTime = typeof statsObj.avg_time_ms === 'number' ? statsObj.avg_time_ms :\r\n                        typeof statsObj.avg_latency_ms === 'number' ? statsObj.avg_latency_ms : 0;\r\n        if (avgTime > 0) {\r\n          totalLatency += avgTime;\r\n          endpointCount++;\r\n        }\r\n      }\r\n    });\r\n    \r\n    return endpointCount > 0 ? totalLatency / endpointCount : 0;\r\n  }\r\n\r\n  return 0;\r\n}\r\n\r\n/**\r\n * Safely extract cache hits\r\n */\r\nexport function getCacheHits(obj: unknown): number {\r\n  if (!obj || typeof obj !== 'object') {\r\n    return 0;\r\n  }\r\n\r\n  const metricsObj = obj as MetricsLikeObject;\r\n\r\n  // Priority 1: Canonical cache.hits\r\n  if (typeof metricsObj?.cache?.hits === 'number') {\r\n    return metricsObj.cache.hits;\r\n  }\r\n\r\n  // Priority 2: Legacy cache_performance.hits\r\n  if (typeof metricsObj?.cache_performance?.hits === 'number') {\r\n    if (!hasWarnedLegacyCacheHits && process.env.NODE_ENV === 'development') {\r\n      hasWarnedLegacyCacheHits = true;\r\n      // eslint-disable-next-line no-console\r\n      console.debug('[MetricsCompat] Using legacy cache_performance.hits, consider migrating to cache.hits');\r\n    }\r\n    return metricsObj.cache_performance.hits;\r\n  }\r\n\r\n  return 0;\r\n}\r\n\r\n/**\r\n * Safely extract cache misses\r\n */\r\nexport function getCacheMisses(obj: unknown): number {\r\n  if (!obj || typeof obj !== 'object') {\r\n    return 0;\r\n  }\r\n\r\n  const metricsObj = obj as MetricsLikeObject;\r\n\r\n  // Priority 1: Canonical cache.misses\r\n  if (typeof metricsObj?.cache?.misses === 'number') {\r\n    return metricsObj.cache.misses;\r\n  }\r\n\r\n  // Priority 2: Legacy cache_performance.misses\r\n  if (typeof metricsObj?.cache_performance?.misses === 'number') {\r\n    return metricsObj.cache_performance.misses;\r\n  }\r\n\r\n  return 0;\r\n}\r\n\r\n/**\r\n * Safely extract cache errors\r\n */\r\nexport function getCacheErrors(obj: unknown): number {\r\n  if (!obj || typeof obj !== 'object') {\r\n    return 0;\r\n  }\r\n\r\n  const metricsObj = obj as MetricsLikeObject;\r\n\r\n  // Priority 1: Canonical cache.errors\r\n  if (typeof metricsObj?.cache?.errors === 'number') {\r\n    return metricsObj.cache.errors;\r\n  }\r\n\r\n  // Priority 2: Legacy cache_performance.errors\r\n  if (typeof metricsObj?.cache_performance?.errors === 'number') {\r\n    if (!hasWarnedLegacyCacheErrors && process.env.NODE_ENV === 'development') {\r\n      hasWarnedLegacyCacheErrors = true;\r\n      // eslint-disable-next-line no-console\r\n      console.debug('[MetricsCompat] Using legacy cache_performance.errors, consider migrating to cache.errors');\r\n    }\r\n    return metricsObj.cache_performance.errors;\r\n  }\r\n\r\n  return 0;\r\n}\r\n\r\n/**\r\n * Re-export getCacheHitRate from healthAccessors for consistency\r\n * (Cache hit rate can come from either health or metrics contexts)\r\n */\r\nexport { getCacheHitRate } from './healthAccessors';"],"mappings":"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","ignoreList":[]}