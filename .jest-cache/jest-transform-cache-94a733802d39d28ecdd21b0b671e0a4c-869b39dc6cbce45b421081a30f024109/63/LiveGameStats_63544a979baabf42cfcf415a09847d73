f7438e20d326defb5e8bf8cab3e3d1ef
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.LiveGameStats = void 0;
var _react = _interopRequireWildcard(require("react"));
var _Card = _interopRequireDefault(require("./Card"));
var _PastMatchupTracker = _interopRequireDefault(require("./PastMatchupTracker"));
var _badge = require("./ui/badge");
var _jsxRuntime = require("react/jsx-runtime");
function _interopRequireWildcard(e, t) { if ("function" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function (e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || "object" != typeof e && "function" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (const t in e) "default" !== t && {}.hasOwnProperty.call(e, t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, t)) && (i.get || i.set) ? o(f, t, i) : f[t] = e[t]); return f; })(e, t); }
const LiveGameStats = ({
  gameId,
  refreshInterval = 300000,
  // 5 minutes
  awayTeam,
  homeTeam
}) => {
  const [gameData, setGameData] = (0, _react.useState)(null);
  const [playByPlayData, setPlayByPlayData] = (0, _react.useState)(null);
  const [loading, setLoading] = (0, _react.useState)(true);
  const [error, setError] = (0, _react.useState)(null);
  const [lastUpdate, setLastUpdate] = (0, _react.useState)(null);
  const [isRefreshing, setIsRefreshing] = (0, _react.useState)(false);
  const [activeTab, setActiveTab] = (0, _react.useState)('livestats');
  const fetchGameStats = async (isManualRefresh = false) => {
    try {
      if (isManualRefresh) {
        setIsRefreshing(true);
      }
      const response = await fetch(`/mlb/live-game-stats/${gameId}`);
      const data = await response.json();
      if (data.status === 'ok') {
        setGameData(data);
        setError(null);
        setLastUpdate(new Date());
      } else {
        setError(data.message || 'Failed to fetch game stats');
      }
    } catch (err) {
      setError('Error fetching live game stats');
      console.error('Error fetching game stats:', err);
    } finally {
      setLoading(false);
      if (isManualRefresh) {
        setIsRefreshing(false);
      }
    }
  };
  const fetchPlayByPlay = async (isManualRefresh = false) => {
    try {
      if (isManualRefresh) {
        setIsRefreshing(true);
      }
      const response = await fetch(`/mlb/play-by-play/${gameId}`);
      const data = await response.json();
      if (data.status === 'ok') {
        setPlayByPlayData(data);
        setError(null);
        setLastUpdate(new Date());
      } else {
        setError(data.message || 'Failed to fetch play-by-play data');
      }
    } catch (err) {
      setError('Error fetching play-by-play data');
      console.error('Error fetching play-by-play:', err);
    } finally {
      if (isManualRefresh) {
        setIsRefreshing(false);
      }
    }
  };
  const fetchCurrentTabData = (isManualRefresh = false) => {
    if (activeTab === 'livestats') {
      fetchGameStats(isManualRefresh);
    } else {
      fetchPlayByPlay(isManualRefresh);
    }
  };
  (0, _react.useEffect)(() => {
    fetchCurrentTabData();

    // Set up auto-refresh for live games
    const interval = setInterval(() => fetchCurrentTabData(), refreshInterval);
    return () => clearInterval(interval);
  }, [gameId, refreshInterval, activeTab]);

  // Fetch data when tab changes
  (0, _react.useEffect)(() => {
    if (activeTab === 'playbyplay' && !playByPlayData) {
      fetchPlayByPlay();
    }
  }, [activeTab]);
  if (loading) {
    return /*#__PURE__*/(0, _jsxRuntime.jsx)(_Card.default, {
      className: "p-6",
      children: /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
        className: "animate-pulse",
        children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
          className: "h-4 bg-gray-200 rounded mb-4"
        }), /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
          className: "h-8 bg-gray-200 rounded mb-4"
        }), /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
          className: "h-4 bg-gray-200 rounded"
        })]
      })
    });
  }
  if (error || !gameData) {
    return /*#__PURE__*/(0, _jsxRuntime.jsx)(_Card.default, {
      className: "p-6",
      children: /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
        className: "text-center text-red-600",
        children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("p", {
          children: "Unable to load live game stats"
        }), error && /*#__PURE__*/(0, _jsxRuntime.jsx)("p", {
          className: "text-sm text-gray-500 mt-2",
          children: error
        })]
      })
    });
  }
  const {
    teams,
    game_state,
    venue
  } = gameData;
  const isLive = game_state.status === 'In Progress';
  return /*#__PURE__*/(0, _jsxRuntime.jsx)(_Card.default, {
    className: "p-6 bg-gradient-to-br from-blue-50 to-green-50 border-2 border-blue-200",
    children: /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
      className: "space-y-4",
      children: [/*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
        className: "flex items-center justify-between",
        children: [/*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
          className: "flex space-x-1",
          children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("button", {
            onClick: () => setActiveTab('livestats'),
            className: `px-4 py-2 text-sm font-medium rounded-lg transition-colors ${activeTab === 'livestats' ? 'bg-blue-600 text-white' : 'bg-gray-100 text-gray-700 hover:bg-gray-200'}`,
            children: "Live Stats"
          }), /*#__PURE__*/(0, _jsxRuntime.jsx)("button", {
            onClick: () => setActiveTab('playbyplay'),
            className: `px-4 py-2 text-sm font-medium rounded-lg transition-colors ${activeTab === 'playbyplay' ? 'bg-blue-600 text-white' : 'bg-gray-100 text-gray-700 hover:bg-gray-200'}`,
            children: "Play by Play"
          }), /*#__PURE__*/(0, _jsxRuntime.jsx)("button", {
            onClick: () => setActiveTab('pastmatchups'),
            className: `px-4 py-2 text-sm font-medium rounded-lg transition-colors ${activeTab === 'pastmatchups' ? 'bg-blue-600 text-white' : 'bg-gray-100 text-gray-700 hover:bg-gray-200'}`,
            children: "Past Matchups"
          })]
        }), /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
          className: "flex items-center gap-2",
          children: [/*#__PURE__*/(0, _jsxRuntime.jsx)(_badge._Badge, {
            variant: isLive ? 'destructive' : 'secondary',
            className: isLive ? 'bg-red-500 animate-pulse' : '',
            children: isLive ? 'ðŸ”´ LIVE' : game_state.status
          }), isLive && /*#__PURE__*/(0, _jsxRuntime.jsxs)("span", {
            className: "text-sm text-gray-600",
            children: [game_state.inning_half, " ", game_state.inning]
          })]
        })]
      }), activeTab === 'livestats' ? /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
        className: "space-y-4",
        children: [/*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
          className: "grid grid-cols-2 gap-4",
          children: [/*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
            className: "text-center p-4 bg-white rounded-lg border border-gray-200",
            children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
              className: "text-sm text-gray-600 mb-1",
              children: "Away"
            }), /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
              className: "font-bold text-lg text-gray-800",
              children: teams.away.abbreviation
            }), /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
              className: "text-xs text-gray-500 mb-2",
              children: teams.away.name
            }), /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
              className: "text-3xl font-bold text-blue-600",
              children: teams.away.score
            }), /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
              className: "text-xs text-gray-500 mt-2",
              children: ["H: ", teams.away.hits, " | E: ", teams.away.errors]
            })]
          }), /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
            className: "text-center p-4 bg-white rounded-lg border border-gray-200",
            children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
              className: "text-sm text-gray-600 mb-1",
              children: "Home"
            }), /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
              className: "font-bold text-lg text-gray-800",
              children: teams.home.abbreviation
            }), /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
              className: "text-xs text-gray-500 mb-2",
              children: teams.home.name
            }), /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
              className: "text-3xl font-bold text-green-600",
              children: teams.home.score
            }), /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
              className: "text-xs text-gray-500 mt-2",
              children: ["H: ", teams.home.hits, " | E: ", teams.home.errors]
            })]
          })]
        }), /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
          className: "bg-white p-3 rounded-lg border border-gray-200",
          children: [/*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
            className: "grid grid-cols-2 gap-4 text-sm",
            children: [/*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
              children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("span", {
                className: "text-gray-600",
                children: "Venue:"
              }), /*#__PURE__*/(0, _jsxRuntime.jsx)("span", {
                className: "ml-2 font-medium text-gray-800",
                children: venue
              })]
            }), /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
              children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("span", {
                className: "text-gray-600",
                children: "Status:"
              }), /*#__PURE__*/(0, _jsxRuntime.jsx)("span", {
                className: "ml-2 font-medium text-gray-800",
                children: game_state.status
              })]
            })]
          }), lastUpdate && /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
            className: "flex items-center justify-between mt-2",
            children: [/*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
              className: "text-xs text-gray-500",
              children: ["Last updated: ", lastUpdate.toLocaleTimeString()]
            }), /*#__PURE__*/(0, _jsxRuntime.jsx)("button", {
              onClick: () => fetchCurrentTabData(true),
              disabled: isRefreshing,
              className: "text-xs px-2 py-1 bg-blue-100 hover:bg-blue-200 text-blue-700 rounded transition-colors disabled:opacity-50 disabled:cursor-not-allowed",
              children: isRefreshing ? 'ðŸ”„ Updating...' : 'ðŸ”„ Refresh'
            })]
          })]
        }), isLive && /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
          className: "text-center",
          children: /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
            className: "inline-flex items-center gap-2 text-sm text-gray-600 bg-yellow-100 px-3 py-1 rounded-full",
            children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
              className: "w-2 h-2 bg-red-500 rounded-full animate-pulse"
            }), "Updates automatically every ", refreshInterval / 60000, " minutes"]
          })
        })]
      }) : activeTab === 'playbyplay' ? /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
        className: "space-y-4",
        children: playByPlayData ? /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
          className: "bg-white p-4 rounded-lg border border-gray-200",
          children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("h4", {
            className: "text-lg font-semibold text-gray-800 mb-4",
            children: "Game Events"
          }), /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
            className: "space-y-3 max-h-96 overflow-y-auto",
            children: playByPlayData.events.map((event, index) => /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
              className: "border-b border-gray-100 pb-3",
              children: [/*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
                className: "flex items-center justify-between mb-1",
                children: [/*#__PURE__*/(0, _jsxRuntime.jsxs)("span", {
                  className: "text-sm font-medium text-gray-800",
                  children: [event.inning_half, " ", event.inning]
                }), /*#__PURE__*/(0, _jsxRuntime.jsx)("span", {
                  className: "text-xs text-gray-500",
                  children: event.timestamp
                })]
              }), /*#__PURE__*/(0, _jsxRuntime.jsx)("p", {
                className: "text-sm text-gray-700",
                children: event.description
              }), /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
                className: "flex items-center gap-4 mt-1 text-xs text-gray-500",
                children: [/*#__PURE__*/(0, _jsxRuntime.jsxs)("span", {
                  children: ["Away: ", event.away_score]
                }), /*#__PURE__*/(0, _jsxRuntime.jsxs)("span", {
                  children: ["Home: ", event.home_score]
                })]
              })]
            }, index))
          })]
        }) : /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
          className: "bg-white p-4 rounded-lg border border-gray-200 text-center",
          children: /*#__PURE__*/(0, _jsxRuntime.jsx)("p", {
            className: "text-gray-600",
            children: "Loading play by play data..."
          })
        })
      }) : activeTab === 'pastmatchups' ? /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
        className: "space-y-4",
        children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_PastMatchupTracker.default, {
          gameId: gameId,
          awayTeam: awayTeam || teams.away.name,
          homeTeam: homeTeam || teams.home.name
        })
      }) : null]
    })
  });
};
exports.LiveGameStats = LiveGameStats;
var _default = exports.default = LiveGameStats;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,