{"version":3,"names":["_react","_interopRequireWildcard","require","_jsxRuntime","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","SimpleDirectAPITest","props","setProps","useState","isLoading","setIsLoading","error","setError","rawResponse","setRawResponse","fetchSimpleProps","console","log","response","fetch","ok","Error","status","statusText","rawData","json","mappedProps","map","item","id","player_name","stat_type","player","stat","line","parseFloat","line_score","confidence","sport","matchup","event_name","err","errorMessage","message","String","isConnectivityError","includes","mockProps","useEffect","timeoutId","setTimeout","catch","clearTimeout","jsxs","className","children","jsx","onClick","disabled","length","prop","index","JSON","stringify","Array","isArray","slice","_default","exports"],"sources":["SimpleDirectAPITest.tsx"],"sourcesContent":["/**\r\n * Simple Direct API Test\r\n * This bypasses ALL the complex services and managers\r\n * to directly test the raw API -> UI data flow\r\n */\r\n\r\nimport React, { useEffect, useState } from 'react';\r\n\r\ninterface SimpleProp {\r\n  id: string;\r\n  player: string;\r\n  stat: string;\r\n  line: number;\r\n  confidence: number;\r\n  sport: string;\r\n  matchup: string;\r\n}\r\n\r\nconst SimpleDirectAPITest: React.FC = () => {\r\n  const [props, setProps] = useState<SimpleProp[]>([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [rawResponse, setRawResponse] = useState<any>(null);\r\n\r\n  const fetchSimpleProps = async () => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n    setProps([]);\r\n    setRawResponse(null);\r\n\r\n    try {\r\n      console.log('[SimpleDirectAPITest] Making direct API call...');\r\n\r\n      // Direct API call with no services or managers\r\n      const response = await fetch(\r\n        'http://localhost:8000/mlb/odds-comparison/?market_type=playerprops&limit=10'\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`API returned ${response.status}: ${response.statusText}`);\r\n      }\r\n\r\n      const rawData = await response.json();\r\n      setRawResponse(rawData);\r\n\r\n      console.log('[SimpleDirectAPITest] Raw API response:', rawData);\r\n\r\n      // Simple direct mapping with no validation\r\n      const mappedProps: SimpleProp[] = rawData.map((item: any) => ({\r\n        id: item.id || `${item.player_name}-${item.stat_type}`,\r\n        player: item.player_name || item.player || 'Unknown Player',\r\n        stat: item.stat_type || item.stat || 'Unknown Stat',\r\n        line: parseFloat(item.line || item.line_score || 0),\r\n        confidence: parseFloat(item.confidence || 0),\r\n        sport: item.sport || 'MLB',\r\n        matchup: item.matchup || item.event_name || 'Unknown Game',\r\n      }));\r\n\r\n      setProps(mappedProps);\r\n      console.log('[SimpleDirectAPITest] ‚úÖ Successfully mapped props:', mappedProps);\r\n    } catch (err) {\n      const errorMessage = err instanceof Error ? err.message : String(err);\n\n      // Check if this is a connectivity issue\n      const isConnectivityError = errorMessage.includes('Failed to fetch') ||\n                                 errorMessage.includes('Network Error') ||\n                                 errorMessage.includes('timeout');\n\n      if (isConnectivityError) {\n        console.log('[SimpleDirectAPITest] Backend unavailable - using mock data');\n\n        // Provide mock data when backend is unavailable\n        const mockProps: SimpleProp[] = [\n          {\n            id: 'mock-1',\n            player: 'Aaron Judge',\n            stat: 'Home Runs',\n            line: 1.5,\n            confidence: 85,\n            sport: 'MLB',\n            matchup: 'Yankees vs Red Sox'\n          },\n          {\n            id: 'mock-2',\n            player: 'Mike Trout',\n            stat: 'Hits',\n            line: 1.5,\n            confidence: 78,\n            sport: 'MLB',\n            matchup: 'Angels vs Astros'\n          },\n          {\n            id: 'mock-3',\n            player: 'Mookie Betts',\n            stat: 'RBIs',\n            line: 0.5,\n            confidence: 82,\n            sport: 'MLB',\n            matchup: 'Dodgers vs Giants'\n          }\n        ];\n\n        setProps(mockProps);\n        setRawResponse(mockProps);\n        console.log('[SimpleDirectAPITest] ‚úÖ Using mock data (backend offline)');\n      } else {\n        setError(errorMessage);\n        console.error('[SimpleDirectAPITest] ‚ùå Error:', errorMessage);\n      }\n    } finally {\n      setIsLoading(false);\n    }\r\n  };\r\n\r\n  useEffect(() => {\n    // Auto-run on mount\n    const timeoutId = setTimeout(() => {\n      fetchSimpleProps().catch(error => {\n        console.error('[SimpleDirectAPITest] Auto-run failed:', error);\n      });\n    }, 3000);\n\n    return () => clearTimeout(timeoutId);\n  }, []);\r\n\r\n  return (\r\n    <div className='simple-direct-api-test bg-purple-900/20 p-6 rounded-lg border border-purple-500'>\r\n      <h2 className='text-xl font-bold text-purple-400 mb-4'>\r\n        üéØ Simple Direct API Test (No Services/Managers)\r\n      </h2>\r\n\r\n      <button\r\n        onClick={fetchSimpleProps}\r\n        disabled={isLoading}\r\n        className='bg-purple-600 hover:bg-purple-700 disabled:bg-gray-600 text-white px-6 py-2 rounded font-medium mb-6'\r\n      >\r\n        {isLoading ? 'üîÑ Loading...' : '‚ñ∂Ô∏è Test Direct API Call'}\r\n      </button>\r\n\r\n      {error && (\r\n        <div className='bg-red-900/30 border border-red-500 p-4 rounded mb-4'>\r\n          <h3 className='text-red-400 font-medium mb-2'>‚ùå Error</h3>\r\n          <p className='text-red-300 text-sm'>{error}</p>\r\n        </div>\r\n      )}\r\n\r\n      {props.length > 0 && (\r\n        <div className='bg-green-900/20 border border-green-500 p-4 rounded mb-4'>\r\n          <h3 className='text-green-400 font-medium mb-3'>\r\n            ‚úÖ Success - {props.length} Props Loaded\r\n          </h3>\r\n          <div className='grid gap-2 max-h-64 overflow-y-auto'>\r\n            {props.map((prop, index) => (\r\n              <div key={index} className='bg-slate-800/50 p-3 rounded text-sm'>\r\n                <div className='text-white font-medium'>\r\n                  {prop.player} - {prop.stat}\r\n                </div>\r\n                <div className='text-gray-300'>\r\n                  Line: {prop.line} | Confidence: {prop.confidence}%\r\n                </div>\r\n                <div className='text-gray-400 text-xs'>{prop.matchup}</div>\r\n                <div className='text-gray-500 text-xs'>\r\n                  ID: {prop.id} | Sport: {prop.sport}\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {rawResponse && (\r\n        <details className='bg-slate-900/50 p-4 rounded'>\r\n          <summary className='text-gray-300 cursor-pointer hover:text-white'>\r\n            View Raw API Response (First 2 Items)\r\n          </summary>\r\n          <pre className='text-xs text-gray-400 mt-2 overflow-x-auto'>\r\n            {JSON.stringify(\r\n              Array.isArray(rawResponse) ? rawResponse.slice(0, 2) : rawResponse,\r\n              null,\r\n              2\r\n            )}\r\n          </pre>\r\n        </details>\r\n      )}\r\n\r\n      {isLoading && (\r\n        <div className='text-purple-400 text-center py-4 flex items-center justify-center gap-2'>\r\n          <div className='animate-spin w-4 h-4 border-2 border-purple-400 border-t-transparent rounded-full'></div>\r\n          Testing direct API call...\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SimpleDirectAPITest;\n"],"mappings":"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","ignoreList":[]}