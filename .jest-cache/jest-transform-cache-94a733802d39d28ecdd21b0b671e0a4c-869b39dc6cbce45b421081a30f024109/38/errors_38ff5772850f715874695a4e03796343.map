{"version":3,"names":["PropOllamaErrorType","exports","PropOllamaError","Error","constructor","message","type","retryable","fallbackAvailable","details","name","undefined","networkError","NETWORK_ERROR","timeoutError","TIMEOUT_ERROR","llmUnavailableError","LLM_UNAVAILABLE","dataFetchError","DATA_FETCH_ERROR","insufficientDataError","INSUFFICIENT_DATA","parsingError","PARSING_ERROR","unknownError","UNKNOWN_ERROR","fromError","error","code","originalError","isAxiosError","response","status"],"sources":["errors.ts"],"sourcesContent":["/**\r\n * PropOllama Error Types and Error Class\r\n */\r\n\r\nexport enum PropOllamaErrorType {\r\n  NETWORK_ERROR = 'NETWORK_ERROR',\r\n  TIMEOUT_ERROR = 'TIMEOUT_ERROR',\r\n  LLM_UNAVAILABLE = 'LLM_UNAVAILABLE',\r\n  DATA_FETCH_ERROR = 'DATA_FETCH_ERROR',\r\n  INSUFFICIENT_DATA = 'INSUFFICIENT_DATA',\r\n  PARSING_ERROR = 'PARSING_ERROR',\r\n  UNKNOWN_ERROR = 'UNKNOWN_ERROR',\r\n}\r\n\r\nexport class PropOllamaError extends Error {\r\n  type: PropOllamaErrorType;\r\n  retryable: boolean;\r\n  fallbackAvailable: boolean;\r\n  details?: Record<string, any> | undefined;\r\n\r\n  constructor(\r\n    message: string,\r\n    type: PropOllamaErrorType,\r\n    retryable: boolean = false,\r\n    fallbackAvailable: boolean = false,\r\n    details?: Record<string, any>\r\n  ) {\r\n    super(message);\r\n    this.name = 'PropOllamaError';\r\n    this.type = type;\r\n    this.retryable = retryable;\r\n    this.fallbackAvailable = fallbackAvailable;\r\n    this.details = details === undefined ? undefined : details;\r\n  }\r\n\r\n  static networkError(message: string, details?: Record<string, any>): PropOllamaError {\r\n    return new PropOllamaError(\r\n      message,\r\n      PropOllamaErrorType.NETWORK_ERROR,\r\n      true, // retryable\r\n      true, // fallback available\r\n      details\r\n    );\r\n  }\r\n\r\n  static timeoutError(message: string, details?: Record<string, any>): PropOllamaError {\r\n    return new PropOllamaError(\r\n      message,\r\n      PropOllamaErrorType.TIMEOUT_ERROR,\r\n      true, // retryable\r\n      true, // fallback available\r\n      details\r\n    );\r\n  }\r\n\r\n  static llmUnavailableError(message: string, details?: Record<string, any>): PropOllamaError {\r\n    return new PropOllamaError(\r\n      message,\r\n      PropOllamaErrorType.LLM_UNAVAILABLE,\r\n      true, // retryable\r\n      true, // fallback available\r\n      details\r\n    );\r\n  }\r\n\r\n  static dataFetchError(message: string, details?: Record<string, any>): PropOllamaError {\r\n    return new PropOllamaError(\r\n      message,\r\n      PropOllamaErrorType.DATA_FETCH_ERROR,\r\n      true, // retryable\r\n      true, // fallback available\r\n      details\r\n    );\r\n  }\r\n\r\n  static insufficientDataError(message: string, details?: Record<string, any>): PropOllamaError {\r\n    return new PropOllamaError(\r\n      message,\r\n      PropOllamaErrorType.INSUFFICIENT_DATA,\r\n      false, // not retryable\r\n      true, // fallback available\r\n      details\r\n    );\r\n  }\r\n\r\n  static parsingError(message: string, details?: Record<string, any>): PropOllamaError {\r\n    return new PropOllamaError(\r\n      message,\r\n      PropOllamaErrorType.PARSING_ERROR,\r\n      false, // not retryable\r\n      true, // fallback available\r\n      details\r\n    );\r\n  }\r\n\r\n  static unknownError(message: string, details?: Record<string, any>): PropOllamaError {\r\n    return new PropOllamaError(\r\n      message,\r\n      PropOllamaErrorType.UNKNOWN_ERROR,\r\n      false, // not retryable\r\n      true, // fallback available\r\n      details\r\n    );\r\n  }\r\n\r\n  static fromError(error: any): PropOllamaError {\r\n    // Handle timeout errors first\r\n    if (error && error.code === 'ECONNABORTED') {\r\n      return PropOllamaError.timeoutError('Request timed out', { originalError: error.message });\r\n    }\r\n    // Handle Axios errors\r\n    if (error && error.isAxiosError) {\r\n      if (!error.response) {\r\n        return PropOllamaError.networkError('Network error: Unable to connect to the server', {\r\n          originalError: error.message,\r\n        });\r\n      }\r\n\r\n      const status = error.response.status;\r\n      // Handle different HTTP status codes\r\n      if (status === 404) {\r\n        return PropOllamaError.networkError('Resource not found', {\r\n          status,\r\n          originalError: error.message,\r\n        });\r\n      } else if (status === 401 || status === 403) {\r\n        return PropOllamaError.networkError('Authentication error', {\r\n          status,\r\n          originalError: error.message,\r\n        });\r\n      } else if (status === 429) {\r\n        return PropOllamaError.networkError('Rate limit exceeded', {\r\n          status,\r\n          originalError: error.message,\r\n        });\r\n      } else if (status >= 500) {\r\n        return PropOllamaError.llmUnavailableError('LLM service is unavailable', {\r\n          status,\r\n          originalError: error.message,\r\n        });\r\n      }\r\n      return PropOllamaError.networkError(`HTTP error: ${error.response.status}`, {\r\n        status,\r\n        originalError: error.message,\r\n      });\r\n    }\r\n\r\n    // Handle PropOllamaError instances\r\n    if (error instanceof PropOllamaError) {\r\n      return error;\r\n    }\r\n\r\n    // Handle generic errors\r\n    return PropOllamaError.unknownError(error?.message || 'Unknown error occurred', {\r\n      originalError: error,\r\n    });\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]}