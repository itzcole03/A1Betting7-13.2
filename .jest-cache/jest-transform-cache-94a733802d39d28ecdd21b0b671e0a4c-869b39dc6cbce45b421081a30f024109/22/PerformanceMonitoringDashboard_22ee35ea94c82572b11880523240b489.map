{"version":3,"names":["_framerMotion","require","_lucideReact","_react","_interopRequireWildcard","_enhancedLogger","_robustApi","_healthAccessors","_metricsAccessors","_modelMetricsAccessors","_StatusIndicator","_interopRequireDefault","_jsxRuntime","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","getMockMetrics","api_performance","avg_time_ms","min_time_ms","max_time_ms","total_calls","cache_hits","errors","cache_performance","cache_type","hits","misses","hit_rate","total_requests","system_info","optimization_level","caching_strategy","monitoring","_getMockHealth","status","services","api","cache","database","performance","cache_hit_rate","uptime_seconds","PerformanceMonitoringDashboard","metrics","setMetrics","useState","health","setHealth","hasLoggedHealthKeys","useRef","useEffect","current","process","env","NODE_ENV","safePerformance","enhancedLogger","debug","keys","debugHealthStructure","error","undefined","loading","setLoading","setError","isUsingMockData","setIsUsingMockData","isCloudEnvironment","setIsCloudEnvironment","fetchData","hostname","window","location","isCloud","includes","healthData","perfDataRaw","Promise","all","fetchHealthData","fetchPerformanceStats","perfData","derivedHitRate","getCacheHitRate","computedHealthHitRate","console","perfRecord","metricsDiag","total","getTotalRequests","optLevel","getOptimizationLevel","getCacheHits","getCacheMisses","getCacheErrors","mappedLegacy","log","err","safePerf","interval","setInterval","clearInterval","getStatusColor","toLowerCase","getStatusIcon","jsx","CheckCircle","className","AlertTriangle","XCircle","Activity","formatUptime","seconds","hours","Math","floor","minutes","formatPercent","Number","isFinite","toFixed","displayedHealthHitRate","displayedMetricsHitRate","jsxs","children","Gauge","onClick","motion","div","initial","opacity","y","animate","message","size","Cloud","WifiOff","Wifi","button","whileHover","scale","whileTap","toUpperCase","Database","getCacheType","Cpu","entries","map","service","String","BarChart3","endpoint","stats","Clock","_default","exports"],"sources":["PerformanceMonitoringDashboard.tsx"],"sourcesContent":["import { motion } from 'framer-motion';\r\nimport {\r\n  Activity,\r\n  AlertTriangle,\r\n  BarChart3,\r\n  CheckCircle,\r\n  Clock,\r\n  Cloud,\r\n  Cpu,\r\n  Database,\r\n  Gauge,\r\n  Wifi,\r\n  WifiOff,\r\n  XCircle,\r\n} from 'lucide-react';\r\nimport React, { useEffect, useState, useRef } from 'react';\r\nimport { enhancedLogger } from '../../utils/enhancedLogger';\r\nimport { fetchHealthData, fetchPerformanceStats } from '../../utils/robustApi';\r\n\r\n// TEMPORARY: Runtime error diagnostics (remove after fix confirmed)  \r\n// import { guardObject, wrapKeys, wrapEntries } from '../../debug/objectGuardDiagnostics';\r\nimport { SystemHealth } from '../../utils/ensureHealthShape';\r\nimport { getCacheHitRate, getCacheType, debugHealthStructure } from '../../utils/healthAccessors';\r\nimport { getTotalRequests, getCacheHits, getCacheMisses, getCacheErrors } from '../../utils/metricsAccessors';\r\nimport { getOptimizationLevel } from '../../utils/modelMetricsAccessors';\r\nimport StatusIndicator from './StatusIndicator';\r\n\r\n// NOTE: Direct raw access to health.performance.cache_hit_rate must remain guarded via ensureHealthShape; see ensureHealthShape.ts\r\n\r\ninterface PerformanceMetrics {\r\n  api_performance: {\r\n    [endpoint: string]: {\r\n      avg_time_ms: number;\r\n      min_time_ms: number;\r\n      max_time_ms: number;\r\n      total_calls: number;\r\n      cache_hits: number;\r\n      errors: number;\r\n    };\r\n  };\r\n  cache_performance: {\r\n    cache_type: string;\r\n    hits: number;\r\n    misses: number;\r\n    errors: number;\r\n    hit_rate: number;\r\n    total_requests: number;\r\n  };\r\n  system_info: {\r\n    optimization_level: string;\r\n    caching_strategy: string;\r\n    monitoring: string;\r\n  };\r\n}\r\n\r\n// Mock data functions for fallback\r\nconst getMockMetrics = (): PerformanceMetrics => ({\r\n  api_performance: {\r\n    '/health': {\r\n      avg_time_ms: 45.2,\r\n      min_time_ms: 23.1,\r\n      max_time_ms: 156.8,\r\n      total_calls: 247,\r\n      cache_hits: 89,\r\n      errors: 2,\r\n    },\r\n    '/mlb/games': {\r\n      avg_time_ms: 127.3,\r\n      min_time_ms: 45.2,\r\n      max_time_ms: 342.1,\r\n      total_calls: 156,\r\n      cache_hits: 134,\r\n      errors: 1,\r\n    },\r\n    '/ml/predict': {\r\n      avg_time_ms: 234.7,\r\n      min_time_ms: 156.3,\r\n      max_time_ms: 567.2,\r\n      total_calls: 89,\r\n      cache_hits: 76,\r\n      errors: 0,\r\n    },\r\n  },\r\n  cache_performance: {\r\n    cache_type: 'memory',\r\n    hits: 312,\r\n    misses: 67,\r\n    errors: 3,\r\n    hit_rate: 82.3,\r\n    total_requests: 379,\r\n  },\r\n  system_info: {\r\n    optimization_level: 'Phase 4 Enhanced',\r\n    caching_strategy: 'Memory Fallback (Demo Mode)',\r\n    monitoring: 'Real-time Performance Tracking',\r\n  },\r\n});\r\n\r\nconst _getMockHealth = (): SystemHealth => ({\r\n  status: 'healthy',\r\n  services: {\r\n    api: 'operational',\r\n    cache: 'operational',\r\n    database: 'operational',\r\n  },\r\n  performance: {\r\n    cache_hit_rate: 82.3,\r\n    cache_type: 'memory',\r\n  },\r\n  uptime_seconds: 3657, // ~1 hour\r\n});\r\n\r\nconst PerformanceMonitoringDashboard: React.FC = () => {\r\n  const [metrics, setMetrics] = useState<PerformanceMetrics | null>(null);\r\n  const [health, setHealth] = useState<SystemHealth | null>(null);\r\n  \r\n  // Development diagnostics - log health.performance keys on first mount\r\n  const hasLoggedHealthKeys = useRef(false);\r\n  \r\n  useEffect(() => {\r\n    if (health?.performance && !hasLoggedHealthKeys.current && process.env.NODE_ENV === 'development') {\r\n      // PERMANENT FIX: Safe object access pattern prevents race conditions\r\n      const safePerformance = health.performance ?? {};\r\n      try {\r\n        enhancedLogger.debug('PerformanceMonitoringDashboard', 'healthKeys', 'Health performance keys', { keys: Object.keys(safePerformance) });\r\n        debugHealthStructure(health, 'PerformanceMonitoringDashboard');\r\n      } catch (error) {\r\n        enhancedLogger.error('PerformanceMonitoringDashboard', 'healthKeys', '[CRITICAL] Object.keys error despite safe pattern', undefined, error as unknown as Error);\r\n      }\r\n      hasLoggedHealthKeys.current = true;\r\n    }\r\n  }, [health]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [isUsingMockData, setIsUsingMockData] = useState(false);\r\n  const [isCloudEnvironment, setIsCloudEnvironment] = useState(false);\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n\r\n      const hostname = window.location.hostname;\r\n      const isCloud =\r\n        hostname.includes('.fly.dev') ||\r\n        hostname.includes('.vercel.app') ||\r\n        hostname.includes('.netlify.app') ||\r\n        hostname.includes('.herokuapp.com') ||\r\n        !hostname.includes('localhost');\r\n\r\n      setIsCloudEnvironment(isCloud);\r\n\r\n      const [healthData, perfDataRaw] = await Promise.all([fetchHealthData(), fetchPerformanceStats()]);\r\n\r\n      let perfData: PerformanceMetrics | null = null;\r\n      if (perfDataRaw && typeof perfDataRaw === 'object' && 'data' in (perfDataRaw as Record<string, unknown>)) {\r\n        perfData = ((perfDataRaw as unknown) as Record<string, unknown>)['data'] as unknown as PerformanceMetrics;\r\n      } else if (perfDataRaw && typeof perfDataRaw === 'object') {\r\n        perfData = (perfDataRaw as unknown) as PerformanceMetrics;\r\n      } else {\r\n        // fallback to mock metrics if server does not supply\r\n        perfData = getMockMetrics();\r\n      }\r\n\r\n      // Ensure cache_performance exists\r\n      if (!perfData.cache_performance) {\r\n        perfData.cache_performance = {\r\n          cache_type: 'Unknown',\r\n          hits: 0,\r\n          misses: 0,\r\n          errors: 0,\r\n          hit_rate: 0,\r\n          total_requests: 0,\r\n        } as PerformanceMetrics['cache_performance'];\r\n      }\r\n\r\n  // Prefer health-derived hit rate for the health display only; do not overwrite\r\n  // perfData.cache_performance.hit_rate so metrics view shows original metric values.\r\n  const derivedHitRate = getCacheHitRate(healthData) ?? perfData.cache_performance.hit_rate ?? 0;\r\n\r\n  setMetrics(perfData);\r\n  setHealth(healthData);\r\n\r\n  // Compute displayedHealthHitRate here so derivedHitRate is used in scope\r\n  // (avoids mutating perfData and keeps a stable string for render)\r\n  const computedHealthHitRate = derivedHitRate;\r\n  // eslint-disable-next-line no-console\r\n  console.debug('[PerfMon] computedHealthHitRate=', computedHealthHitRate);\r\n\r\n      if (process.env.NODE_ENV === 'development' && perfData) {\r\n        const perfRecord = perfData as unknown as Record<string, unknown>;\r\n        const metricsDiag = {\r\n          total: getTotalRequests(perfData),\r\n          optLevel: getOptimizationLevel(perfData),\r\n          hits: getCacheHits(perfData),\r\n          misses: getCacheMisses(perfData),\r\n          errors: getCacheErrors(perfData),\r\n          mappedLegacy: (perfRecord['originFlags'] as Record<string, unknown> | undefined)?.['mappedLegacy'] || false,\r\n        };\r\n        enhancedLogger.debug('PerformanceMonitoringDashboard', 'metricsDiag', 'MetricsDiag', metricsDiag);\r\n        // Also emit a console.log for legacy tests that spy on console output\r\n        // eslint-disable-next-line no-console\r\n        console.log('[MetricsDiag]', metricsDiag);\r\n      }\r\n\r\n      setIsUsingMockData(\r\n        isCloud ||\r\n          (!!healthData &&\r\n            typeof ((healthData as unknown) as Record<string, unknown>)['status'] === 'string' &&\r\n            ((healthData as unknown) as Record<string, unknown>)['status'] === 'healthy' &&\r\n            typeof (((healthData as unknown) as Record<string, unknown>)['services'] as Record<string, unknown> | undefined)?.['cache'] === 'string' &&\r\n            (((healthData as unknown) as Record<string, unknown>)['services'] as Record<string, unknown>)['cache'] === 'operational' &&\r\n            (typeof perfData.system_info?.caching_strategy === 'string' &&\r\n              (perfData.system_info.caching_strategy.includes('Demo Mode') || perfData.system_info.caching_strategy.includes('Cloud Demo'))))\r\n      );\r\n    } catch (err) {\r\n      // eslint-disable-next-line no-console\r\n      console.error('[PerfMon] fetchData caught error:', err);\r\n      enhancedLogger.error('PerformanceMonitoringDashboard', 'fetchData', 'Failed to fetch performance data', undefined, err as unknown as Error);\r\n\r\n      const safePerf: PerformanceMetrics = {\r\n        api_performance: {},\r\n        cache_performance: {\r\n          cache_type: 'Unknown',\r\n          hits: 0,\r\n          misses: 0,\r\n          errors: 0,\r\n          hit_rate: 0,\r\n          total_requests: 0,\r\n        },\r\n        system_info: {\r\n          optimization_level: 'Unknown',\r\n          caching_strategy: '',\r\n          monitoring: 'Unknown',\r\n        },\r\n      } as PerformanceMetrics;\r\n\r\n      setMetrics(safePerf);\r\n      setHealth(null);\r\n      setIsUsingMockData(false);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n\r\n    // Auto-refresh every 30 seconds\r\n    const interval = setInterval(fetchData, 30000);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  const getStatusColor = (status: string) => {\r\n    switch (status.toLowerCase()) {\r\n      case 'operational':\r\n      case 'healthy':\r\n        return 'text-green-400';\r\n      case 'degraded':\r\n        return 'text-yellow-400';\r\n      case 'unhealthy':\r\n      case 'error':\r\n        return 'text-red-400';\r\n      default:\r\n        return 'text-gray-400';\r\n    }\r\n  };\r\n\r\n  const getStatusIcon = (status: string) => {\r\n    switch (status.toLowerCase()) {\r\n      case 'operational':\r\n      case 'healthy':\r\n        return <CheckCircle className='w-4 h-4' />;\r\n      case 'degraded':\r\n        return <AlertTriangle className='w-4 h-4' />;\r\n      case 'unhealthy':\r\n      case 'error':\r\n        return <XCircle className='w-4 h-4' />;\r\n      default:\r\n        return <Activity className='w-4 h-4' />;\r\n    }\r\n  };\r\n\r\n  const formatUptime = (seconds: number) => {\r\n    const hours = Math.floor(seconds / 3600);\r\n    const minutes = Math.floor((seconds % 3600) / 60);\r\n    return `${hours}h ${minutes}m`;\r\n  };\r\n\r\n  const formatPercent = (n: number) => {\r\n  if (!Number.isFinite(n)) return '0.0%';\r\n  return `${Number(n).toFixed(1)}%`;\r\n  };\r\n\r\n  // Precompute displayed hit-rate strings to avoid inline evaluation surprises in tests\r\n  const displayedHealthHitRate = formatPercent(getCacheHitRate(health ?? undefined));\r\n  const displayedMetricsHitRate = formatPercent(getCacheHitRate(metrics ?? undefined));\r\n\r\n  // Debug output removed — triage complete.\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className='bg-gray-900 p-6 rounded-lg border border-gray-700'>\r\n        <div className='flex items-center space-x-2 mb-4'>\r\n          <Gauge className='w-6 h-6 text-blue-400' />\r\n          <h3 className='text-xl font-bold text-white'>Performance Monitoring</h3>\r\n        </div>\r\n        <div className='flex justify-center items-center h-64'>\r\n          <div className='animate-spin rounded-full h-12 w-12 border-b-2 border-blue-400'></div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className='bg-gray-900 p-6 rounded-lg border border-gray-700'>\r\n        <div className='flex items-center space-x-2 mb-4'>\r\n          <Gauge className='w-6 h-6 text-blue-400' />\r\n          <h3 className='text-xl font-bold text-white'>Performance Monitoring</h3>\r\n        </div>\r\n        <div className='bg-red-900/20 border border-red-700 rounded-lg p-4'>\r\n          <p className='text-red-400'>{error}</p>\r\n          <button\r\n            onClick={fetchData}\r\n            className='mt-2 px-4 py-2 bg-red-600 hover:bg-red-700 text-white rounded-lg text-sm transition-colors'\r\n          >\r\n            Retry\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <motion.div\r\n      initial={{ opacity: 0, y: 20 }}\r\n      animate={{ opacity: 1, y: 0 }}\r\n      className='bg-gray-900 p-6 rounded-lg border border-gray-700'\r\n    >\r\n  {/* Debug node removed */}\r\n      {/* Header */}\r\n      <div className='flex items-center justify-between mb-6'>\r\n        <div className='flex items-center space-x-3'>\r\n          <Gauge className='w-6 h-6 text-blue-400' />\r\n          <h3 className='text-xl font-bold text-white'>Performance Monitoring</h3>\r\n          {isCloudEnvironment ? (\r\n            <StatusIndicator status='warning' message='Cloud Demo Mode' size='sm' />\r\n          ) : isUsingMockData ? (\r\n            <StatusIndicator status='warning' message='Demo Mode - Mock Data' size='sm' />\r\n          ) : (\r\n            <StatusIndicator status='healthy' message='Live Data' size='sm' />\r\n          )}\r\n        </div>\r\n        <div className='flex items-center space-x-2'>\r\n          {isCloudEnvironment ? (\r\n            <Cloud className='w-4 h-4 text-blue-400' />\r\n          ) : isUsingMockData ? (\r\n            <WifiOff className='w-4 h-4 text-yellow-400' />\r\n          ) : (\r\n            <Wifi className='w-4 h-4 text-green-400' />\r\n          )}\r\n          <motion.button\r\n            whileHover={{ scale: 1.05 }}\r\n            whileTap={{ scale: 0.95 }}\r\n            onClick={fetchData}\r\n            className='px-3 py-1 bg-blue-600 hover:bg-blue-700 text-white rounded-lg text-sm transition-colors'\r\n          >\r\n            Refresh\r\n          </motion.button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* System Health */}\r\n      {health && (\r\n        <div className='grid grid-cols-1 md:grid-cols-3 gap-4 mb-6'>\r\n          <div className='bg-gray-800 p-4 rounded-lg border border-gray-600'>\r\n            <div className='flex items-center space-x-2 mb-2'>\r\n              <Activity className='w-5 h-5 text-green-400' />\r\n              <h4 className='font-semibold text-white'>System Status</h4>\r\n            </div>\r\n            <p className={`text-lg font-bold ${getStatusColor(health.status)}`}>\r\n              {health.status.toUpperCase()}\r\n            </p>\r\n            <p className='text-gray-400 text-sm'>Uptime: {formatUptime(health.uptime_seconds)}</p>\r\n          </div>\r\n\r\n          <div className='bg-gray-800 p-4 rounded-lg border border-gray-600'>\r\n            <div className='flex items-center space-x-2 mb-2'>\r\n              <Database className='w-5 h-5 text-blue-400' />\r\n              <h4 className='font-semibold text-white'>Cache Performance</h4>\r\n            </div>\r\n            <p className='text-gray-400 text-sm'>Cache Hit Rate</p>\r\n            <p className='text-lg font-bold text-blue-400'>{displayedHealthHitRate}</p>\r\n            <p className='text-gray-400 text-sm'>Type: {getCacheType(health)}</p>\r\n          </div>\r\n\r\n          <div className='bg-gray-800 p-4 rounded-lg border border-gray-600'>\r\n            <div className='flex items-center space-x-2 mb-2'>\r\n              <Cpu className='w-5 h-5 text-purple-400' />\r\n              <h4 className='font-semibold text-white'>Services</h4>\r\n            </div>\r\n            <div className='space-y-1'>\r\n              {/* PERMANENT FIX: Safe object access pattern */}\r\n              {Object.entries(health.services ?? {}).map(([service, status]) => (\r\n                <div key={service} className='flex items-center space-x-2'>\r\n                  <span className={getStatusColor(String(status))}>{getStatusIcon(String(status))}</span>\r\n                  <span className='text-gray-300 text-sm capitalize'>{service}</span>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Performance Metrics */}\r\n      {metrics && (\r\n        <div className='space-y-6'>\r\n          {/* API Performance */}\r\n          <div>\r\n            <h4 className='text-lg font-semibold text-white mb-3 flex items-center space-x-2'>\r\n              <BarChart3 className='w-5 h-5 text-green-400' />\r\n              <span>API Performance</span>\r\n            </h4>\r\n            <div className='bg-gray-800 rounded-lg border border-gray-600 overflow-hidden'>\r\n              <div className='overflow-x-auto'>\r\n                <table className='w-full text-sm'>\r\n                  <thead className='bg-gray-700'>\r\n                    <tr>\r\n                      <th className='px-4 py-3 text-left text-gray-300'>Endpoint</th>\r\n                      <th className='px-4 py-3 text-right text-gray-300'>Avg Time</th>\r\n                      <th className='px-4 py-3 text-right text-gray-300'>Calls</th>\r\n                      <th className='px-4 py-3 text-right text-gray-300'>Cache Hits</th>\r\n                      <th className='px-4 py-3 text-right text-gray-300'>Errors</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {/* PERMANENT FIX: Safe object access pattern */}\r\n                    {Object.entries(metrics.api_performance ?? {}).map(([endpoint, stats]) => (\r\n                      <tr key={endpoint} className='border-t border-gray-600'>\r\n                        <td className='px-4 py-3 text-gray-300 font-mono'>{endpoint}</td>\r\n                        <td className='px-4 py-3 text-right text-gray-300'>\r\n                          {typeof stats.avg_time_ms === 'number'\r\n                            ? stats.avg_time_ms.toFixed(1)\r\n                            : 'N/A'}\r\n                          ms\r\n                        </td>\r\n                        <td className='px-4 py-3 text-right text-gray-300'>{stats.total_calls}</td>\r\n                        <td className='px-4 py-3 text-right text-green-400'>{stats.cache_hits}</td>\r\n                        <td className='px-4 py-3 text-right text-red-400'>{stats.errors}</td>\r\n                      </tr>\r\n                    ))}\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Cache Statistics */}\r\n          <div>\r\n            <h4 className='text-lg font-semibold text-white mb-3 flex items-center space-x-2'>\r\n              <Database className='w-5 h-5 text-blue-400' />\r\n              <span>Cache Statistics</span>\r\n            </h4>\r\n            <div className='grid grid-cols-2 md:grid-cols-4 gap-4'>\r\n              <div className='bg-gray-800 p-4 rounded-lg border border-gray-600'>\r\n                <p className='text-gray-400 text-sm'>Hit Rate</p>\r\n                <p data-testid='metrics-hit-rate' className='text-xl font-bold text-green-400'>{displayedMetricsHitRate}</p>\r\n              </div>\r\n              <div className='bg-gray-800 p-4 rounded-lg border border-gray-600'>\r\n                <p className='text-gray-400 text-sm'>Total Requests</p>\r\n                <p data-testid='total-requests' className='text-xl font-bold text-blue-400'>\r\n                  {getTotalRequests(metrics)}\r\n                </p>\r\n              </div>\r\n              <div className='bg-gray-800 p-4 rounded-lg border border-gray-600'>\r\n                <p className='text-gray-400 text-sm'>Cache Hits</p>\r\n                <p data-testid='cache-hits' className='text-xl font-bold text-green-400'>{getCacheHits(metrics)}</p>\r\n              </div>\r\n              <div className='bg-gray-800 p-4 rounded-lg border border-gray-600'>\r\n                <p className='text-gray-400 text-sm'>Cache Misses</p>\r\n                <p data-testid='cache-misses' className='text-xl font-bold text-yellow-400'>\r\n                  {getCacheMisses(metrics)}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* System Info */}\r\n          <div>\r\n            <h4 className='text-lg font-semibold text-white mb-3 flex items-center space-x-2'>\r\n              <Clock className='w-5 h-5 text-purple-400' />\r\n              <span>System Information</span>\r\n            </h4>\r\n            <div className='bg-gray-800 p-4 rounded-lg border border-gray-600'>\r\n              <div className='grid grid-cols-1 md:grid-cols-3 gap-4'>\r\n                <div>\r\n                  <p className='text-gray-400 text-sm'>Optimization Level</p>\r\n                  <p className='text-white font-semibold'>\r\n                    {getOptimizationLevel(metrics)}\r\n                  </p>\r\n                </div>\r\n                <div>\r\n                  <p className='text-gray-400 text-sm'>Caching Strategy</p>\r\n                  <p className='text-white font-semibold'>{metrics.system_info.caching_strategy}</p>\r\n                </div>\r\n                <div>\r\n                  <p className='text-gray-400 text-sm'>Monitoring</p>\r\n                  <p className='text-white font-semibold'>{metrics.system_info.monitoring}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Phase 4 Badge and Demo Notice */}\r\n      <div className='mt-6 flex justify-between items-center'>\r\n        {(isUsingMockData || isCloudEnvironment) && (\r\n          <div className='bg-blue-600/20 border border-blue-500 rounded-lg px-3 py-2'>\r\n            <div className='flex items-center space-x-2'>\r\n              {isCloudEnvironment ? (\r\n                <Cloud className='w-4 h-4 text-blue-400' />\r\n              ) : (\r\n                <WifiOff className='w-4 h-4 text-yellow-400' />\r\n              )}\r\n              <span className='text-blue-400 text-sm'>\r\n                {isCloudEnvironment\r\n                  ? 'Cloud Demo Mode: Running in production with realistic mock data'\r\n                  : 'Demo Mode: Backend API not available, showing realistic mock data'}\r\n              </span>\r\n            </div>\r\n          </div>\r\n        )}\r\n        <div className='bg-blue-600/20 border border-blue-500 rounded-lg px-3 py-1'>\r\n          <span className='text-blue-400 text-sm font-semibold'>Phase 4 Enhanced</span>\r\n        </div>\r\n      </div>\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default PerformanceMonitoringDashboard;\r\n"],"mappings":"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","ignoreList":[]}