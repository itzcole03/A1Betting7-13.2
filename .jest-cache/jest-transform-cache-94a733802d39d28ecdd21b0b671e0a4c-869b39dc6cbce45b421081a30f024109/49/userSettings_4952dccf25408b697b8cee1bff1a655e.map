{"version":3,"names":["DEFAULT_SETTINGS","exports","profile","name","email","timezone","currency","notifications","push","sound","display","darkMode","compactView","fontSize","betting","defaultStake","maxStake","privacy","sharePredictions","showStats","deepMerge","target","source","result","Array","isArray","key","undefined","getUserSettings","saved","localStorage","getItem","parsed","JSON","parse","error","console","warn","applySettings","settings","document","documentElement","classList","add","body","style","backgroundColor","remove","saveUserSettings","setItem","stringify","window","dispatchEvent","CustomEvent","detail","getUserDisplayName","getUserEmail","isDarkMode","initializeSettings"],"sources":["userSettings.ts"],"sourcesContent":["/**\r\n * User Settings Utilities;\r\n * Provides easy access to user settings throughout the application;\r\n */\r\n\r\nexport interface UserSettings {\r\n  profile: {\r\n    name: string;\r\n    email: string;\r\n    timezone: string;\r\n    currency: string;\r\n  };\r\n  notifications: {\r\n    email: boolean;\r\n    push: boolean;\r\n    sound: boolean;\r\n  };\r\n  display: {\r\n    darkMode: boolean;\r\n    compactView: boolean;\r\n    fontSize: number;\r\n  };\r\n  betting: {\r\n    defaultStake: number;\r\n    maxStake: number;\r\n    currency: string;\r\n  };\r\n  privacy: {\r\n    sharePredictions: boolean;\r\n    showStats: boolean;\r\n  };\r\n}\r\n\r\nexport const DEFAULT_SETTINGS: UserSettings = {\r\n  profile: {\r\n    name: 'User',\r\n    email: 'user@a1betting.com',\r\n    timezone: 'UTC-5',\r\n    currency: 'USD',\r\n  },\r\n  notifications: {\r\n    email: true,\r\n    push: true,\r\n    sound: false,\r\n  },\r\n  display: {\r\n    darkMode: true,\r\n    compactView: false,\r\n    fontSize: 16,\r\n  },\r\n  betting: {\r\n    defaultStake: 10,\r\n    maxStake: 100,\r\n    currency: 'USD',\r\n  },\r\n  privacy: {\r\n    sharePredictions: false,\r\n    showStats: true,\r\n  },\r\n};\r\n\r\n/**\r\n * Get user settings from localStorage;\r\n */\r\nfunction deepMerge<T>(target: T, source: Partial<T>): T {\r\n  if (typeof target !== 'object' || typeof source !== 'object' || !target || !source) return target;\r\n  const result: any = Array.isArray(target) ? [...target] : { ...target };\r\n  for (const key in source) {\r\n    if (source[key] && typeof source[key] === 'object' && !Array.isArray(source[key])) {\r\n      result[key] = deepMerge((target as any)[key], source[key]);\r\n    } else if (source[key] !== undefined) {\r\n      result[key] = source[key];\r\n    }\r\n  }\r\n  return result;\r\n}\r\n\r\nexport const getUserSettings = (): UserSettings => {\r\n  try {\r\n    const saved = localStorage.getItem('a1betting-user-settings');\r\n    const parsed = saved ? JSON.parse(saved) : null;\r\n    if (parsed) {\r\n      return deepMerge(DEFAULT_SETTINGS, parsed);\r\n    }\r\n  } catch (error) {\r\n    console.warn('getUserSettings error:', error);\r\n  }\r\n  return DEFAULT_SETTINGS;\r\n};\r\n\r\n/**\r\n * Apply settings to the DOM;\r\n */\r\nexport const applySettings = (settings: UserSettings): void => {\r\n  // Dark mode;\r\n  if (settings.display.darkMode) {\r\n    document.documentElement.classList.add('dark');\r\n    document.body.style.backgroundColor = '#0f172a';\r\n  } else {\r\n    document.documentElement.classList.remove('dark');\r\n    document.body.style.backgroundColor = '#ffffff';\r\n  }\r\n\r\n  // Font size;\r\n  document.documentElement.style.fontSize = `${settings.display.fontSize}px`;\r\n};\r\n\r\n/**\r\n * Save user settings to localStorage;\r\n */\r\nexport const saveUserSettings = (settings: UserSettings): void => {\r\n  try {\r\n    localStorage.setItem('a1betting-user-settings', JSON.stringify(settings));\r\n    localStorage.setItem('a1betting-user-name', settings.profile.name);\r\n    localStorage.setItem('a1betting-user-email', settings.profile.email);\r\n\r\n    // Apply settings immediately;\r\n    applySettings(settings);\r\n\r\n    // Notify other components;\r\n    window.dispatchEvent(new CustomEvent('settingsChanged', { detail: settings }));\r\n  } catch (error) {\r\n    console.warn('saveUserSettings error:', error);\r\n  }\r\n};\r\n\r\n/**\r\n * Get user display name;\r\n */\r\nexport const getUserDisplayName = (): string => {\r\n  try {\r\n    const saved = localStorage.getItem('a1betting-user-name');\r\n    if (saved) return saved;\r\n    const settings = getUserSettings();\r\n    return settings.profile.name;\r\n  } catch (error) {\r\n    console.warn('getUserDisplayName error:', error);\r\n    return 'User';\r\n  }\r\n};\r\n\r\n/**\r\n * Get user email;\r\n */\r\nexport const getUserEmail = (): string => {\r\n  try {\r\n    const saved = localStorage.getItem('a1betting-user-email');\r\n    if (saved) return saved;\r\n    const settings = getUserSettings();\r\n    return settings.profile.email;\r\n  } catch (error) {\r\n    console.warn('getUserEmail error:', error);\r\n    return 'user@a1betting.com';\r\n  }\r\n};\r\n\r\n/**\r\n * Check if dark mode is enabled;\r\n */\r\nexport const isDarkMode = (): boolean => {\r\n  try {\r\n    const settings = getUserSettings();\r\n    return settings.display.darkMode;\r\n  } catch (error) {\r\n    console.warn('isDarkMode error:', error);\r\n    return true; // Default to dark mode;\r\n  }\r\n};\r\n\r\n/**\r\n * Initialize settings on app startup;\r\n */\r\nexport const initializeSettings = (): void => {\r\n  const settings = getUserSettings();\r\n  applySettings(settings);\r\n};\r\n"],"mappings":"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","ignoreList":[]}