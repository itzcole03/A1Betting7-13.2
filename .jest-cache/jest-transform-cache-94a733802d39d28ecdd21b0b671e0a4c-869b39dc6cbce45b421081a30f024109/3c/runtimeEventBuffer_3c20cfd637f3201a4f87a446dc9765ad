33f6cdc6a9e8b32795aaaf400471121f
"use strict";
/**
 * Runtime Event Buffer - Stores diagnostic events for error correlation
 *
 * Simple ring buffer for tracking runtime events that can be retrieved
 * during error handling to provide context about what led to failures.
 *
 * @module debug/runtimeEventBuffer
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.recordEvent = recordEvent;
exports.getRecent = getRecent;
exports.getAllRecent = getAllRecent;
exports.clearEventBuffer = clearEventBuffer;
// Ring buffer for events
const EVENT_BUFFER = [];
const MAX_EVENTS = 50;
/**
 * Record a diagnostic event
 */
function recordEvent(tag, payload) {
    EVENT_BUFFER.push({
        tag,
        payload,
        timestamp: Date.now(),
    });
    // Keep only the most recent events
    if (EVENT_BUFFER.length > MAX_EVENTS) {
        EVENT_BUFFER.shift();
    }
}
/**
 * Get recent events by tag
 */
function getRecent(tag, n = 5) {
    return EVENT_BUFFER
        .filter(event => event.tag === tag)
        .slice(-n);
}
/**
 * Get all recent events
 */
function getAllRecent(n = 10) {
    return EVENT_BUFFER.slice(-n);
}
/**
 * Clear the event buffer (for testing)
 */
function clearEventBuffer() {
    EVENT_BUFFER.length = 0;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiQzpcXFVzZXJzXFxiY21hZFxcRG93bmxvYWRzXFxBMUJldHRpbmc3LTEzLjJcXGZyb250ZW5kXFxzcmNcXGRlYnVnXFxydW50aW1lRXZlbnRCdWZmZXIudHMiLCJtYXBwaW5ncyI6IjtBQUFBOzs7Ozs7O0dBT0c7O0FBZUgsa0NBV0M7QUFLRCw4QkFJQztBQUtELG9DQUVDO0FBS0QsNENBRUM7QUF6Q0QseUJBQXlCO0FBQ3pCLE1BQU0sWUFBWSxHQUFzQixFQUFFLENBQUM7QUFDM0MsTUFBTSxVQUFVLEdBQUcsRUFBRSxDQUFDO0FBRXRCOztHQUVHO0FBQ0gsU0FBZ0IsV0FBVyxDQUFDLEdBQVcsRUFBRSxPQUFnQztJQUN2RSxZQUFZLENBQUMsSUFBSSxDQUFDO1FBQ2hCLEdBQUc7UUFDSCxPQUFPO1FBQ1AsU0FBUyxFQUFFLElBQUksQ0FBQyxHQUFHLEVBQUU7S0FDdEIsQ0FBQyxDQUFDO0lBRUgsbUNBQW1DO0lBQ25DLElBQUksWUFBWSxDQUFDLE1BQU0sR0FBRyxVQUFVLEVBQUUsQ0FBQztRQUNyQyxZQUFZLENBQUMsS0FBSyxFQUFFLENBQUM7SUFDdkIsQ0FBQztBQUNILENBQUM7QUFFRDs7R0FFRztBQUNILFNBQWdCLFNBQVMsQ0FBQyxHQUFXLEVBQUUsQ0FBQyxHQUFHLENBQUM7SUFDMUMsT0FBTyxZQUFZO1NBQ2hCLE1BQU0sQ0FBQyxLQUFLLENBQUMsRUFBRSxDQUFDLEtBQUssQ0FBQyxHQUFHLEtBQUssR0FBRyxDQUFDO1NBQ2xDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ2YsQ0FBQztBQUVEOztHQUVHO0FBQ0gsU0FBZ0IsWUFBWSxDQUFDLENBQUMsR0FBRyxFQUFFO0lBQ2pDLE9BQU8sWUFBWSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ2hDLENBQUM7QUFFRDs7R0FFRztBQUNILFNBQWdCLGdCQUFnQjtJQUM5QixZQUFZLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQztBQUMxQixDQUFDIiwibmFtZXMiOltdLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcYmNtYWRcXERvd25sb2Fkc1xcQTFCZXR0aW5nNy0xMy4yXFxmcm9udGVuZFxcc3JjXFxkZWJ1Z1xccnVudGltZUV2ZW50QnVmZmVyLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBSdW50aW1lIEV2ZW50IEJ1ZmZlciAtIFN0b3JlcyBkaWFnbm9zdGljIGV2ZW50cyBmb3IgZXJyb3IgY29ycmVsYXRpb25cclxuICogXHJcbiAqIFNpbXBsZSByaW5nIGJ1ZmZlciBmb3IgdHJhY2tpbmcgcnVudGltZSBldmVudHMgdGhhdCBjYW4gYmUgcmV0cmlldmVkXHJcbiAqIGR1cmluZyBlcnJvciBoYW5kbGluZyB0byBwcm92aWRlIGNvbnRleHQgYWJvdXQgd2hhdCBsZWQgdG8gZmFpbHVyZXMuXHJcbiAqIFxyXG4gKiBAbW9kdWxlIGRlYnVnL3J1bnRpbWVFdmVudEJ1ZmZlclxyXG4gKi9cclxuXHJcbmludGVyZmFjZSBEaWFnbm9zdGljRXZlbnQge1xyXG4gIHRhZzogc3RyaW5nO1xyXG4gIHBheWxvYWQ6IFJlY29yZDxzdHJpbmcsIHVua25vd24+O1xyXG4gIHRpbWVzdGFtcDogbnVtYmVyO1xyXG59XHJcblxyXG4vLyBSaW5nIGJ1ZmZlciBmb3IgZXZlbnRzXHJcbmNvbnN0IEVWRU5UX0JVRkZFUjogRGlhZ25vc3RpY0V2ZW50W10gPSBbXTtcclxuY29uc3QgTUFYX0VWRU5UUyA9IDUwO1xyXG5cclxuLyoqXHJcbiAqIFJlY29yZCBhIGRpYWdub3N0aWMgZXZlbnRcclxuICovXHJcbmV4cG9ydCBmdW5jdGlvbiByZWNvcmRFdmVudCh0YWc6IHN0cmluZywgcGF5bG9hZDogUmVjb3JkPHN0cmluZywgdW5rbm93bj4pOiB2b2lkIHtcclxuICBFVkVOVF9CVUZGRVIucHVzaCh7XHJcbiAgICB0YWcsXHJcbiAgICBwYXlsb2FkLFxyXG4gICAgdGltZXN0YW1wOiBEYXRlLm5vdygpLFxyXG4gIH0pO1xyXG4gIFxyXG4gIC8vIEtlZXAgb25seSB0aGUgbW9zdCByZWNlbnQgZXZlbnRzXHJcbiAgaWYgKEVWRU5UX0JVRkZFUi5sZW5ndGggPiBNQVhfRVZFTlRTKSB7XHJcbiAgICBFVkVOVF9CVUZGRVIuc2hpZnQoKTtcclxuICB9XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBHZXQgcmVjZW50IGV2ZW50cyBieSB0YWdcclxuICovXHJcbmV4cG9ydCBmdW5jdGlvbiBnZXRSZWNlbnQodGFnOiBzdHJpbmcsIG4gPSA1KTogRGlhZ25vc3RpY0V2ZW50W10ge1xyXG4gIHJldHVybiBFVkVOVF9CVUZGRVJcclxuICAgIC5maWx0ZXIoZXZlbnQgPT4gZXZlbnQudGFnID09PSB0YWcpXHJcbiAgICAuc2xpY2UoLW4pO1xyXG59XHJcblxyXG4vKipcclxuICogR2V0IGFsbCByZWNlbnQgZXZlbnRzXHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gZ2V0QWxsUmVjZW50KG4gPSAxMCk6IERpYWdub3N0aWNFdmVudFtdIHtcclxuICByZXR1cm4gRVZFTlRfQlVGRkVSLnNsaWNlKC1uKTtcclxufVxyXG5cclxuLyoqXHJcbiAqIENsZWFyIHRoZSBldmVudCBidWZmZXIgKGZvciB0ZXN0aW5nKVxyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIGNsZWFyRXZlbnRCdWZmZXIoKTogdm9pZCB7XHJcbiAgRVZFTlRfQlVGRkVSLmxlbmd0aCA9IDA7XHJcbn0iXSwidmVyc2lvbiI6M30=