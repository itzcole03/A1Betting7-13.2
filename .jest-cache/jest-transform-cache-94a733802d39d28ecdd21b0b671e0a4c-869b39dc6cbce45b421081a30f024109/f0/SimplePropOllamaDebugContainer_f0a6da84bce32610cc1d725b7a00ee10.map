{"version":3,"names":["_react","_interopRequireDefault","require","_usePropOllamaState","_useSimplePropOllamaData","_jsxRuntime","SimplePropOllamaDebugContainer","state","actions","usePropOllamaState","fetchData","useSimplePropOllamaData","console","log","selectedSport","filters","isLoading","propsCount","projections","length","error","jsxs","className","children","jsx","value","onChange","e","updateFilters","target","onClick","catch","disabled","loadingMessage","slice","map","prop","index","player","stat","line","confidence","sport","matchup","id","JSON","stringify","_default","exports","default"],"sources":["SimplePropOllamaDebugContainer.tsx"],"sourcesContent":["/**\r\n * Simple PropOllama Debug Container\r\n * Uses the simple data fetching to isolate the data loading issue\r\n */\r\n\r\nimport React from 'react';\r\nimport { usePropOllamaState } from '../hooks/usePropOllamaState';\r\nimport { useSimplePropOllamaData } from '../hooks/useSimplePropOllamaData';\r\n\r\nconst SimplePropOllamaDebugContainer: React.FC = () => {\r\n  const [state, actions] = usePropOllamaState();\r\n\r\n  // Use the simple data fetching hook\r\n  const { fetchData } = useSimplePropOllamaData({ state, actions });\r\n\r\n  console.log('[SimplePropOllamaDebugContainer] Rendering with state:', {\r\n    selectedSport: state.filters.selectedSport,\r\n    isLoading: state.isLoading,\r\n    propsCount: state.projections.length,\r\n    error: state.error,\r\n  });\r\n\r\n  return (\r\n    <div className='simple-prop-ollama-debug bg-indigo-900/20 p-6 rounded-lg border border-indigo-500'>\r\n      <h2 className='text-xl font-bold text-indigo-400 mb-4'>\r\n        üß© Simple PropOllama Debug Container\r\n      </h2>\r\n\r\n      {/* Sport Selector */}\r\n      <div className='mb-4'>\r\n        <label className='block text-white font-medium mb-2'>Select Sport:</label>\r\n        <select\r\n          value={state.filters.selectedSport}\r\n          onChange={e => actions.updateFilters({ selectedSport: e.target.value })}\r\n          className='bg-slate-800 text-white border border-slate-600 rounded px-3 py-2'\r\n        >\r\n          <option value='All'>All Sports</option>\r\n          <option value='MLB'>MLB</option>\r\n          <option value='NBA'>NBA</option>\r\n          <option value='NFL'>NFL</option>\r\n          <option value='NHL'>NHL</option>\r\n        </select>\r\n      </div>\r\n\r\n      {/* Manual Fetch Button */}\n      <button\n        onClick={() => {\n          fetchData().catch(error => {\n            console.error('[SimplePropOllamaDebugContainer] Manual fetch failed:', error);\n          });\n        }}\n        disabled={state.isLoading}\n        className='bg-indigo-600 hover:bg-indigo-700 disabled:bg-gray-600 text-white px-4 py-2 rounded mb-4'\n      >\n        {state.isLoading ? 'üîÑ Loading...' : 'üîÑ Manual Fetch Data'}\n      </button>\r\n\r\n      {/* Loading State */}\r\n      {state.isLoading && (\r\n        <div className='bg-yellow-900/20 border border-yellow-500 p-3 rounded mb-4'>\r\n          <div className='flex items-center gap-2'>\r\n            <div className='animate-spin w-4 h-4 border-2 border-yellow-400 border-t-transparent rounded-full'></div>\r\n            <span className='text-yellow-400'>Loading: {state.loadingMessage}</span>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Error State */}\r\n      {state.error && (\r\n        <div className='bg-red-900/20 border border-red-500 p-3 rounded mb-4'>\r\n          <h3 className='text-red-400 font-medium'>‚ùå Error</h3>\r\n          <p className='text-red-300 text-sm'>{state.error}</p>\r\n        </div>\r\n      )}\r\n\r\n      {/* Success State */}\r\n      {state.projections.length > 0 && (\r\n        <div className='bg-green-900/20 border border-green-500 p-4 rounded mb-4'>\r\n          <h3 className='text-green-400 font-medium mb-3'>\r\n            ‚úÖ Success - {state.projections.length} Props Loaded\r\n          </h3>\r\n\r\n          <div className='grid gap-3 max-h-96 overflow-y-auto'>\r\n            {state.projections.slice(0, 10).map((prop, index) => (\r\n              <div key={prop.id} className='bg-slate-800/50 p-3 rounded'>\r\n                <div className='text-white font-medium'>\r\n                  {prop.player} - {prop.stat}\r\n                </div>\r\n                <div className='text-gray-300 text-sm'>\r\n                  Line: {prop.line} | Confidence: {prop.confidence}% | Sport: {prop.sport}\r\n                </div>\r\n                <div className='text-gray-400 text-xs'>{prop.matchup}</div>\r\n                <div className='text-gray-500 text-xs'>ID: {prop.id}</div>\r\n              </div>\r\n            ))}\r\n            {state.projections.length > 10 && (\r\n              <div className='text-gray-400 text-center text-sm'>\r\n                ... and {state.projections.length - 10} more props\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* No Data State */}\r\n      {!state.isLoading && !state.error && state.projections.length === 0 && (\r\n        <div className='bg-gray-900/20 border border-gray-500 p-4 rounded text-center'>\r\n          <p className='text-gray-400'>No props loaded yet. Select a sport or click fetch.</p>\r\n        </div>\r\n      )}\r\n\r\n      {/* Debug Info */}\r\n      <details className='mt-4'>\r\n        <summary className='text-gray-300 cursor-pointer hover:text-white'>\r\n          Debug State Info\r\n        </summary>\r\n        <pre className='text-xs text-gray-400 bg-slate-900/50 p-3 rounded mt-2 overflow-auto'>\r\n          {JSON.stringify(\r\n            {\r\n              selectedSport: state.filters.selectedSport,\r\n              isLoading: state.isLoading,\r\n              error: state.error,\r\n              propsCount: state.projections.length,\r\n              loadingMessage: state.loadingMessage,\r\n            },\r\n            null,\r\n            2\r\n          )}\r\n        </pre>\r\n      </details>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SimplePropOllamaDebugContainer;\n"],"mappings":"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","ignoreList":[]}