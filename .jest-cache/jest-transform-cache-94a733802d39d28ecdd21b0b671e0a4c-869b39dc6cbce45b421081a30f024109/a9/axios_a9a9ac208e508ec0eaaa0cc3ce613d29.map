{"file":"C:\\Users\\bcmad\\Downloads\\A1Betting7-13.2\\frontend\\src\\__mocks__\\axios.ts","mappings":"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","names":[],"sources":["C:\\Users\\bcmad\\Downloads\\A1Betting7-13.2\\frontend\\src\\__mocks__\\axios.ts"],"sourcesContent":["// Enhanced Axios Mock for Testing\r\nconst mockAxios = {\r\n  get: jest.fn(() => Promise.resolve({ data: {}, status: 200, statusText: 'OK' })),\r\n  post: jest.fn(() => Promise.resolve({ data: {}, status: 201, statusText: 'Created' })),\r\n  put: jest.fn(() => Promise.resolve({ data: {}, status: 200, statusText: 'OK' })),\r\n  patch: jest.fn(() => Promise.resolve({ data: {}, status: 200, statusText: 'OK' })),\r\n  delete: jest.fn(() => Promise.resolve({ data: {}, status: 204, statusText: 'No Content' })),\r\n  head: jest.fn(() => Promise.resolve({ status: 200, statusText: 'OK' })),\r\n  options: jest.fn(() => Promise.resolve({ status: 200, statusText: 'OK' })),\r\n  request: jest.fn(() => Promise.resolve({ data: {}, status: 200, statusText: 'OK' })),\r\n  \r\n  // Instance methods\r\n  create: jest.fn(() => mockAxios),\r\n  \r\n  // Interceptors\r\n  interceptors: {\r\n    request: {\r\n      use: jest.fn(),\r\n      eject: jest.fn(),\r\n    },\r\n    response: {\r\n      use: jest.fn(),\r\n      eject: jest.fn(),\r\n    },\r\n  },\r\n  \r\n  // Default config\r\n  defaults: {\r\n    headers: {\r\n      common: {},\r\n      delete: {},\r\n      get: {},\r\n      head: {},\r\n      post: {},\r\n      put: {},\r\n      patch: {},\r\n    },\r\n    timeout: 0,\r\n    baseURL: '',\r\n    transformRequest: [],\r\n    transformResponse: [],\r\n    paramsSerializer: null,\r\n    withCredentials: false,\r\n  },\r\n  \r\n  // Cancel token\r\n  CancelToken: {\r\n    source: jest.fn(() => ({\r\n      token: {},\r\n      cancel: jest.fn(),\r\n    })),\r\n  },\r\n  \r\n  Cancel: jest.fn(),\r\n  isCancel: jest.fn(() => false),\r\n  \r\n  // Error simulation helpers\r\n  mockResolvedValue: (data: any) => {\r\n    mockAxios.get.mockResolvedValue({ data, status: 200, statusText: 'OK' });\r\n    mockAxios.post.mockResolvedValue({ data, status: 201, statusText: 'Created' });\r\n    mockAxios.put.mockResolvedValue({ data, status: 200, statusText: 'OK' });\r\n    mockAxios.patch.mockResolvedValue({ data, status: 200, statusText: 'OK' });\r\n    mockAxios.delete.mockResolvedValue({ data, status: 204, statusText: 'No Content' });\r\n  },\r\n  \r\n  mockRejectedValue: (error: any) => {\r\n    mockAxios.get.mockRejectedValue(error);\r\n    mockAxios.post.mockRejectedValue(error);\r\n    mockAxios.put.mockRejectedValue(error);\r\n    mockAxios.patch.mockRejectedValue(error);\r\n    mockAxios.delete.mockRejectedValue(error);\r\n  },\r\n  \r\n  mockReset: () => {\r\n    Object.keys(mockAxios).forEach(key => {\r\n      if (typeof mockAxios[key as keyof typeof mockAxios] === 'function') {\r\n        (mockAxios[key as keyof typeof mockAxios] as jest.Mock).mockReset();\r\n      }\r\n    });\r\n  },\r\n  \r\n  // Response simulation\r\n  mockResponse: (data: any, status = 200, statusText = 'OK') => ({\r\n    data,\r\n    status,\r\n    statusText,\r\n    headers: {},\r\n    config: {},\r\n  }),\r\n  \r\n  // Error simulation\r\n  mockError: (message: string, code?: string, status?: number) => ({\r\n    message,\r\n    code,\r\n    response: status ? {\r\n      status,\r\n      statusText: status >= 400 ? 'Error' : 'OK',\r\n      data: { error: message },\r\n    } : undefined,\r\n    request: {},\r\n    config: {},\r\n    isAxiosError: true,\r\n  }),\r\n};\r\n\r\n// Setup default mock behaviors\r\nmockAxios.get.mockImplementation((url: string) => {\r\n  // Simulate different responses based on URL patterns\r\n  if (url.includes('/api/health')) {\r\n    return Promise.resolve(mockAxios.mockResponse({ status: 'healthy' }));\r\n  }\r\n  if (url.includes('/api/predictions')) {\r\n    return Promise.resolve(mockAxios.mockResponse({ predictions: [] }));\r\n  }\r\n  if (url.includes('/api/players')) {\r\n    return Promise.resolve(mockAxios.mockResponse({ players: [] }));\r\n  }\r\n  if (url.includes('/api/odds')) {\r\n    return Promise.resolve(mockAxios.mockResponse({ odds: [] }));\r\n  }\r\n  \r\n  return Promise.resolve(mockAxios.mockResponse({}));\r\n});\r\n\r\nmockAxios.post.mockImplementation((url: string, data: any) => {\r\n  if (url.includes('/api/auth/login')) {\r\n    return Promise.resolve(mockAxios.mockResponse({ \r\n      token: 'mock-jwt-token',\r\n      user: { id: 1, username: 'testuser' }\r\n    }));\r\n  }\r\n  if (url.includes('/api/predictions')) {\r\n    return Promise.resolve(mockAxios.mockResponse({ \r\n      id: 1,\r\n      ...data,\r\n      created_at: new Date().toISOString()\r\n    }, 201));\r\n  }\r\n  \r\n  return Promise.resolve(mockAxios.mockResponse({ id: 1, ...data }, 201));\r\n});\r\n\r\nexport default mockAxios;\r\nexport const axios = mockAxios;\r\n"],"version":3}