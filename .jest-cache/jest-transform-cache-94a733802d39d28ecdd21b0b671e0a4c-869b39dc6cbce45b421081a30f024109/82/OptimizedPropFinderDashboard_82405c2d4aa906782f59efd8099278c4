0ef3256fea299505473bb4f75fb480be
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = _interopRequireWildcard(require("react"));
var React = _react;
var _framerMotion = require("framer-motion");
var _lucideReact = require("lucide-react");
var _useOptimizedPerformance = require("../../hooks/useOptimizedPerformance");
var _usePropFinderData = require("../../hooks/usePropFinderData");
var _Phase4Banner = _interopRequireDefault(require("../phase4/Phase4Banner"));
var _PerformanceMonitoringDashboard = _interopRequireDefault(require("../phase4/PerformanceMonitoringDashboard"));
var _jsxRuntime = require("react/jsx-runtime");
function _interopRequireWildcard(e, t) { if ("function" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function (e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || "object" != typeof e && "function" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (const t in e) "default" !== t && {}.hasOwnProperty.call(e, t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, t)) && (i.get || i.set) ? o(f, t, i) : f[t] = e[t]); return f; })(e, t); }
// Memoized prop card component for performance
const PropCard = /*#__PURE__*/(0, _react.memo)(({
  opportunity,
  style,
  onSelect
}) => {
  const handleClick = (0, _react.useCallback)(() => {
    onSelect(opportunity);
  }, [opportunity, onSelect]);
  const confidenceColor = (0, _react.useMemo)(() => {
    if (opportunity.confidence >= 0.8) return 'text-green-400';
    if (opportunity.confidence >= 0.6) return 'text-yellow-400';
    return 'text-red-400';
  }, [opportunity.confidence]);
  const evColor = (0, _react.useMemo)(() => {
    if (opportunity.expectedValue > 0.1) return 'text-green-400';
    if (opportunity.expectedValue > 0) return 'text-yellow-400';
    return 'text-red-400';
  }, [opportunity.expectedValue]);
  return /*#__PURE__*/(0, _jsxRuntime.jsxs)(_framerMotion.motion.div, {
    style: style,
    initial: {
      opacity: 0,
      y: 20
    },
    animate: {
      opacity: 1,
      y: 0
    },
    whileHover: {
      scale: 1.02
    },
    onClick: handleClick,
    className: "bg-gray-800 rounded-lg border border-gray-700 p-4 cursor-pointer hover:bg-gray-750 transition-all duration-200",
    children: [/*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
      className: "flex justify-between items-start mb-3",
      children: [/*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
        children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("h3", {
          className: "text-lg font-bold text-white",
          children: opportunity.player
        }), /*#__PURE__*/(0, _jsxRuntime.jsxs)("p", {
          className: "text-gray-400 text-sm",
          children: [opportunity.team, " vs ", opportunity.opponent]
        })]
      }), /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
        className: "text-right",
        children: /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
          className: "flex items-center space-x-2",
          children: [opportunity.trend === 'up' && /*#__PURE__*/(0, _jsxRuntime.jsx)(_lucideReact.TrendingUp, {
            className: "w-4 h-4 text-green-400"
          }), /*#__PURE__*/(0, _jsxRuntime.jsxs)("span", {
            className: "text-white font-semibold",
            children: [opportunity.odds > 0 ? '+' : '', opportunity.odds]
          })]
        })
      })]
    }), /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
      className: "grid grid-cols-2 gap-4 mb-3",
      children: [/*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
        children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("p", {
          className: "text-gray-400 text-xs uppercase tracking-wide",
          children: "Prop"
        }), /*#__PURE__*/(0, _jsxRuntime.jsxs)("p", {
          className: "text-white font-semibold",
          children: [opportunity.propType, " ", opportunity.line]
        })]
      }), /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
        children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("p", {
          className: "text-gray-400 text-xs uppercase tracking-wide",
          children: "Volume"
        }), /*#__PURE__*/(0, _jsxRuntime.jsx)("p", {
          className: "text-white font-semibold",
          children: opportunity.volume.toLocaleString()
        })]
      })]
    }), /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
      className: "flex justify-between items-center",
      children: [/*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
        className: "flex items-center space-x-4",
        children: [/*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
          children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("p", {
            className: "text-gray-400 text-xs",
            children: "Confidence"
          }), /*#__PURE__*/(0, _jsxRuntime.jsxs)("p", {
            className: `font-bold ${confidenceColor}`,
            children: [(opportunity.confidence * 100).toFixed(1), "%"]
          })]
        }), /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
          children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("p", {
            className: "text-gray-400 text-xs",
            children: "Expected Value"
          }), /*#__PURE__*/(0, _jsxRuntime.jsxs)("p", {
            className: `font-bold ${evColor}`,
            children: [(opportunity.expectedValue * 100).toFixed(1), "%"]
          })]
        })]
      }), /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
        className: "bg-blue-600/20 px-2 py-1 rounded text-blue-400 text-xs",
        children: opportunity.sport.toUpperCase()
      })]
    })]
  });
});
PropCard.displayName = 'PropCard';

// Loading skeleton component
const LoadingSkeleton = /*#__PURE__*/(0, _react.memo)(() => /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
  className: "space-y-4",
  children: Array(6).fill(0).map((_, i) => /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
    className: "bg-gray-800 rounded-lg border border-gray-700 p-4 animate-pulse",
    children: [/*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
      className: "flex justify-between items-start mb-3",
      children: [/*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
        children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
          className: "h-5 bg-gray-700 rounded w-32 mb-2"
        }), /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
          className: "h-4 bg-gray-700 rounded w-24"
        })]
      }), /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
        className: "h-6 bg-gray-700 rounded w-16"
      })]
    }), /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
      className: "grid grid-cols-2 gap-4 mb-3",
      children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
        className: "h-4 bg-gray-700 rounded"
      }), /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
        className: "h-4 bg-gray-700 rounded"
      })]
    }), /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
      className: "flex justify-between",
      children: [/*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
        className: "flex space-x-4",
        children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
          className: "h-4 bg-gray-700 rounded w-16"
        }), /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
          className: "h-4 bg-gray-700 rounded w-16"
        })]
      }), /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
        className: "h-6 bg-gray-700 rounded w-12"
      })]
    })]
  }, i))
}));
LoadingSkeleton.displayName = 'LoadingSkeleton';
const OptimizedPropFinderDashboard = () => {
  const [searchTerm, setSearchTerm] = (0, _react.useState)('');
  const [selectedSport, setSelectedSport] = (0, _react.useState)('all');
  const [sortBy, setSortBy] = (0, _react.useState)('confidence');
  const [showPerformancePanel, setShowPerformancePanel] = (0, _react.useState)(false);
  const [selectedOpportunity, setSelectedOpportunity] = (0, _react.useState)(null);

  // Real PropFinder data integration
  const {
    opportunities: propFinderOpportunities,
    loading: propFinderLoading,
    error: propFinderError,
    refreshData: refreshPropFinderData
  } = (0, _usePropFinderData.usePropFinderData)();

  // Optimized data fetching with React 19 features
  const {
    data: opportunities,
    loading,
    error,
    refetch,
    metrics,
    cached,
    debouncedRefetch,
    isPending
  } = (0, _useOptimizedPerformance.useOptimizedPerformance)(async () => {
    // Mock data for demo - replace with real API calls
    await new Promise(resolve => setTimeout(resolve, 500)); // Simulate network delay

    return Array.from({
      length: 50
    }, (_, i) => ({
      id: `prop-${i}`,
      player: `Player ${i + 1}`,
      team: ['LAD', 'NYY', 'BOS', 'SF', 'HOU'][i % 5],
      opponent: ['SD', 'BAL', 'TB', 'OAK', 'SEA'][i % 5],
      sport: ['mlb', 'nba', 'nfl'][i % 3],
      propType: ['hits', 'runs', 'rbis', 'strikeouts'][i % 4],
      line: 0.5 + i % 10 * 0.5,
      odds: -110 + i % 20 - 10,
      confidence: 0.6 + i % 40 * 0.01,
      expectedValue: -0.05 + i % 30 * 0.01,
      trend: ['up', 'down', 'stable'][i % 3],
      volume: 1000 + i * 100,
      timestamp: new Date().toISOString()
    }));
  }, {
    enableCaching: true,
    enableDeferredUpdates: true,
    debounceMs: 300
  });

  // Filter and sort opportunities
  const filteredOpportunities = (0, _react.useMemo)(() => {
    if (!opportunities) return [];
    let filtered = opportunities.filter(opp => {
      const matchesSearch = opp.player.toLowerCase().includes(searchTerm.toLowerCase()) || opp.team.toLowerCase().includes(searchTerm.toLowerCase()) || opp.propType.toLowerCase().includes(searchTerm.toLowerCase());
      const matchesSport = selectedSport === 'all' || opp.sport === selectedSport;
      return matchesSearch && matchesSport;
    });

    // Sort opportunities
    filtered.sort((a, b) => {
      switch (sortBy) {
        case 'confidence':
          return b.confidence - a.confidence;
        case 'expectedValue':
          return b.expectedValue - a.expectedValue;
        case 'volume':
          return b.volume - a.volume;
        default:
          return 0;
      }
    });
    return filtered;
  }, [opportunities, searchTerm, selectedSport, sortBy]);

  // Optimized list rendering with virtualization
  const {
    visibleItems,
    containerProps,
    innerProps,
    setContainerHeight
  } = (0, _useOptimizedPerformance.useOptimizedList)(filteredOpportunities, {
    itemHeight: 180,
    overscan: 3,
    enableVirtualization: filteredOpportunities.length > 20
  });

  // Set container height on mount
  (0, _react.useEffect)(() => {
    setContainerHeight(600); // Set to desired height
  }, [setContainerHeight]);
  const handleOpportunitySelect = (0, _react.useCallback)(opp => {
    setSelectedOpportunity(opp);
  }, []);
  const handleRefresh = (0, _react.useCallback)(() => {
    refetch(false); // Force fresh data
  }, [refetch]);
  return /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
    className: "min-h-screen bg-gradient-to-br from-gray-900 via-gray-800 to-gray-900 text-white",
    children: [/*#__PURE__*/(0, _jsxRuntime.jsx)(_Phase4Banner.default, {}), /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
      className: "container mx-auto px-4 py-8",
      children: [/*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
        className: "flex justify-between items-center mb-8",
        children: [/*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
          children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("h1", {
            "data-testid": "propfinder-killer-heading",
            className: "text-4xl font-bold bg-gradient-to-r from-blue-400 to-purple-400 bg-clip-text text-transparent",
            children: "PropFinder Killer Dashboard"
          }), /*#__PURE__*/(0, _jsxRuntime.jsx)("p", {
            className: "text-gray-400 mt-2",
            children: "Real PropFinder Data Integration with Alert Engine"
          })]
        }), /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
          className: "flex items-center space-x-4",
          children: [/*#__PURE__*/(0, _jsxRuntime.jsxs)(_framerMotion.motion.button, {
            whileHover: {
              scale: 1.05
            },
            whileTap: {
              scale: 0.95
            },
            onClick: () => setShowPerformancePanel(!showPerformancePanel),
            className: "flex items-center space-x-2 px-4 py-2 bg-blue-600 hover:bg-blue-700 rounded-lg transition-colors",
            children: [/*#__PURE__*/(0, _jsxRuntime.jsx)(_lucideReact.Gauge, {
              className: "w-4 h-4"
            }), /*#__PURE__*/(0, _jsxRuntime.jsx)("span", {
              children: "Performance"
            })]
          }), /*#__PURE__*/(0, _jsxRuntime.jsxs)(_framerMotion.motion.button, {
            whileHover: {
              scale: 1.05
            },
            whileTap: {
              scale: 0.95
            },
            onClick: handleRefresh,
            disabled: loading || isPending,
            className: "flex items-center space-x-2 px-4 py-2 bg-green-600 hover:bg-green-700 rounded-lg transition-colors disabled:opacity-50",
            children: [/*#__PURE__*/(0, _jsxRuntime.jsx)(_lucideReact.RefreshCw, {
              className: `w-4 h-4 ${loading || isPending ? 'animate-spin' : ''}`
            }), /*#__PURE__*/(0, _jsxRuntime.jsx)("span", {
              children: "Refresh"
            })]
          })]
        })]
      }), metrics && /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
        className: "bg-gray-800 rounded-lg border border-gray-700 p-4 mb-6",
        children: /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
          className: "grid grid-cols-2 md:grid-cols-4 gap-4",
          children: [/*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
            className: "text-center",
            children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("p", {
              className: "text-gray-400 text-sm",
              children: "Data Fetch Time"
            }), /*#__PURE__*/(0, _jsxRuntime.jsxs)("p", {
              className: "text-white font-bold",
              children: [metrics.dataFetchTime.toFixed(1), "ms"]
            })]
          }), /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
            className: "text-center",
            children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("p", {
              className: "text-gray-400 text-sm",
              children: "Cache Hit Rate"
            }), /*#__PURE__*/(0, _jsxRuntime.jsxs)("p", {
              className: "text-green-400 font-bold",
              children: [metrics.cacheHitRate.toFixed(1), "%"]
            })]
          }), /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
            className: "text-center",
            children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("p", {
              className: "text-gray-400 text-sm",
              children: "Total Requests"
            }), /*#__PURE__*/(0, _jsxRuntime.jsx)("p", {
              className: "text-blue-400 font-bold",
              children: metrics.totalRequests
            })]
          }), /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
            className: "text-center",
            children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("p", {
              className: "text-gray-400 text-sm",
              children: "Status"
            }), /*#__PURE__*/(0, _jsxRuntime.jsx)("p", {
              className: `font-bold ${cached ? 'text-yellow-400' : 'text-green-400'}`,
              children: cached ? 'Cached' : 'Live'
            })]
          })]
        })
      }), /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
        className: "grid grid-cols-1 md:grid-cols-4 gap-4 mb-6",
        children: [/*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
          className: "relative",
          children: [/*#__PURE__*/(0, _jsxRuntime.jsx)(_lucideReact.Search, {
            className: "absolute left-3 top-3 w-5 h-5 text-gray-400"
          }), /*#__PURE__*/(0, _jsxRuntime.jsx)("input", {
            type: "text",
            placeholder: "Search players, teams, props...",
            value: searchTerm,
            onChange: e => setSearchTerm(e.target.value),
            className: "w-full pl-10 pr-4 py-2 bg-gray-800 border border-gray-600 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 text-white"
          })]
        }), /*#__PURE__*/(0, _jsxRuntime.jsxs)("select", {
          value: selectedSport,
          onChange: e => setSelectedSport(e.target.value),
          className: "px-4 py-2 bg-gray-800 border border-gray-600 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 text-white",
          children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("option", {
            value: "all",
            children: "All Sports"
          }), /*#__PURE__*/(0, _jsxRuntime.jsx)("option", {
            value: "mlb",
            children: "MLB"
          }), /*#__PURE__*/(0, _jsxRuntime.jsx)("option", {
            value: "nba",
            children: "NBA"
          }), /*#__PURE__*/(0, _jsxRuntime.jsx)("option", {
            value: "nfl",
            children: "NFL"
          })]
        }), /*#__PURE__*/(0, _jsxRuntime.jsxs)("select", {
          value: sortBy,
          onChange: e => setSortBy(e.target.value),
          className: "px-4 py-2 bg-gray-800 border border-gray-600 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 text-white",
          children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("option", {
            value: "confidence",
            children: "Sort by Confidence"
          }), /*#__PURE__*/(0, _jsxRuntime.jsx)("option", {
            value: "expectedValue",
            children: "Sort by Expected Value"
          }), /*#__PURE__*/(0, _jsxRuntime.jsx)("option", {
            value: "volume",
            children: "Sort by Volume"
          })]
        }), /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
          className: "flex items-center space-x-2 text-gray-400",
          children: [/*#__PURE__*/(0, _jsxRuntime.jsx)(_lucideReact.Activity, {
            className: "w-4 h-4"
          }), /*#__PURE__*/(0, _jsxRuntime.jsxs)("span", {
            children: [filteredOpportunities.length, " opportunities"]
          })]
        })]
      }), showPerformancePanel && /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
        className: "mb-6",
        children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_react.Suspense, {
          fallback: /*#__PURE__*/(0, _jsxRuntime.jsx)(LoadingSkeleton, {}),
          children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_PerformanceMonitoringDashboard.default, {})
        })
      }), /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
        className: "grid grid-cols-1 lg:grid-cols-3 gap-6",
        children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
          className: "lg:col-span-2",
          children: /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
            className: "bg-gray-800 rounded-lg border border-gray-700 p-4",
            children: [/*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
              className: "flex items-center space-x-2 mb-4",
              children: [/*#__PURE__*/(0, _jsxRuntime.jsx)(_lucideReact.Zap, {
                className: "w-5 h-5 text-yellow-400"
              }), /*#__PURE__*/(0, _jsxRuntime.jsx)("h2", {
                className: "text-xl font-bold text-white",
                children: "Live Opportunities"
              }), (loading || isPending) && /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
                className: "animate-spin rounded-full h-4 w-4 border-b-2 border-blue-400"
              })]
            }), error ? /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
              className: "text-center py-8",
              children: [/*#__PURE__*/(0, _jsxRuntime.jsxs)("p", {
                className: "text-red-400 mb-4",
                children: ["Error loading opportunities: ", error]
              }), /*#__PURE__*/(0, _jsxRuntime.jsx)("button", {
                onClick: handleRefresh,
                className: "px-4 py-2 bg-red-600 hover:bg-red-700 text-white rounded-lg transition-colors",
                children: "Retry"
              })]
            }) : /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
              ...containerProps,
              children: /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
                ...innerProps,
                children: visibleItems.map(({
                  item: opportunity,
                  style
                }) => /*#__PURE__*/(0, _jsxRuntime.jsx)(PropCard, {
                  opportunity: opportunity,
                  style: style,
                  onSelect: handleOpportunitySelect
                }, opportunity.id))
              })
            })]
          })
        }), /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
          className: "space-y-6",
          children: [selectedOpportunity && /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
            className: "bg-gray-800 rounded-lg border border-gray-700 p-4",
            children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("h3", {
              className: "text-lg font-bold text-white mb-4",
              children: "Opportunity Details"
            }), /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
              className: "space-y-3",
              children: [/*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
                children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("p", {
                  className: "text-gray-400 text-sm",
                  children: "Player"
                }), /*#__PURE__*/(0, _jsxRuntime.jsx)("p", {
                  className: "text-white font-semibold",
                  children: selectedOpportunity.player
                })]
              }), /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
                children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("p", {
                  className: "text-gray-400 text-sm",
                  children: "Matchup"
                }), /*#__PURE__*/(0, _jsxRuntime.jsxs)("p", {
                  className: "text-white",
                  children: [selectedOpportunity.team, " vs ", selectedOpportunity.opponent]
                })]
              }), /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
                children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("p", {
                  className: "text-gray-400 text-sm",
                  children: "Prop"
                }), /*#__PURE__*/(0, _jsxRuntime.jsxs)("p", {
                  className: "text-white",
                  children: [selectedOpportunity.propType, " ", selectedOpportunity.line]
                })]
              }), /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
                children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("p", {
                  className: "text-gray-400 text-sm",
                  children: "Confidence"
                }), /*#__PURE__*/(0, _jsxRuntime.jsxs)("p", {
                  className: "text-green-400 font-bold",
                  children: [(selectedOpportunity.confidence * 100).toFixed(1), "%"]
                })]
              })]
            })]
          }), /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
            className: "bg-gray-800 rounded-lg border border-gray-700 p-4",
            children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("h3", {
              className: "text-lg font-bold text-white mb-4",
              children: "Quick Stats"
            }), /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
              className: "space-y-3",
              children: [/*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
                className: "flex justify-between",
                children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("span", {
                  className: "text-gray-400",
                  children: "High Confidence"
                }), /*#__PURE__*/(0, _jsxRuntime.jsx)("span", {
                  className: "text-green-400 font-bold",
                  children: filteredOpportunities.filter(o => o.confidence > 0.8).length
                })]
              }), /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
                className: "flex justify-between",
                children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("span", {
                  className: "text-gray-400",
                  children: "Positive EV"
                }), /*#__PURE__*/(0, _jsxRuntime.jsx)("span", {
                  className: "text-blue-400 font-bold",
                  children: filteredOpportunities.filter(o => o.expectedValue > 0).length
                })]
              }), /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
                className: "flex justify-between",
                children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("span", {
                  className: "text-gray-400",
                  children: "Live Updates"
                }), /*#__PURE__*/(0, _jsxRuntime.jsx)("span", {
                  className: "text-yellow-400 font-bold",
                  children: "Real-time"
                })]
              })]
            })]
          })]
        })]
      })]
    })]
  });
};
var _default = exports.default = OptimizedPropFinderDashboard;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,