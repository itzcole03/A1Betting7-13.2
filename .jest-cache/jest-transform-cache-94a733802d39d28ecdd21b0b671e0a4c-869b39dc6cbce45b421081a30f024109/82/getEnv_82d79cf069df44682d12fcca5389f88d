1bf2194a707f933e8d8b0d36a320041d
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getEnvVar = getEnvVar;
exports.isDev = isDev;
exports.isProd = isProd;
// Safe environment accessor for both Vite (import.meta.env) and Node/Jest (process.env)
function getEnvVar(name, fallback) {
  // Try Vite style import.meta.env if available via globalThis shim
  try {
    // Some test environments or bundlers expose a shimmed object on globalThis
    const maybeImportMeta = globalThis.importMeta ?? globalThis.__import_meta__;
    if (maybeImportMeta && maybeImportMeta.env) {
      return maybeImportMeta.env[name] ?? fallback;
    }
  } catch (e) {
    // ignore - not available
  }

  // Fallback to process.env for Jest/Node
  if (typeof process !== 'undefined' && process.env) {
    return process.env[name] ?? fallback;
  }
  return fallback;
}
function isDev() {
  const v = getEnvVar('VITE_DEV') ?? getEnvVar('DEV');
  if (typeof v === 'string') return v === 'true' || v === '1';
  if (typeof process !== 'undefined') return process.env.NODE_ENV === 'development';
  return false;
}
function isProd() {
  const v = getEnvVar('VITE_PROD') ?? getEnvVar('PROD');
  if (typeof v === 'string') return v === 'true' || v === '1';
  if (typeof process !== 'undefined') return process.env.NODE_ENV === 'production';
  return false;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJnZXRFbnZWYXIiLCJuYW1lIiwiZmFsbGJhY2siLCJtYXliZUltcG9ydE1ldGEiLCJnbG9iYWxUaGlzIiwiaW1wb3J0TWV0YSIsIl9faW1wb3J0X21ldGFfXyIsImVudiIsImUiLCJwcm9jZXNzIiwiaXNEZXYiLCJ2IiwiTk9ERV9FTlYiLCJpc1Byb2QiXSwic291cmNlcyI6WyJnZXRFbnYudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gU2FmZSBlbnZpcm9ubWVudCBhY2Nlc3NvciBmb3IgYm90aCBWaXRlIChpbXBvcnQubWV0YS5lbnYpIGFuZCBOb2RlL0plc3QgKHByb2Nlc3MuZW52KVxyXG5leHBvcnQgZnVuY3Rpb24gZ2V0RW52VmFyKG5hbWU6IHN0cmluZywgZmFsbGJhY2s/OiBzdHJpbmcpOiBzdHJpbmcgfCB1bmRlZmluZWQge1xyXG4gIC8vIFRyeSBWaXRlIHN0eWxlIGltcG9ydC5tZXRhLmVudiBpZiBhdmFpbGFibGUgdmlhIGdsb2JhbFRoaXMgc2hpbVxyXG4gIHRyeSB7XHJcbiAgICAvLyBTb21lIHRlc3QgZW52aXJvbm1lbnRzIG9yIGJ1bmRsZXJzIGV4cG9zZSBhIHNoaW1tZWQgb2JqZWN0IG9uIGdsb2JhbFRoaXNcclxuICAgIGNvbnN0IG1heWJlSW1wb3J0TWV0YSA9IChnbG9iYWxUaGlzIGFzIGFueSkuaW1wb3J0TWV0YSA/PyAoZ2xvYmFsVGhpcyBhcyBhbnkpLl9faW1wb3J0X21ldGFfXztcclxuICAgIGlmIChtYXliZUltcG9ydE1ldGEgJiYgbWF5YmVJbXBvcnRNZXRhLmVudikge1xyXG4gICAgICByZXR1cm4gbWF5YmVJbXBvcnRNZXRhLmVudltuYW1lXSA/PyBmYWxsYmFjaztcclxuICAgIH1cclxuICB9IGNhdGNoIChlKSB7XHJcbiAgICAvLyBpZ25vcmUgLSBub3QgYXZhaWxhYmxlXHJcbiAgfVxyXG5cclxuICAvLyBGYWxsYmFjayB0byBwcm9jZXNzLmVudiBmb3IgSmVzdC9Ob2RlXHJcbiAgaWYgKHR5cGVvZiBwcm9jZXNzICE9PSAndW5kZWZpbmVkJyAmJiBwcm9jZXNzLmVudikge1xyXG4gICAgcmV0dXJuIHByb2Nlc3MuZW52W25hbWVdID8/IGZhbGxiYWNrO1xyXG4gIH1cclxuXHJcbiAgcmV0dXJuIGZhbGxiYWNrO1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gaXNEZXYoKTogYm9vbGVhbiB7XHJcbiAgY29uc3QgdiA9IGdldEVudlZhcignVklURV9ERVYnKSA/PyBnZXRFbnZWYXIoJ0RFVicpO1xyXG4gIGlmICh0eXBlb2YgdiA9PT0gJ3N0cmluZycpIHJldHVybiB2ID09PSAndHJ1ZScgfHwgdiA9PT0gJzEnO1xyXG4gIGlmICh0eXBlb2YgcHJvY2VzcyAhPT0gJ3VuZGVmaW5lZCcpIHJldHVybiBwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ2RldmVsb3BtZW50JztcclxuICByZXR1cm4gZmFsc2U7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBpc1Byb2QoKTogYm9vbGVhbiB7XHJcbiAgY29uc3QgdiA9IGdldEVudlZhcignVklURV9QUk9EJykgPz8gZ2V0RW52VmFyKCdQUk9EJyk7XHJcbiAgaWYgKHR5cGVvZiB2ID09PSAnc3RyaW5nJykgcmV0dXJuIHYgPT09ICd0cnVlJyB8fCB2ID09PSAnMSc7XHJcbiAgaWYgKHR5cGVvZiBwcm9jZXNzICE9PSAndW5kZWZpbmVkJykgcmV0dXJuIHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbic7XHJcbiAgcmV0dXJuIGZhbHNlO1xyXG59XHJcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTtBQUNPLFNBQVNBLFNBQVNBLENBQUNDLElBQVksRUFBRUMsUUFBaUIsRUFBc0I7RUFDN0U7RUFDQSxJQUFJO0lBQ0Y7SUFDQSxNQUFNQyxlQUFlLEdBQUlDLFVBQVUsQ0FBU0MsVUFBVSxJQUFLRCxVQUFVLENBQVNFLGVBQWU7SUFDN0YsSUFBSUgsZUFBZSxJQUFJQSxlQUFlLENBQUNJLEdBQUcsRUFBRTtNQUMxQyxPQUFPSixlQUFlLENBQUNJLEdBQUcsQ0FBQ04sSUFBSSxDQUFDLElBQUlDLFFBQVE7SUFDOUM7RUFDRixDQUFDLENBQUMsT0FBT00sQ0FBQyxFQUFFO0lBQ1Y7RUFBQTs7RUFHRjtFQUNBLElBQUksT0FBT0MsT0FBTyxLQUFLLFdBQVcsSUFBSUEsT0FBTyxDQUFDRixHQUFHLEVBQUU7SUFDakQsT0FBT0UsT0FBTyxDQUFDRixHQUFHLENBQUNOLElBQUksQ0FBQyxJQUFJQyxRQUFRO0VBQ3RDO0VBRUEsT0FBT0EsUUFBUTtBQUNqQjtBQUVPLFNBQVNRLEtBQUtBLENBQUEsRUFBWTtFQUMvQixNQUFNQyxDQUFDLEdBQUdYLFNBQVMsQ0FBQyxVQUFVLENBQUMsSUFBSUEsU0FBUyxDQUFDLEtBQUssQ0FBQztFQUNuRCxJQUFJLE9BQU9XLENBQUMsS0FBSyxRQUFRLEVBQUUsT0FBT0EsQ0FBQyxLQUFLLE1BQU0sSUFBSUEsQ0FBQyxLQUFLLEdBQUc7RUFDM0QsSUFBSSxPQUFPRixPQUFPLEtBQUssV0FBVyxFQUFFLE9BQU9BLE9BQU8sQ0FBQ0YsR0FBRyxDQUFDSyxRQUFRLEtBQUssYUFBYTtFQUNqRixPQUFPLEtBQUs7QUFDZDtBQUVPLFNBQVNDLE1BQU1BLENBQUEsRUFBWTtFQUNoQyxNQUFNRixDQUFDLEdBQUdYLFNBQVMsQ0FBQyxXQUFXLENBQUMsSUFBSUEsU0FBUyxDQUFDLE1BQU0sQ0FBQztFQUNyRCxJQUFJLE9BQU9XLENBQUMsS0FBSyxRQUFRLEVBQUUsT0FBT0EsQ0FBQyxLQUFLLE1BQU0sSUFBSUEsQ0FBQyxLQUFLLEdBQUc7RUFDM0QsSUFBSSxPQUFPRixPQUFPLEtBQUssV0FBVyxFQUFFLE9BQU9BLE9BQU8sQ0FBQ0YsR0FBRyxDQUFDSyxRQUFRLEtBQUssWUFBWTtFQUNoRixPQUFPLEtBQUs7QUFDZCIsImlnbm9yZUxpc3QiOltdfQ==