{"version":3,"names":["_react","_interopRequireDefault","require","_react2","_WebSocketContext","_jsxRuntime","TestComponent","ctx","_useWebSocket","jsx","children","describe","originalWebSocket","originalEnv","beforeAll","global","WebSocket","process","env","afterAll","setupMockWebSocket","wsInstance","wsMock","jest","fn","mockImplementation","readyState","send","close","_onclose","_onerror","_onmessage","onopen","setTimeout","call","Event","onclose","onerror","onmessage","CONNECTING","OPEN","CLOSING","CLOSED","it","VITE_WEBSOCKET_ENABLED","window","__VITE_ENV__","render","_WebSocketProvider","expect","screen","getByTestId","toHaveTextContent","onopenHandler","triggerOpen","StatusComponent","status","act","Promise","resolve","textContent","toBe","code","reason","wasClean","dispatchEvent","ErrorComponent","lastError","not"],"sources":["WebSocketContext.test.tsx"],"sourcesContent":["import React from 'react';\r\nimport { act, render, screen } from '@testing-library/react';\r\nimport { _WebSocketProvider, _useWebSocket } from '../WebSocketContext';\r\n\r\nfunction TestComponent() {\r\n  const ctx = _useWebSocket();\r\n  return <div data-testid='ws-context'>{ctx ? 'context-present' : 'context-absent'}</div>;\r\n}\r\n\r\ndescribe('WebSocketContext', () => {\r\n  let originalWebSocket: any;\r\n  let originalEnv: any;\r\n  beforeAll(() => {\r\n    originalWebSocket = global.WebSocket;\r\n    originalEnv = process.env;\r\n  });\r\n  afterAll(() => {\r\n    global.WebSocket = originalWebSocket;\r\n    process.env = originalEnv;\r\n  });\r\n\r\n  function setupMockWebSocket() {\r\n    let wsInstance: any = null;\r\n    const wsMock = jest.fn().mockImplementation(() => {\r\n      wsInstance = {\r\n        readyState: 1,\r\n        send: jest.fn(),\r\n        close: jest.fn(),\r\n        // Initialize hooks as functions to prevent undefined errors\r\n        _onclose: () => {},\r\n        _onerror: () => {},\r\n        _onmessage: () => {},\r\n        set onopen(fn: ((this: WebSocket, ev: Event) => any) | null) {\r\n          setTimeout(() => fn && fn.call(wsInstance, new Event('open')), 10);\r\n        },\r\n        set onclose(fn: ((this: WebSocket, ev: CloseEvent) => any) | null) {\r\n          (this as any)._onclose = fn;\r\n        },\r\n        set onerror(fn: ((this: WebSocket, ev: Event) => any) | null) {\r\n          (this as any)._onerror = fn;\r\n        },\r\n        set onmessage(fn: ((this: WebSocket, ev: MessageEvent) => any) | null) {\r\n          (this as any)._onmessage = fn;\r\n        },\r\n      };\r\n      return wsInstance;\r\n    });\r\n    // Add static properties to mock\r\n    (wsMock as any).CONNECTING = 0;\r\n    (wsMock as any).OPEN = 1;\r\n    (wsMock as any).CLOSING = 2;\r\n    (wsMock as any).CLOSED = 3;\r\n    global.WebSocket = wsMock as any;\r\n    return wsInstance;\r\n  }\r\n\r\n  it('provides default values', () => {\r\n    // Enable WebSocket for this test\r\n    process.env.VITE_WEBSOCKET_ENABLED = 'true';\r\n    // Also set on window for compatibility\r\n    (global.window as any).__VITE_ENV__ = { VITE_WEBSOCKET_ENABLED: 'true' };\r\n    \r\n    render(\r\n      <_WebSocketProvider>\r\n        <TestComponent />\r\n      </_WebSocketProvider>\r\n    );\r\n    expect(screen.getByTestId('ws-context')).toHaveTextContent('context-present');\r\n  });\r\n\r\n  it('handles transient connection failures and recovery', async () => {\r\n    // Enable WebSocket for this test\r\n    process.env.VITE_WEBSOCKET_ENABLED = 'true';\r\n    // Also set on window for compatibility\r\n    (global.window as any).__VITE_ENV__ = { VITE_WEBSOCKET_ENABLED: 'true' };\r\n    \r\n    let wsInstance: any;\r\n    let onopenHandler: ((this: WebSocket, ev: Event) => any) | null = null;\r\n    const wsMock = jest.fn().mockImplementation(() => {\r\n      wsInstance = {\r\n        readyState: 1,\r\n        send: jest.fn(),\r\n        close: jest.fn(),\r\n        // Initialize hooks as functions to prevent undefined errors\r\n        _onclose: () => {},\r\n        _onerror: () => {},\r\n        _onmessage: () => {},\r\n        set onopen(fn: ((this: WebSocket, ev: Event) => any) | null) {\r\n          onopenHandler = fn;\r\n          // Simulate immediate connection for test\r\n          setTimeout(() => {\r\n            if (fn) {\r\n              fn.call(wsInstance, new Event('open'));\r\n            }\r\n          }, 10);\r\n        },\r\n        set onclose(fn: ((this: WebSocket, ev: CloseEvent) => any) | null) {\r\n          (this as any)._onclose = fn;\r\n        },\r\n        set onerror(fn: ((this: WebSocket, ev: Event) => any) | null) {\r\n          (this as any)._onerror = fn;\r\n        },\r\n        set onmessage(fn: ((this: WebSocket, ev: MessageEvent) => any) | null) {\r\n          (this as any)._onmessage = fn;\r\n        },\r\n        // Method to manually trigger onopen for testing\r\n        triggerOpen: () => {\r\n          if (onopenHandler) {\r\n            onopenHandler.call(wsInstance, new Event('open'));\r\n          }\r\n        }\r\n      };\r\n      return wsInstance;\r\n    });\r\n    (wsMock as any).CONNECTING = 0;\r\n    (wsMock as any).OPEN = 1;\r\n    (wsMock as any).CLOSING = 2;\r\n    (wsMock as any).CLOSED = 3;\r\n    global.WebSocket = wsMock as any;\r\n\r\n    function StatusComponent() {\r\n      const ctx = _useWebSocket();\r\n      return <div data-testid='ws-status'>{ctx.status}</div>;\r\n    }\r\n\r\n    render(\r\n      <_WebSocketProvider>\r\n        <StatusComponent />\r\n      </_WebSocketProvider>\r\n    );\r\n\r\n    // Wait for initial connection\r\n    await act(async () => {\r\n      await new Promise(resolve => setTimeout(resolve, 20));\r\n    });\r\n\r\n    // Should be connected initially\r\n    expect(screen.getByTestId('ws-status').textContent).toBe('connected');\r\n\r\n    // Simulate close event (transient failure)\r\n    await act(async () => {\r\n      if (wsInstance && wsInstance._onclose) {\r\n        wsInstance._onclose({ code: 1006, reason: 'test', wasClean: false });\r\n      }\r\n    });\r\n\r\n    // Should enter disconnected state after close\r\n    expect(screen.getByTestId('ws-status').textContent).toBe('disconnected');\r\n\r\n    // Simulate recovery by triggering onopen\r\n    await act(async () => {\r\n      if (wsInstance && wsInstance.triggerOpen) {\r\n        wsInstance.triggerOpen();\r\n      }\r\n    });\r\n\r\n    // Should be connected after recovery\r\n    expect(screen.getByTestId('ws-status').textContent).toBe('connected');\r\n  });\r\n\r\n  it('reconnects immediately on network online event', async () => {\r\n    // Enable WebSocket for this test\r\n    process.env.VITE_WEBSOCKET_ENABLED = 'true';\r\n    // Also set on window for compatibility\r\n    (global.window as any).__VITE_ENV__ = { VITE_WEBSOCKET_ENABLED: 'true' };\r\n    \r\n    let wsInstance: any;\r\n    const wsMock = jest.fn().mockImplementation(() => {\r\n      wsInstance = {\r\n        readyState: 1,\r\n        send: jest.fn(),\r\n        close: jest.fn(),\r\n        set onopen(fn: ((this: WebSocket, ev: Event) => any) | null) {\r\n          setTimeout(() => fn && fn.call(wsInstance, new Event('open')), 10);\r\n        },\r\n        set onclose(fn: ((this: WebSocket, ev: CloseEvent) => any) | null) {\r\n          (this as any)._onclose = fn;\r\n        },\r\n        set onerror(fn: ((this: WebSocket, ev: Event) => any) | null) {\r\n          (this as any)._onerror = fn;\r\n        },\r\n        set onmessage(fn: ((this: WebSocket, ev: MessageEvent) => any) | null) {\r\n          (this as any)._onmessage = fn;\r\n        },\r\n        // Initialize hooks as functions to prevent undefined errors\r\n        _onclose: () => {},\r\n        _onerror: () => {},\r\n        _onmessage: () => {},\r\n      };\r\n      return wsInstance;\r\n    });\r\n    (wsMock as any).CONNECTING = 0;\r\n    (wsMock as any).OPEN = 1;\r\n    (wsMock as any).CLOSING = 2;\r\n    (wsMock as any).CLOSED = 3;\r\n    global.WebSocket = wsMock as any;\r\n    \r\n    function StatusComponent() {\r\n      const ctx = _useWebSocket();\r\n      return <div data-testid='ws-status'>{ctx.status}</div>;\r\n    }\r\n    \r\n    render(\r\n      <_WebSocketProvider>\r\n        <StatusComponent />\r\n      </_WebSocketProvider>\r\n    );\r\n    \r\n    // Wait for initial connection\r\n    await act(async () => {\r\n      await new Promise(resolve => setTimeout(resolve, 20));\r\n    });\r\n    \r\n    // Simulate offline event\r\n    await act(async () => {\r\n      window.dispatchEvent(new Event('offline'));\r\n    });\r\n    \r\n    expect(screen.getByTestId('ws-status').textContent).toBe('disconnected');\r\n    \r\n    // Simulate online event - this should trigger reconnection\r\n    await act(async () => {\r\n      window.dispatchEvent(new Event('online'));\r\n    });\r\n    \r\n    // Should enter reconnecting state immediately\r\n    expect(screen.getByTestId('ws-status').textContent).toBe('reconnecting');\r\n  });\r\n\r\n  it('exposes lastError in context on error', async () => {\r\n    // Enable WebSocket for this test\r\n    process.env.VITE_WEBSOCKET_ENABLED = 'true';\r\n    // Also set on window for compatibility\r\n    (global.window as any).__VITE_ENV__ = { VITE_WEBSOCKET_ENABLED: 'true' };\r\n    \r\n    let wsInstance: any;\r\n    const wsMock = jest.fn().mockImplementation(() => {\r\n      wsInstance = {\r\n        readyState: 1,\r\n        send: jest.fn(),\r\n        close: jest.fn(),\r\n        set onopen(fn: ((this: WebSocket, ev: Event) => any) | null) {\r\n          setTimeout(() => fn && fn.call(wsInstance, new Event('open')), 10);\r\n        },\r\n        set onclose(fn: ((this: WebSocket, ev: CloseEvent) => any) | null) {\r\n          (this as any)._onclose = fn;\r\n        },\r\n        set onerror(fn: ((this: WebSocket, ev: Event) => any) | null) {\r\n          (this as any)._onerror = fn;\r\n        },\r\n        set onmessage(fn: ((this: WebSocket, ev: MessageEvent) => any) | null) {\r\n          (this as any)._onmessage = fn;\r\n        },\r\n        // Initialize hooks as functions to prevent undefined errors\r\n        _onclose: () => {},\r\n        _onerror: () => {},\r\n        _onmessage: () => {},\r\n      };\r\n      return wsInstance;\r\n    });\r\n    (wsMock as any).CONNECTING = 0;\r\n    (wsMock as any).OPEN = 1;\r\n    (wsMock as any).CLOSING = 2;\r\n    (wsMock as any).CLOSED = 3;\r\n    global.WebSocket = wsMock as any;\r\n    \r\n    function ErrorComponent() {\r\n      const ctx = _useWebSocket();\r\n      return <div data-testid='ws-error'>{ctx.lastError || 'none'}</div>;\r\n    }\r\n    \r\n    render(\r\n      <_WebSocketProvider>\r\n        <ErrorComponent />\r\n      </_WebSocketProvider>\r\n    );\r\n    \r\n    // Simulate error event\r\n    await act(async () => {\r\n      if (wsInstance._onerror) {\r\n        wsInstance._onerror(new Event('error'));\r\n      }\r\n    });\r\n    \r\n    expect(screen.getByTestId('ws-error').textContent).not.toBe('none');\r\n  });\r\n});\r\n"],"mappings":"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","ignoreList":[]}