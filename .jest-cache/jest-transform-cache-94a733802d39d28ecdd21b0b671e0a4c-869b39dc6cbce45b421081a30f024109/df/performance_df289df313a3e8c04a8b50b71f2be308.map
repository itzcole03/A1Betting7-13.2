{"version":3,"names":["React","_interopRequireWildcard","require","_logger","_performanceMetrics","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","PerformanceMonitor","constructor","metrics","loadStartTimes","Map","startLoading","componentName","performance","now","logger","debug","endLoading","startTime","loadTime","recordMetric","timestamp","Date","userAgent","navigator","delete","info","toFixed","trackRender","renderFn","result","renderTime","metric","push","length","slice","warn","getSummary","totalComponents","averageLoadTime","slowestComponent","fastestComponent","totalLoadTime","reduce","sum","slowest","current","fastest","getMetrics","clear","trackWebVitals","initWebVitals","onMetric","name","value","rating","includeNavigationMetrics","nav","getNavigationTiming","domContentLoaded","type","source","performanceMonitor","exports","withPerformanceTracking","WrappedComponent","ComponentWithPerformanceTracking","props","displayName","useEffect","createElement","usePerformanceTracking","trackOperation","useCallback","operationName","operation","window"],"sources":["performance.ts"],"sourcesContent":["/**\r\n * Performance Monitoring for A1Betting Frontend\r\n *\r\n * Tracks loading times, component render performance, and provides\r\n * insights for optimization.\r\n */\r\n\r\nimport * as React from 'react';\r\nimport { logger } from './logger';\r\nimport { initWebVitals, getNavigationTiming } from '../perf/performanceMetrics';\r\n\r\ninterface PerformanceMetrics {\r\n  componentName: string;\r\n  loadTime: number;\r\n  renderTime?: number;\r\n  timestamp: number;\r\n  userAgent: string;\r\n}\r\n\r\nclass PerformanceMonitor {\r\n  private metrics: PerformanceMetrics[] = [];\r\n  private loadStartTimes = new Map<string, number>();\r\n\r\n  /**\r\n   * Start tracking component load time\r\n   */\r\n  startLoading(componentName: string): void {\r\n    this.loadStartTimes.set(componentName, performance.now());\r\n    logger.debug(`‚è±Ô∏è Started loading ${componentName}`, {}, 'Performance');\r\n  }\r\n\r\n  /**\r\n   * End tracking component load time\r\n   */\r\n  endLoading(componentName: string): void {\r\n    const startTime = this.loadStartTimes.get(componentName);\r\n    if (startTime) {\r\n      const loadTime = performance.now() - startTime;\r\n      this.recordMetric({\r\n        componentName,\r\n        loadTime,\r\n        timestamp: Date.now(),\r\n        userAgent: navigator.userAgent,\r\n      });\r\n\r\n      this.loadStartTimes.delete(componentName);\r\n\r\n      logger.info(\r\n        `‚úÖ ${componentName} loaded in ${loadTime.toFixed(2)}ms`,\r\n        {\r\n          componentName,\r\n          loadTime,\r\n        },\r\n        'Performance'\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Track component render performance\r\n   */\r\n  trackRender<T>(componentName: string, renderFn: () => T): T {\r\n    const startTime = performance.now();\r\n    const result = renderFn();\r\n    const renderTime = performance.now() - startTime;\r\n\r\n    // Store render time as a metric\r\n    this.recordMetric({\r\n      componentName,\r\n      loadTime: renderTime,\r\n      renderTime,\r\n      timestamp: Date.now(),\r\n      userAgent: navigator.userAgent,\r\n    });\r\n\r\n    logger.debug(\r\n      `üîÑ ${componentName} rendered in ${renderTime.toFixed(2)}ms`,\r\n      {\r\n        componentName,\r\n        renderTime,\r\n      },\r\n      'Performance'\r\n    );\r\n\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Record performance metric\r\n   */\r\n  private recordMetric(metric: PerformanceMetrics): void {\r\n    this.metrics.push(metric);\r\n\r\n    // Keep only last 100 metrics to prevent memory leaks\r\n    if (this.metrics.length > 100) {\r\n      this.metrics = this.metrics.slice(-100);\r\n    }\r\n\r\n    // Log warnings for slow components\r\n    if (metric.loadTime > 2000) {\r\n      logger.warn(\r\n        `üêå Slow component load: ${metric.componentName} took ${metric.loadTime.toFixed(2)}ms`,\r\n        {\r\n          metric,\r\n        },\r\n        'Performance'\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get performance summary\r\n   */\r\n  getSummary(): {\r\n    totalComponents: number;\r\n    averageLoadTime: number;\r\n    slowestComponent: PerformanceMetrics | null;\r\n    fastestComponent: PerformanceMetrics | null;\r\n  } {\r\n    if (this.metrics.length === 0) {\r\n      return {\r\n        totalComponents: 0,\r\n        averageLoadTime: 0,\r\n        slowestComponent: null,\r\n        fastestComponent: null,\r\n      };\r\n    }\r\n\r\n    const totalLoadTime = this.metrics.reduce((sum, metric) => sum + metric.loadTime, 0);\r\n    const averageLoadTime = totalLoadTime / this.metrics.length;\r\n\r\n    const slowestComponent = this.metrics.reduce((slowest, current) =>\r\n      current.loadTime > slowest.loadTime ? current : slowest\r\n    );\r\n\r\n    const fastestComponent = this.metrics.reduce((fastest, current) =>\r\n      current.loadTime < fastest.loadTime ? current : fastest\r\n    );\r\n\r\n    return {\r\n      totalComponents: this.metrics.length,\r\n      averageLoadTime,\r\n      slowestComponent,\r\n      fastestComponent,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Get all metrics\r\n   */\r\n  getMetrics(): PerformanceMetrics[] {\r\n    return [...this.metrics];\r\n  }\r\n\r\n  /**\r\n   * Clear all metrics\r\n   */\r\n  clear(): void {\r\n    this.metrics = [];\r\n    this.loadStartTimes.clear();\r\n  }\r\n\r\n  /**\r\n   * Track Core Web Vitals\r\n   */\r\n  trackWebVitals(): void {\r\n    // Initialize unified web vitals (idempotent)\r\n    initWebVitals({\r\n      onMetric: metric => {\r\n        // Map to logger categories\r\n        logger.info(\r\n          `üìä ${metric.name}: ${metric.value.toFixed(2)}${metric.name === 'CLS' ? '' : 'ms'}`,\r\n          { metric: metric.name, value: metric.value, rating: metric.rating },\r\n          'WebVitals'\r\n        );\r\n      },\r\n      includeNavigationMetrics: true,\r\n    });\r\n\r\n    // Extra navigation timing diagnostics (one-off) using normalized helper\r\n    const nav = getNavigationTiming();\r\n    if (nav) {\r\n      logger.debug(\r\n        'üìä Navigation Timing (normalized)',\r\n        {\r\n          totalLoadTime: nav.totalLoadTime,\r\n          domContentLoaded: nav.domContentLoaded,\r\n          type: nav.type,\r\n          source: nav.source,\r\n        },\r\n        'WebVitals'\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\n// Global performance monitor instance\r\nexport const performanceMonitor = new PerformanceMonitor();\r\n\r\n/**\r\n * HOC for tracking component performance\r\n */\r\nexport const withPerformanceTracking = <P extends object>(\r\n  WrappedComponent: React.ComponentType<P>,\r\n  componentName?: string\r\n) => {\r\n  const ComponentWithPerformanceTracking: React.FC<P> = props => {\r\n    const name =\r\n      componentName || WrappedComponent.displayName || WrappedComponent.name || 'UnknownComponent';\r\n\r\n    React.useEffect(() => {\r\n      performanceMonitor.startLoading(name);\r\n      return () => {\r\n        performanceMonitor.endLoading(name);\r\n      };\r\n    }, [name]);\r\n\r\n    return React.createElement(WrappedComponent, props);\r\n  };\r\n\r\n  ComponentWithPerformanceTracking.displayName = `withPerformanceTracking(${\r\n    componentName || WrappedComponent.displayName || WrappedComponent.name\r\n  })`;\r\n\r\n  return ComponentWithPerformanceTracking;\r\n};\r\n\r\n/**\r\n * Hook for tracking component performance\r\n */\r\nexport const usePerformanceTracking = (componentName: string) => {\r\n  React.useEffect(() => {\r\n    performanceMonitor.startLoading(componentName);\r\n    return () => {\r\n      performanceMonitor.endLoading(componentName);\r\n    };\r\n  }, [componentName]);\r\n\r\n  const trackOperation = React.useCallback(\r\n    <T>(operationName: string, operation: () => T): T => {\r\n      return performanceMonitor.trackRender(`${componentName}.${operationName}`, operation);\r\n    },\r\n    [componentName]\r\n  );\r\n\r\n  return { trackOperation };\r\n};\r\n\r\n// Initialize web vitals tracking\r\nif (typeof window !== 'undefined') {\r\n  performanceMonitor.trackWebVitals();\r\n}\r\n"],"mappings":";;;;;;AAOA,IAAAA,KAAA,GAAAC,uBAAA,CAAAC,OAAA;AACA,IAAAC,OAAA,GAAAD,OAAA;AACA,IAAAE,mBAAA,GAAAF,OAAA;AAAgF,SAAAD,wBAAAI,CAAA,EAAAC,CAAA,6BAAAC,OAAA,MAAAC,CAAA,OAAAD,OAAA,IAAAE,CAAA,OAAAF,OAAA,YAAAN,uBAAA,YAAAA,CAAAI,CAAA,EAAAC,CAAA,SAAAA,CAAA,IAAAD,CAAA,IAAAA,CAAA,CAAAK,UAAA,SAAAL,CAAA,MAAAM,CAAA,EAAAC,CAAA,EAAAC,CAAA,KAAAC,SAAA,QAAAC,OAAA,EAAAV,CAAA,iBAAAA,CAAA,uBAAAA,CAAA,yBAAAA,CAAA,SAAAQ,CAAA,MAAAF,CAAA,GAAAL,CAAA,GAAAG,CAAA,GAAAD,CAAA,QAAAG,CAAA,CAAAK,GAAA,CAAAX,CAAA,UAAAM,CAAA,CAAAM,GAAA,CAAAZ,CAAA,GAAAM,CAAA,CAAAO,GAAA,CAAAb,CAAA,EAAAQ,CAAA,gBAAAP,CAAA,IAAAD,CAAA,gBAAAC,CAAA,OAAAa,cAAA,CAAAC,IAAA,CAAAf,CAAA,EAAAC,CAAA,OAAAM,CAAA,IAAAD,CAAA,GAAAU,MAAA,CAAAC,cAAA,KAAAD,MAAA,CAAAE,wBAAA,CAAAlB,CAAA,EAAAC,CAAA,OAAAM,CAAA,CAAAK,GAAA,IAAAL,CAAA,CAAAM,GAAA,IAAAP,CAAA,CAAAE,CAAA,EAAAP,CAAA,EAAAM,CAAA,IAAAC,CAAA,CAAAP,CAAA,IAAAD,CAAA,CAAAC,CAAA,WAAAO,CAAA,KAAAR,CAAA,EAAAC,CAAA;AAThF;AACA;AACA;AACA;AACA;AACA;;AAcA,MAAMkB,kBAAkB,CAAC;EAAAC,YAAA;IAAA,KACfC,OAAO,GAAyB,EAAE;IAAA,KAClCC,cAAc,GAAG,IAAIC,GAAG,CAAiB,CAAC;EAAA;EAElD;AACF;AACA;EACEC,YAAYA,CAACC,aAAqB,EAAQ;IACxC,IAAI,CAACH,cAAc,CAACT,GAAG,CAACY,aAAa,EAAEC,WAAW,CAACC,GAAG,CAAC,CAAC,CAAC;IACzDC,cAAM,CAACC,KAAK,CAAC,sBAAsBJ,aAAa,EAAE,EAAE,CAAC,CAAC,EAAE,aAAa,CAAC;EACxE;;EAEA;AACF;AACA;EACEK,UAAUA,CAACL,aAAqB,EAAQ;IACtC,MAAMM,SAAS,GAAG,IAAI,CAACT,cAAc,CAACV,GAAG,CAACa,aAAa,CAAC;IACxD,IAAIM,SAAS,EAAE;MACb,MAAMC,QAAQ,GAAGN,WAAW,CAACC,GAAG,CAAC,CAAC,GAAGI,SAAS;MAC9C,IAAI,CAACE,YAAY,CAAC;QAChBR,aAAa;QACbO,QAAQ;QACRE,SAAS,EAAEC,IAAI,CAACR,GAAG,CAAC,CAAC;QACrBS,SAAS,EAAEC,SAAS,CAACD;MACvB,CAAC,CAAC;MAEF,IAAI,CAACd,cAAc,CAACgB,MAAM,CAACb,aAAa,CAAC;MAEzCG,cAAM,CAACW,IAAI,CACT,KAAKd,aAAa,cAAcO,QAAQ,CAACQ,OAAO,CAAC,CAAC,CAAC,IAAI,EACvD;QACEf,aAAa;QACbO;MACF,CAAC,EACD,aACF,CAAC;IACH;EACF;;EAEA;AACF;AACA;EACES,WAAWA,CAAIhB,aAAqB,EAAEiB,QAAiB,EAAK;IAC1D,MAAMX,SAAS,GAAGL,WAAW,CAACC,GAAG,CAAC,CAAC;IACnC,MAAMgB,MAAM,GAAGD,QAAQ,CAAC,CAAC;IACzB,MAAME,UAAU,GAAGlB,WAAW,CAACC,GAAG,CAAC,CAAC,GAAGI,SAAS;;IAEhD;IACA,IAAI,CAACE,YAAY,CAAC;MAChBR,aAAa;MACbO,QAAQ,EAAEY,UAAU;MACpBA,UAAU;MACVV,SAAS,EAAEC,IAAI,CAACR,GAAG,CAAC,CAAC;MACrBS,SAAS,EAAEC,SAAS,CAACD;IACvB,CAAC,CAAC;IAEFR,cAAM,CAACC,KAAK,CACV,MAAMJ,aAAa,gBAAgBmB,UAAU,CAACJ,OAAO,CAAC,CAAC,CAAC,IAAI,EAC5D;MACEf,aAAa;MACbmB;IACF,CAAC,EACD,aACF,CAAC;IAED,OAAOD,MAAM;EACf;;EAEA;AACF;AACA;EACUV,YAAYA,CAACY,MAA0B,EAAQ;IACrD,IAAI,CAACxB,OAAO,CAACyB,IAAI,CAACD,MAAM,CAAC;;IAEzB;IACA,IAAI,IAAI,CAACxB,OAAO,CAAC0B,MAAM,GAAG,GAAG,EAAE;MAC7B,IAAI,CAAC1B,OAAO,GAAG,IAAI,CAACA,OAAO,CAAC2B,KAAK,CAAC,CAAC,GAAG,CAAC;IACzC;;IAEA;IACA,IAAIH,MAAM,CAACb,QAAQ,GAAG,IAAI,EAAE;MAC1BJ,cAAM,CAACqB,IAAI,CACT,2BAA2BJ,MAAM,CAACpB,aAAa,SAASoB,MAAM,CAACb,QAAQ,CAACQ,OAAO,CAAC,CAAC,CAAC,IAAI,EACtF;QACEK;MACF,CAAC,EACD,aACF,CAAC;IACH;EACF;;EAEA;AACF;AACA;EACEK,UAAUA,CAAA,EAKR;IACA,IAAI,IAAI,CAAC7B,OAAO,CAAC0B,MAAM,KAAK,CAAC,EAAE;MAC7B,OAAO;QACLI,eAAe,EAAE,CAAC;QAClBC,eAAe,EAAE,CAAC;QAClBC,gBAAgB,EAAE,IAAI;QACtBC,gBAAgB,EAAE;MACpB,CAAC;IACH;IAEA,MAAMC,aAAa,GAAG,IAAI,CAAClC,OAAO,CAACmC,MAAM,CAAC,CAACC,GAAG,EAAEZ,MAAM,KAAKY,GAAG,GAAGZ,MAAM,CAACb,QAAQ,EAAE,CAAC,CAAC;IACpF,MAAMoB,eAAe,GAAGG,aAAa,GAAG,IAAI,CAAClC,OAAO,CAAC0B,MAAM;IAE3D,MAAMM,gBAAgB,GAAG,IAAI,CAAChC,OAAO,CAACmC,MAAM,CAAC,CAACE,OAAO,EAAEC,OAAO,KAC5DA,OAAO,CAAC3B,QAAQ,GAAG0B,OAAO,CAAC1B,QAAQ,GAAG2B,OAAO,GAAGD,OAClD,CAAC;IAED,MAAMJ,gBAAgB,GAAG,IAAI,CAACjC,OAAO,CAACmC,MAAM,CAAC,CAACI,OAAO,EAAED,OAAO,KAC5DA,OAAO,CAAC3B,QAAQ,GAAG4B,OAAO,CAAC5B,QAAQ,GAAG2B,OAAO,GAAGC,OAClD,CAAC;IAED,OAAO;MACLT,eAAe,EAAE,IAAI,CAAC9B,OAAO,CAAC0B,MAAM;MACpCK,eAAe;MACfC,gBAAgB;MAChBC;IACF,CAAC;EACH;;EAEA;AACF;AACA;EACEO,UAAUA,CAAA,EAAyB;IACjC,OAAO,CAAC,GAAG,IAAI,CAACxC,OAAO,CAAC;EAC1B;;EAEA;AACF;AACA;EACEyC,KAAKA,CAAA,EAAS;IACZ,IAAI,CAACzC,OAAO,GAAG,EAAE;IACjB,IAAI,CAACC,cAAc,CAACwC,KAAK,CAAC,CAAC;EAC7B;;EAEA;AACF;AACA;EACEC,cAAcA,CAAA,EAAS;IACrB;IACA,IAAAC,iCAAa,EAAC;MACZC,QAAQ,EAAEpB,MAAM,IAAI;QAClB;QACAjB,cAAM,CAACW,IAAI,CACT,MAAMM,MAAM,CAACqB,IAAI,KAAKrB,MAAM,CAACsB,KAAK,CAAC3B,OAAO,CAAC,CAAC,CAAC,GAAGK,MAAM,CAACqB,IAAI,KAAK,KAAK,GAAG,EAAE,GAAG,IAAI,EAAE,EACnF;UAAErB,MAAM,EAAEA,MAAM,CAACqB,IAAI;UAAEC,KAAK,EAAEtB,MAAM,CAACsB,KAAK;UAAEC,MAAM,EAAEvB,MAAM,CAACuB;QAAO,CAAC,EACnE,WACF,CAAC;MACH,CAAC;MACDC,wBAAwB,EAAE;IAC5B,CAAC,CAAC;;IAEF;IACA,MAAMC,GAAG,GAAG,IAAAC,uCAAmB,EAAC,CAAC;IACjC,IAAID,GAAG,EAAE;MACP1C,cAAM,CAACC,KAAK,CACV,mCAAmC,EACnC;QACE0B,aAAa,EAAEe,GAAG,CAACf,aAAa;QAChCiB,gBAAgB,EAAEF,GAAG,CAACE,gBAAgB;QACtCC,IAAI,EAAEH,GAAG,CAACG,IAAI;QACdC,MAAM,EAAEJ,GAAG,CAACI;MACd,CAAC,EACD,WACF,CAAC;IACH;EACF;AACF;;AAEA;AACO,MAAMC,kBAAkB,GAAAC,OAAA,CAAAD,kBAAA,GAAG,IAAIxD,kBAAkB,CAAC,CAAC;;AAE1D;AACA;AACA;AACO,MAAM0D,uBAAuB,GAAGA,CACrCC,gBAAwC,EACxCrD,aAAsB,KACnB;EACH,MAAMsD,gCAA6C,GAAGC,KAAK,IAAI;IAC7D,MAAMd,IAAI,GACRzC,aAAa,IAAIqD,gBAAgB,CAACG,WAAW,IAAIH,gBAAgB,CAACZ,IAAI,IAAI,kBAAkB;IAE9FvE,KAAK,CAACuF,SAAS,CAAC,MAAM;MACpBP,kBAAkB,CAACnD,YAAY,CAAC0C,IAAI,CAAC;MACrC,OAAO,MAAM;QACXS,kBAAkB,CAAC7C,UAAU,CAACoC,IAAI,CAAC;MACrC,CAAC;IACH,CAAC,EAAE,CAACA,IAAI,CAAC,CAAC;IAEV,oBAAOvE,KAAK,CAACwF,aAAa,CAACL,gBAAgB,EAAEE,KAAK,CAAC;EACrD,CAAC;EAEDD,gCAAgC,CAACE,WAAW,GAAG,2BAC7CxD,aAAa,IAAIqD,gBAAgB,CAACG,WAAW,IAAIH,gBAAgB,CAACZ,IAAI,GACrE;EAEH,OAAOa,gCAAgC;AACzC,CAAC;;AAED;AACA;AACA;AAFAH,OAAA,CAAAC,uBAAA,GAAAA,uBAAA;AAGO,MAAMO,sBAAsB,GAAI3D,aAAqB,IAAK;EAC/D9B,KAAK,CAACuF,SAAS,CAAC,MAAM;IACpBP,kBAAkB,CAACnD,YAAY,CAACC,aAAa,CAAC;IAC9C,OAAO,MAAM;MACXkD,kBAAkB,CAAC7C,UAAU,CAACL,aAAa,CAAC;IAC9C,CAAC;EACH,CAAC,EAAE,CAACA,aAAa,CAAC,CAAC;EAEnB,MAAM4D,cAAc,GAAG1F,KAAK,CAAC2F,WAAW,CACtC,CAAIC,aAAqB,EAAEC,SAAkB,KAAQ;IACnD,OAAOb,kBAAkB,CAAClC,WAAW,CAAC,GAAGhB,aAAa,IAAI8D,aAAa,EAAE,EAAEC,SAAS,CAAC;EACvF,CAAC,EACD,CAAC/D,aAAa,CAChB,CAAC;EAED,OAAO;IAAE4D;EAAe,CAAC;AAC3B,CAAC;;AAED;AAAAT,OAAA,CAAAQ,sBAAA,GAAAA,sBAAA;AACA,IAAI,OAAOK,MAAM,KAAK,WAAW,EAAE;EACjCd,kBAAkB,CAACZ,cAAc,CAAC,CAAC;AACrC","ignoreList":[]}