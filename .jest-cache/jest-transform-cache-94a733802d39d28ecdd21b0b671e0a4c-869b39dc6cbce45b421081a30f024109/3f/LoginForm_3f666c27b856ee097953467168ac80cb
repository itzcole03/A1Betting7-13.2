9478a15c6e172185aa0bda36140b2857
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _framerMotion = require("framer-motion");
var _lucideReact = require("lucide-react");
var _react = _interopRequireWildcard(require("react"));
var _jsxRuntime = require("react/jsx-runtime");
function _interopRequireWildcard(e, t) { if ("function" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function (e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || "object" != typeof e && "function" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (const t in e) "default" !== t && {}.hasOwnProperty.call(e, t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, t)) && (i.get || i.set) ? o(f, t, i) : f[t] = e[t]); return f; })(e, t); }
const LoginForm = ({
  onLogin,
  onForgotPassword,
  onRequestAccess,
  loading = false,
  error
}) => {
  const [email, setEmail] = (0, _react.useState)('ncr@a1betting.com');
  const [password, setPassword] = (0, _react.useState)('A1Betting1337!');
  const [showPassword, setShowPassword] = (0, _react.useState)(false);
  const [validationError, setValidationError] = (0, _react.useState)(null);
  const handleSubmit = async e => {
    e.preventDefault();
    setValidationError(null);

    // Validation
    if (!email.trim() || !/^[^@\s]+@[^@\s]+\.[^@\s]+$/.test(email)) {
      setValidationError('A valid email address is required');
      return;
    }
    if (!password.trim()) {
      setValidationError('Password is required');
      return;
    }
    if (password.length < 8) {
      setValidationError('Password must be at least 8 characters');
      return;
    }
    if (!/[a-zA-Z]/.test(password) || !/\d/.test(password)) {
      setValidationError('Password must contain both letters and numbers');
      return;
    }
    setValidationError(null);
    if (onLogin) {
      try {
        await onLogin(email.trim(), password);
      } catch (err) {
        // Error is handled by parent component
      }
    }
  };
  const displayError = error || validationError;
  return /*#__PURE__*/(0, _jsxRuntime.jsx)(_framerMotion.motion.div, {
    initial: {
      opacity: 0,
      y: 20
    },
    animate: {
      opacity: 1,
      y: 0
    },
    className: "max-w-md mx-auto",
    children: /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
      className: "bg-slate-800/50 backdrop-blur-lg border border-slate-700/50 rounded-xl p-8",
      children: [/*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
        className: "text-center mb-8",
        children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
          className: "w-16 h-16 mx-auto mb-4 bg-gradient-to-r from-cyber-primary to-cyber-accent rounded-full flex items-center justify-center",
          children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_lucideReact.Shield, {
            className: "w-8 h-8 text-slate-900"
          })
        }), /*#__PURE__*/(0, _jsxRuntime.jsx)("h2", {
          className: "text-2xl font-bold text-white mb-2",
          children: "Welcome Back"
        }), /*#__PURE__*/(0, _jsxRuntime.jsx)("p", {
          className: "text-gray-400",
          children: "Sign in to access your A1 Betting dashboard"
        })]
      }), /*#__PURE__*/(0, _jsxRuntime.jsxs)("form", {
        onSubmit: handleSubmit,
        className: "space-y-6",
        children: [displayError && /*#__PURE__*/(0, _jsxRuntime.jsx)(_framerMotion.motion.div, {
          initial: {
            opacity: 0,
            scale: 0.95
          },
          animate: {
            opacity: 1,
            scale: 1
          },
          className: "bg-red-500/10 border border-red-500/50 rounded-lg p-4",
          children: /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
            className: "flex items-center space-x-3",
            children: [/*#__PURE__*/(0, _jsxRuntime.jsx)(_lucideReact.AlertCircle, {
              className: "w-5 h-5 text-red-400 flex-shrink-0"
            }), /*#__PURE__*/(0, _jsxRuntime.jsx)("p", {
              className: "text-red-300 text-sm",
              children: displayError
            })]
          })
        }), /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
          children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("label", {
            htmlFor: "login-email",
            className: "block text-sm font-medium text-gray-300 mb-2",
            children: "Email Address"
          }), /*#__PURE__*/(0, _jsxRuntime.jsx)("input", {
            id: "login-email",
            type: "email",
            value: email,
            onChange: e => setEmail(e.target.value),
            placeholder: "your.email@company.com",
            className: "w-full px-4 py-3 bg-slate-700/50 border border-slate-600/50 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:border-cyber-primary focus:ring-2 focus:ring-cyber-primary/20 transition-all",
            disabled: loading,
            required: true,
            autoComplete: "email"
          })]
        }), /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
          children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("label", {
            htmlFor: "login-password",
            className: "block text-sm font-medium text-gray-300 mb-2",
            children: "Password"
          }), /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
            className: "relative",
            children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("input", {
              id: "login-password",
              type: showPassword ? 'text' : 'password',
              value: password,
              onChange: e => setPassword(e.target.value),
              placeholder: "Enter your password",
              className: "w-full px-4 py-3 pr-12 bg-slate-700/50 border border-slate-600/50 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:border-cyber-primary focus:ring-2 focus:ring-cyber-primary/20 transition-all",
              disabled: loading,
              required: true,
              autoComplete: "current-password"
            }), /*#__PURE__*/(0, _jsxRuntime.jsx)("button", {
              type: "button",
              onClick: () => setShowPassword(!showPassword),
              className: "absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-400 hover:text-white transition-colors",
              disabled: loading,
              children: showPassword ? /*#__PURE__*/(0, _jsxRuntime.jsx)(_lucideReact.EyeOff, {
                className: "w-5 h-5"
              }) : /*#__PURE__*/(0, _jsxRuntime.jsx)(_lucideReact.Eye, {
                className: "w-5 h-5"
              })
            })]
          })]
        }), /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
          className: "flex items-center justify-between",
          children: [/*#__PURE__*/(0, _jsxRuntime.jsxs)("label", {
            className: "flex items-center",
            children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("input", {
              type: "checkbox",
              className: "w-4 h-4 text-cyber-primary bg-slate-700 border-slate-600 rounded focus:ring-cyber-primary focus:ring-2",
              disabled: loading
            }), /*#__PURE__*/(0, _jsxRuntime.jsx)("span", {
              className: "ml-2 text-sm text-gray-300",
              children: "Remember me"
            })]
          }), onForgotPassword && /*#__PURE__*/(0, _jsxRuntime.jsx)("button", {
            type: "button",
            onClick: () => onForgotPassword(email),
            className: "text-sm text-cyber-primary hover:text-cyber-secondary transition-colors",
            disabled: loading,
            children: "Forgot password?"
          })]
        }), /*#__PURE__*/(0, _jsxRuntime.jsx)("button", {
          type: "submit",
          disabled: loading || !email.trim() || !password.trim(),
          className: "w-full flex items-center justify-center space-x-2 px-6 py-3 bg-gradient-to-r from-cyber-primary to-cyber-accent hover:from-cyber-secondary hover:to-cyber-primary rounded-lg text-slate-900 font-medium transition-all disabled:opacity-50 disabled:cursor-not-allowed",
          children: loading ? /*#__PURE__*/(0, _jsxRuntime.jsxs)(_jsxRuntime.Fragment, {
            children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
              className: "w-5 h-5 border-2 border-slate-900/30 border-t-slate-900 rounded-full animate-spin"
            }), /*#__PURE__*/(0, _jsxRuntime.jsx)("span", {
              children: "Signing In..."
            })]
          }) : /*#__PURE__*/(0, _jsxRuntime.jsxs)(_jsxRuntime.Fragment, {
            children: [/*#__PURE__*/(0, _jsxRuntime.jsx)(_lucideReact.LogIn, {
              className: "w-5 h-5"
            }), /*#__PURE__*/(0, _jsxRuntime.jsx)("span", {
              children: "Sign In"
            })]
          })
        })]
      }), onRequestAccess && /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
        className: "mt-6 pt-6 border-t border-slate-700/50 text-center",
        children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("p", {
          className: "text-sm text-gray-400 mb-3",
          children: "Don't have an account yet?"
        }), /*#__PURE__*/(0, _jsxRuntime.jsx)("button", {
          onClick: onRequestAccess,
          className: "text-cyber-primary hover:text-cyber-secondary transition-colors font-medium",
          disabled: loading,
          children: "Request Access"
        })]
      }), /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
        className: "mt-4 text-center",
        children: /*#__PURE__*/(0, _jsxRuntime.jsx)("p", {
          className: "text-xs text-gray-500",
          children: "By signing in, you agree to our terms of service and privacy policy."
        })
      })]
    })
  });
};
var _default = exports.default = LoginForm;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,