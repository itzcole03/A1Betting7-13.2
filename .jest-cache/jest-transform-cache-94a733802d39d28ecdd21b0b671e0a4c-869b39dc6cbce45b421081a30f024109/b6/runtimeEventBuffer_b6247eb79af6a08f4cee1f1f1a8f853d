6d28ee426b00b70619ee13ca2f878631
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.clearEventBuffer = clearEventBuffer;
exports.getAllRecent = getAllRecent;
exports.getRecent = getRecent;
exports.recordEvent = recordEvent;
/**
 * Runtime Event Buffer - Stores diagnostic events for error correlation
 * 
 * Simple ring buffer for tracking runtime events that can be retrieved
 * during error handling to provide context about what led to failures.
 * 
 * @module debug/runtimeEventBuffer
 */

// Ring buffer for events
const EVENT_BUFFER = [];
const MAX_EVENTS = 50;

/**
 * Record a diagnostic event
 */
function recordEvent(tag, payload) {
  EVENT_BUFFER.push({
    tag,
    payload,
    timestamp: Date.now()
  });

  // Keep only the most recent events
  if (EVENT_BUFFER.length > MAX_EVENTS) {
    EVENT_BUFFER.shift();
  }
}

/**
 * Get recent events by tag
 */
function getRecent(tag, n = 5) {
  return EVENT_BUFFER.filter(event => event.tag === tag).slice(-n);
}

/**
 * Get all recent events
 */
function getAllRecent(n = 10) {
  return EVENT_BUFFER.slice(-n);
}

/**
 * Clear the event buffer (for testing)
 */
function clearEventBuffer() {
  EVENT_BUFFER.length = 0;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJFVkVOVF9CVUZGRVIiLCJNQVhfRVZFTlRTIiwicmVjb3JkRXZlbnQiLCJ0YWciLCJwYXlsb2FkIiwicHVzaCIsInRpbWVzdGFtcCIsIkRhdGUiLCJub3ciLCJsZW5ndGgiLCJzaGlmdCIsImdldFJlY2VudCIsIm4iLCJmaWx0ZXIiLCJldmVudCIsInNsaWNlIiwiZ2V0QWxsUmVjZW50IiwiY2xlYXJFdmVudEJ1ZmZlciJdLCJzb3VyY2VzIjpbInJ1bnRpbWVFdmVudEJ1ZmZlci50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogUnVudGltZSBFdmVudCBCdWZmZXIgLSBTdG9yZXMgZGlhZ25vc3RpYyBldmVudHMgZm9yIGVycm9yIGNvcnJlbGF0aW9uXHJcbiAqIFxyXG4gKiBTaW1wbGUgcmluZyBidWZmZXIgZm9yIHRyYWNraW5nIHJ1bnRpbWUgZXZlbnRzIHRoYXQgY2FuIGJlIHJldHJpZXZlZFxyXG4gKiBkdXJpbmcgZXJyb3IgaGFuZGxpbmcgdG8gcHJvdmlkZSBjb250ZXh0IGFib3V0IHdoYXQgbGVkIHRvIGZhaWx1cmVzLlxyXG4gKiBcclxuICogQG1vZHVsZSBkZWJ1Zy9ydW50aW1lRXZlbnRCdWZmZXJcclxuICovXHJcblxyXG5pbnRlcmZhY2UgRGlhZ25vc3RpY0V2ZW50IHtcclxuICB0YWc6IHN0cmluZztcclxuICBwYXlsb2FkOiBSZWNvcmQ8c3RyaW5nLCB1bmtub3duPjtcclxuICB0aW1lc3RhbXA6IG51bWJlcjtcclxufVxyXG5cclxuLy8gUmluZyBidWZmZXIgZm9yIGV2ZW50c1xyXG5jb25zdCBFVkVOVF9CVUZGRVI6IERpYWdub3N0aWNFdmVudFtdID0gW107XHJcbmNvbnN0IE1BWF9FVkVOVFMgPSA1MDtcclxuXHJcbi8qKlxyXG4gKiBSZWNvcmQgYSBkaWFnbm9zdGljIGV2ZW50XHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gcmVjb3JkRXZlbnQodGFnOiBzdHJpbmcsIHBheWxvYWQ6IFJlY29yZDxzdHJpbmcsIHVua25vd24+KTogdm9pZCB7XHJcbiAgRVZFTlRfQlVGRkVSLnB1c2goe1xyXG4gICAgdGFnLFxyXG4gICAgcGF5bG9hZCxcclxuICAgIHRpbWVzdGFtcDogRGF0ZS5ub3coKSxcclxuICB9KTtcclxuICBcclxuICAvLyBLZWVwIG9ubHkgdGhlIG1vc3QgcmVjZW50IGV2ZW50c1xyXG4gIGlmIChFVkVOVF9CVUZGRVIubGVuZ3RoID4gTUFYX0VWRU5UUykge1xyXG4gICAgRVZFTlRfQlVGRkVSLnNoaWZ0KCk7XHJcbiAgfVxyXG59XHJcblxyXG4vKipcclxuICogR2V0IHJlY2VudCBldmVudHMgYnkgdGFnXHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gZ2V0UmVjZW50KHRhZzogc3RyaW5nLCBuID0gNSk6IERpYWdub3N0aWNFdmVudFtdIHtcclxuICByZXR1cm4gRVZFTlRfQlVGRkVSXHJcbiAgICAuZmlsdGVyKGV2ZW50ID0+IGV2ZW50LnRhZyA9PT0gdGFnKVxyXG4gICAgLnNsaWNlKC1uKTtcclxufVxyXG5cclxuLyoqXHJcbiAqIEdldCBhbGwgcmVjZW50IGV2ZW50c1xyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIGdldEFsbFJlY2VudChuID0gMTApOiBEaWFnbm9zdGljRXZlbnRbXSB7XHJcbiAgcmV0dXJuIEVWRU5UX0JVRkZFUi5zbGljZSgtbik7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBDbGVhciB0aGUgZXZlbnQgYnVmZmVyIChmb3IgdGVzdGluZylcclxuICovXHJcbmV4cG9ydCBmdW5jdGlvbiBjbGVhckV2ZW50QnVmZmVyKCk6IHZvaWQge1xyXG4gIEVWRU5UX0JVRkZFUi5sZW5ndGggPSAwO1xyXG59Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQVFBO0FBQ0EsTUFBTUEsWUFBK0IsR0FBRyxFQUFFO0FBQzFDLE1BQU1DLFVBQVUsR0FBRyxFQUFFOztBQUVyQjtBQUNBO0FBQ0E7QUFDTyxTQUFTQyxXQUFXQSxDQUFDQyxHQUFXLEVBQUVDLE9BQWdDLEVBQVE7RUFDL0VKLFlBQVksQ0FBQ0ssSUFBSSxDQUFDO0lBQ2hCRixHQUFHO0lBQ0hDLE9BQU87SUFDUEUsU0FBUyxFQUFFQyxJQUFJLENBQUNDLEdBQUcsQ0FBQztFQUN0QixDQUFDLENBQUM7O0VBRUY7RUFDQSxJQUFJUixZQUFZLENBQUNTLE1BQU0sR0FBR1IsVUFBVSxFQUFFO0lBQ3BDRCxZQUFZLENBQUNVLEtBQUssQ0FBQyxDQUFDO0VBQ3RCO0FBQ0Y7O0FBRUE7QUFDQTtBQUNBO0FBQ08sU0FBU0MsU0FBU0EsQ0FBQ1IsR0FBVyxFQUFFUyxDQUFDLEdBQUcsQ0FBQyxFQUFxQjtFQUMvRCxPQUFPWixZQUFZLENBQ2hCYSxNQUFNLENBQUNDLEtBQUssSUFBSUEsS0FBSyxDQUFDWCxHQUFHLEtBQUtBLEdBQUcsQ0FBQyxDQUNsQ1ksS0FBSyxDQUFDLENBQUNILENBQUMsQ0FBQztBQUNkOztBQUVBO0FBQ0E7QUFDQTtBQUNPLFNBQVNJLFlBQVlBLENBQUNKLENBQUMsR0FBRyxFQUFFLEVBQXFCO0VBQ3RELE9BQU9aLFlBQVksQ0FBQ2UsS0FBSyxDQUFDLENBQUNILENBQUMsQ0FBQztBQUMvQjs7QUFFQTtBQUNBO0FBQ0E7QUFDTyxTQUFTSyxnQkFBZ0JBLENBQUEsRUFBUztFQUN2Q2pCLFlBQVksQ0FBQ1MsTUFBTSxHQUFHLENBQUM7QUFDekIiLCJpZ25vcmVMaXN0IjpbXX0=