{"version":3,"names":["_reactQuery","require","_react","_interopRequireWildcard","React","_reactRouterDom","_AuthPage","_interopRequireDefault","_PasswordChangeForm","_ErrorBoundary","_ServiceWorkerUpdateNotification","_ErrorBoundaryVersion","_LeanModeBanner","_ReliabilityIntegrationWrapper","_AppContext","_AuthContext","_ThemeContext","_WebSocketContext","_OnboardingContext","_ResetPasswordPage","_coreFunctionalityValidator","_serviceWorkerManager","_SportsService","_webVitalsService","_UpdateModal","_getBackendUrl","_lazyLoading","_location","_performance","_enhancedLogger","_jsxRuntime","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","LazyOnboardingFlow","createLazyComponent","Promise","resolve","then","module","m","OnboardingFlow","fallback","jsx","className","children","LazyUserFriendlyApp","SyncUserFriendlyApp","process","env","NODE_ENV","mod","err","App","enhancedLogger","debug","trackOperation","usePerformanceTracking","apiUrl","useState","getBackendUrl","backendHealthy","setBackendHealthy","_expectedVersion","useEffect","info","serviceWorkerManager","register","registration","webVitalsService","trackCustomMetric","catch","error","undefined","checkApiVersionCompatibility","version","setTimeout","coreFunctionalityValidator","startValidation","stopValidation","checkBackend","url","healthy","response","fetch","method","signal","AbortSignal","timeout","ok","warn","status","ErrorBoundaryVersion","QueryClientProvider","client","QueryClient","_AppProvider","_ThemeProvider","_WebSocketProvider","_AuthProvider","BrowserRouter","Suspense","jsxs","onClick","getLocation","reload","Routes","Route","path","element","AppContent","isAuthenticated","requiresPasswordChange","changePassword","loading","user","useAuth","onboardingComplete","localStorage","getItem","OnboardingProvider","handlePasswordChange","currentPassword","newPassword","_confirmPassword","userId","id","oldPassword","onPasswordChange","isFirstLogin","handleCriticalIssue","issue","ErrorBoundary","role","style","display","ReliabilityIntegrationWrapper","enableMonitoring","monitoringLevel","onCriticalIssue","UpdateModal","exports","_default"],"sources":["App.tsx"],"sourcesContent":["import { QueryClient, QueryClientProvider } from '@tanstack/react-query';\r\nimport * as React from 'react';\r\nimport { useEffect, useState } from 'react';\r\nimport { BrowserRouter, Route, Routes } from 'react-router-dom';\r\nimport AuthPage from './components/auth/AuthPage';\r\nimport PasswordChangeForm from './components/auth/PasswordChangeForm';\r\nimport { ErrorBoundary } from './components/core/ErrorBoundary';\r\nimport ServiceWorkerUpdateNotification from './components/core/ServiceWorkerUpdateNotification';\r\nimport { ErrorBoundaryVersion } from './components/ErrorBoundaryVersion';\r\nimport LeanModeBanner from './components/LeanModeBanner';\r\nimport { ReliabilityIntegrationWrapper } from './components/reliability/ReliabilityIntegrationWrapper';\r\nimport { _AppProvider } from './contexts/AppContext';\r\nimport { _AuthProvider, useAuth } from './contexts/AuthContext';\r\nimport { _ThemeProvider } from './contexts/ThemeContext';\r\nimport { _WebSocketProvider } from './contexts/WebSocketContext';\r\nimport { OnboardingProvider } from './onboarding/OnboardingContext';\r\nimport ResetPasswordPage from './pages/auth/ResetPasswordPage';\r\nimport { coreFunctionalityValidator } from './services/coreFunctionalityValidator';\r\n// import { liveDemoEnhancementService } from './services/liveDemoEnhancementService'; // DISABLED - causing console spam\r\nimport { serviceWorkerManager } from './services/serviceWorkerManager';\r\nimport { checkApiVersionCompatibility } from './services/SportsService';\r\nimport { webVitalsService } from './services/webVitalsService';\r\nimport { UpdateModal } from './update/UpdateModal';\r\nimport { getBackendUrl } from './utils/getBackendUrl';\r\nimport { createLazyComponent } from './utils/lazyLoading';\r\nimport { getLocation } from './utils/location';\r\nimport { usePerformanceTracking } from './utils/performance';\r\nimport { enhancedLogger } from './utils/enhancedLogger';\r\n// Ensure LazyUserFriendlyApp is imported for test env override\r\n// LazyUserFriendlyApp already declared above, remove duplicate\r\n\r\n// Lazy load components with performance tracking\r\nconst LazyOnboardingFlow = createLazyComponent(\r\n  () =>\r\n    import('./onboarding/OnboardingFlow').then(module => {\r\n      const m: any = module;\r\n      return { default: m.OnboardingFlow ?? m.default };\r\n    }),\r\n  {\r\n    fallback: () => <div className='text-white p-8'>Loading onboarding...</div>,\r\n  }\r\n);\r\n\r\nconst LazyUserFriendlyApp = createLazyComponent(\r\n  () => import('./components/user-friendly/UserFriendlyApp'),\r\n  {\r\n    fallback: () => <div className='text-white p-8'>Loading dashboard...</div>,\r\n  }\r\n);\r\n\r\n// For test environments, prefer a synchronous require to avoid Suspense fallback\r\nlet SyncUserFriendlyApp: any = null;\r\nif (process.env.NODE_ENV === 'test') {\r\n  try {\r\n    // Use require to synchronously load the module in the Jest environment\r\n    // eslint-disable-next-line @typescript-eslint/no-var-requires\r\n    const mod = require('./components/user-friendly/UserFriendlyApp');\r\n    SyncUserFriendlyApp = mod && (mod.default || mod);\r\n  } catch (err) {\r\n    // Failed to require synchronously; leave SyncUserFriendlyApp null to fall back to lazy import\r\n  }\r\n}\r\n\r\nfunction App() {\r\n  enhancedLogger.debug('App', 'lifecycle', 'Entering App component with React 19 features - Validating backend and imports');\r\n  const { trackOperation } = usePerformanceTracking('App');\r\n\r\n  // Always use the proper backend URL for direct connection\r\n  const [apiUrl] = useState(getBackendUrl());\r\n  const [backendHealthy, setBackendHealthy] = useState(true);\r\n  const [_expectedVersion] = useState('2.0.0');\r\n\r\n  // Register service worker and check API version compatibility on app start\r\n  useEffect(() => {\r\n  enhancedLogger.info('App', 'serviceWorker', 'Registering service worker with 2025 best practices');\r\n    serviceWorkerManager\r\n      .register()\r\n      .then(registration => {\r\n        if (registration) {\r\n          enhancedLogger.info('App', 'serviceWorker', 'Service worker registered successfully');\r\n          webVitalsService.trackCustomMetric('sw_registration', 1);\r\n        }\r\n      })\r\n      .catch(error => {\r\n        enhancedLogger.error('App', 'serviceWorker', 'Service worker registration failed', undefined, error as Error);\r\n      });\r\n\r\n    // Check API version compatibility\r\n    checkApiVersionCompatibility()\r\n      .then(version => {\r\n        enhancedLogger.info('App', 'api', `API version compatibility check: ${version}`);\r\n        if (version === 'demo') {\r\n          enhancedLogger.info('App', 'mode', 'Running in demo mode due to backend unavailability');\r\n        }\r\n      })\r\n      .catch(err => {\r\n        // Log error but don't throw to avoid unhandled promise rejections\r\n        enhancedLogger.error('App', 'api', 'API version compatibility error', undefined, err as Error);\r\n        enhancedLogger.info('App', 'mode', 'Continuing in demo mode due to API compatibility issues');\r\n        // Don't throw - let the app continue in demo mode\r\n      });\r\n\r\n    // Initialize core functionality validation (non-blocking) - reduced frequency\r\n    setTimeout(() => {\r\n  coreFunctionalityValidator.startValidation(300000); // Check every 5 minutes instead of 1 minute\r\n  enhancedLogger.info('App', 'startup', 'Core functionality validation initialized');\r\n    }, 5000); // Delay to allow app to fully load\r\n\r\n    // Initialize live demo enhancement service (DISABLED - causing console spam)\r\n    // setTimeout(() => {\r\n    // liveDemoEnhancementService.startMonitoring();\r\n    // enhancedLogger.info('App', 'startup', 'Live demo enhancement service initialized');\r\n    // }, 10000); // Delay slightly more to allow core validation to start first\r\n\r\n    return () => {\r\n      coreFunctionalityValidator.stopValidation();\r\n      // liveDemoEnhancementService.stopMonitoring(); // DISABLED\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n  enhancedLogger.info('App', 'health', 'Checking backend connectivity');\r\n    async function checkBackend() {\r\n      const url = apiUrl;\r\n      let healthy = false;\r\n      try {\r\n        // Test backend connectivity with a simple health check\r\n        const response = await fetch(`${url}/health`, {\r\n          method: 'GET',\r\n          signal: AbortSignal.timeout(5000) // 5 second timeout\r\n        });\r\n        healthy = response.ok;\r\n        if (healthy) {\r\n          enhancedLogger.info('App', 'health', `Backend healthy at ${url}`);\r\n        } else {\r\n          enhancedLogger.warn('App', 'health', `Backend returned ${response.status} at ${url}`);\r\n        }\r\n      } catch (error) {\r\n        enhancedLogger.warn('App', 'health', `Backend not reachable at ${url}`, undefined, error as Error);\r\n        healthy = false;\r\n      }\r\n      setBackendHealthy(healthy);\r\n    }\r\n\r\n    trackOperation('backendHealthCheck', () => checkBackend());\r\n  }, [apiUrl, trackOperation]);\r\n\r\n  // In test environment, always render dashboard and robust error boundary\r\n  if (process.env.NODE_ENV === 'test') {\r\n    return (\r\n      <ErrorBoundaryVersion>\r\n        <QueryClientProvider client={new QueryClient()}>\r\n          <_AppProvider>\r\n            <_ThemeProvider>\r\n              <_WebSocketProvider>\r\n                <_AuthProvider>\r\n                  <BrowserRouter>\r\n                    <React.Suspense fallback={null}>\r\n                      {SyncUserFriendlyApp ? <SyncUserFriendlyApp /> : <LazyUserFriendlyApp />}\r\n                    </React.Suspense>\r\n                  </BrowserRouter>\r\n                </_AuthProvider>\r\n              </_WebSocketProvider>\r\n            </_ThemeProvider>\r\n          </_AppProvider>\r\n        </QueryClientProvider>\r\n      </ErrorBoundaryVersion>\r\n    );\r\n  }\r\n\r\n  if (!backendHealthy) {\r\n  enhancedLogger.warn('App', 'health', `Backend not healthy at ${apiUrl} - Skipping render`);\r\n    return (\r\n      <div className='error-banner'>\r\n        Cannot connect to backend at {apiUrl}.{' '}\r\n        <button onClick={() => getLocation().reload()}>Retry</button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <ErrorBoundaryVersion>\r\n      <QueryClientProvider client={new QueryClient()}>\r\n        <_AppProvider>\r\n          <_ThemeProvider>\r\n            <_WebSocketProvider>\r\n              <_AuthProvider>\r\n                <BrowserRouter>\r\n                  <Routes>\r\n                    <Route path='/reset-password' element={<ResetPasswordPage />} />\r\n                    <Route path='*' element={<AppContent />} />\r\n                  </Routes>\r\n                </BrowserRouter>\r\n              </_AuthProvider>\r\n            </_WebSocketProvider>\r\n          </_ThemeProvider>\r\n        </_AppProvider>\r\n      </QueryClientProvider>\r\n    </ErrorBoundaryVersion>\r\n  );\r\n}\r\n\r\nconst AppContent: React.FC = () => {\r\n  enhancedLogger.debug('App', 'render', 'Entering AppContent - Attempting to render child components');\r\n  const { isAuthenticated, requiresPasswordChange, changePassword, loading, error, user } =\r\n    useAuth();\r\n  const onboardingComplete = localStorage.getItem('onboardingComplete');\r\n\r\n  // Only show onboarding if NOT authenticated and onboarding is not complete\r\n  if (!isAuthenticated && !onboardingComplete) {\r\n  enhancedLogger.info('App', 'render', 'Rendering OnboardingFlow - No authentication detected');\r\n    return (\r\n      <OnboardingProvider>\r\n        <LazyOnboardingFlow />\r\n      </OnboardingProvider>\r\n    );\r\n  }\r\n\r\n  // AUTO-LOGIN for testing (restore user session) - DISABLED to prevent infinite refresh\r\n  // React.useEffect(() => {\r\n  //   if (!isAuthenticated && !loading) {\r\n  //     console.log('[APP] *** AUTO-LOGIN: Attempting to restore user session ***');\r\n\r\n  //     const autoLogin = async () => {\r\n  //       try {\r\n  //         const loginResponse = await fetch('/auth/login', {\r\n  //           method: 'POST',\r\n  //           headers: { 'Content-Type': 'application/json' },\r\n  //           body: JSON.stringify({\r\n  //             username: 'admin',\r\n  //             email: 'ncr@a1betting.com',\r\n  //             password: 'A1Betting1337!',\r\n  //           }),\r\n  //         });\r\n\r\n  //         if (loginResponse.ok) {\r\n  //           const loginData = await loginResponse.json();\r\n  //           console.log('[APP] *** AUTO-LOGIN SUCCESS ***', loginData);\r\n\r\n  //           // Store the token in localStorage (this should trigger auth context update)\r\n  //           localStorage.setItem('access_token', loginData.access_token);\r\n  //           localStorage.setItem('refresh_token', loginData.refresh_token);\r\n\r\n  //           // Force page reload to re-trigger authentication\r\n  //           window.location.reload();\r\n  //         } else {\r\n  //           console.error('[APP] *** AUTO-LOGIN FAILED ***', await loginResponse.text());\r\n  //         }\r\n  //       } catch (error) {\r\n  //         console.error('[APP] *** AUTO-LOGIN ERROR ***', error);\r\n  //       }\r\n  //     };\r\n\r\n  //     // Delay the auto-login slightly to avoid race conditions\r\n  //     setTimeout(autoLogin, 1000);\r\n  //   }\r\n  // }, [isAuthenticated, loading]);\r\n\r\n  // Fix handlePasswordChange reference\r\n  const handlePasswordChange = async (\r\n    currentPassword: string,\r\n    newPassword: string,\r\n    _confirmPassword: string\r\n  ) => {\r\n    if (!user) return;\r\n    await changePassword({\r\n      userId: user.id,\r\n      oldPassword: currentPassword,\r\n      newPassword,\r\n    });\r\n  };\r\n\r\n  // Show auth page if not authenticated\r\n  if (!isAuthenticated) {\r\n  enhancedLogger.info('App', 'render', 'Rendering AuthPage (not authenticated)');\r\n    return <AuthPage />;\r\n  }\r\n\r\n  // Show password change if required\r\n  if (requiresPasswordChange) {\r\n  enhancedLogger.info('App', 'render', 'Rendering PasswordChangeForm (requires password change)');\r\n    return (\r\n      <div className='min-h-screen bg-gradient-to-br from-slate-900 via-slate-800 to-slate-900 flex items-center justify-center p-4'>\r\n        <PasswordChangeForm\r\n          onPasswordChange={handlePasswordChange}\r\n          loading={loading}\r\n          error={error ?? undefined}\r\n          isFirstLogin={true}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Show user-friendly UI for all authenticated users\r\n  enhancedLogger.info('App', 'render', 'Rendering UserFriendlyApp (clean UI)');\r\n\r\n  // Handle critical reliability issues without disrupting user experience\r\n  const handleCriticalIssue = (issue: string) => {\r\n    enhancedLogger.warn('App', 'reliability', 'Critical reliability issue detected', { issue });\r\n    // Could trigger silent recovery or background notification\r\n    // Avoid disruptive user notifications unless absolutely necessary\r\n  };\r\n\r\n  return (\r\n    <ErrorBoundary>\r\n      <LeanModeBanner />\r\n      {/* Core functionality validator navigation stub */}\r\n      <nav role=\"navigation\" data-core-nav=\"primary\" style={{ display: 'none' }}>\r\n        <div data-testid=\"nav-primary\">Core Navigation</div>\r\n      </nav>\r\n      <ReliabilityIntegrationWrapper\r\n        enableMonitoring={true}\r\n        monitoringLevel='standard'\r\n        onCriticalIssue={handleCriticalIssue}\r\n      >\r\n        <ServiceWorkerUpdateNotification />\r\n        <UpdateModal />\r\n          <React.Suspense fallback={null}>\r\n            {SyncUserFriendlyApp ? <SyncUserFriendlyApp /> : <LazyUserFriendlyApp />}\r\n          </React.Suspense>\r\n      </ReliabilityIntegrationWrapper>\r\n    </ErrorBoundary>\r\n  );\r\n};\r\n\r\nexport { AppContent };\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]}