{"version":3,"names":["_react","require","useOptimizedPerformance","fetchFn","config","enableCaching","enableDeferredUpdates","debounceMs","maxRetries","isPending","startTransitionHook","useTransition","state","setState","useState","data","loading","error","cached","lastUpdated","metrics","setMetrics","renderTime","dataFetchTime","cacheHitRate","errorRate","totalRequests","cache","useMemo","Map","deferredData","useDeferredValue","optimizedFetch","useCallback","useCache","startTime","performance","now","cacheKey","prev","has","get","isStale","Date","timestamp","fetchTime","set","errorMessage","Error","message","debouncedRefetch","timeoutId","clearTimeout","setTimeout","retryFetch","retryCount","delay","Math","pow","Promise","resolve","clearCache","clear","prefetch","catch","hasInitialized","setHasInitialized","useEffect","refetch","startTransition","useOptimizedList","items","itemHeight","overscan","enableVirtualization","scrollTop","setScrollTop","containerHeight","setContainerHeight","deferredScrollTop","visibleRange","start","end","length","max","floor","visibleCount","ceil","min","visibleItems","slice","map","item","index","style","position","top","height","width","undefined","containerProps","overflow","onScroll","e","currentTarget","innerProps","totalItems","useOptimizedSync","key","interval","intervalId","setInterval","clearInterval","handleVisibilityChange","document","hidden","addEventListener","removeEventListener","lastSync"],"sources":["useOptimizedPerformance.ts"],"sourcesContent":["import { useState, useEffect, useCallback, useMemo, useDeferredValue, useTransition } from 'react';\r\n\r\ninterface PerformanceConfig {\r\n  enableVirtualization?: boolean;\r\n  enableCaching?: boolean;\r\n  enableDeferredUpdates?: boolean;\r\n  debounceMs?: number;\r\n  maxRetries?: number;\r\n}\r\n\r\ninterface PerformanceMetrics {\r\n  renderTime: number;\r\n  dataFetchTime: number;\r\n  cacheHitRate: number;\r\n  errorRate: number;\r\n  totalRequests: number;\r\n}\r\n\r\ninterface OptimizedState<T> {\r\n  data: T | null;\r\n  loading: boolean;\r\n  error: string | null;\r\n  cached: boolean;\r\n  lastUpdated: Date | null;\r\n}\r\n\r\nexport function useOptimizedPerformance<T>(\r\n  fetchFn: () => Promise<T>,\r\n  config: PerformanceConfig = {}\r\n) {\r\n  const {\r\n    enableCaching = true,\r\n    enableDeferredUpdates = true,\r\n    debounceMs = 300,\r\n    maxRetries = 3\r\n  } = config;\r\n\r\n  // React 19 concurrent features\r\n  const [isPending, startTransitionHook] = useTransition();\r\n  \r\n  // State management\r\n  const [state, setState] = useState<OptimizedState<T>>({\r\n    data: null,\r\n    loading: false,\r\n    error: null,\r\n    cached: false,\r\n    lastUpdated: null\r\n  });\r\n\r\n  // Performance metrics\r\n  const [metrics, setMetrics] = useState<PerformanceMetrics>({\r\n    renderTime: 0,\r\n    dataFetchTime: 0,\r\n    cacheHitRate: 0,\r\n    errorRate: 0,\r\n    totalRequests: 0\r\n  });\r\n\r\n  // Memory cache for performance\r\n  const cache = useMemo(() => new Map<string, { data: T; timestamp: number }>(), []);\r\n\r\n  // Deferred value for React 19 optimization\r\n  const deferredData = useDeferredValue(state.data);\r\n\r\n  // Optimized fetch function with caching and error handling\r\n  const optimizedFetch = useCallback(async (useCache = enableCaching) => {\r\n    const startTime = performance.now();\r\n    const cacheKey = 'fetch-data'; // Stable cache key\r\n\r\n    try {\r\n      setState(prev => ({ ...prev, loading: true, error: null }));\r\n\r\n      // Check cache first if enabled\r\n      if (useCache && cache.has(cacheKey)) {\r\n        const cached = cache.get(cacheKey)!;\r\n        const isStale = Date.now() - cached.timestamp > 5 * 60 * 1000; // 5 minutes\r\n\r\n        if (!isStale) {\r\n          const fetchTime = performance.now() - startTime;\r\n          \r\n          if (enableDeferredUpdates) {\r\n            startTransitionHook(() => {\r\n              setState({\r\n                data: cached.data,\r\n                loading: false,\r\n                error: null,\r\n                cached: true,\r\n                lastUpdated: new Date(cached.timestamp)\r\n              });\r\n            });\r\n          } else {\r\n            setState({\r\n              data: cached.data,\r\n              loading: false,\r\n              error: null,\r\n              cached: true,\r\n              lastUpdated: new Date(cached.timestamp)\r\n            });\r\n          }\r\n\r\n          // Update metrics\r\n          setMetrics(prev => ({\r\n            ...prev,\r\n            dataFetchTime: fetchTime,\r\n            cacheHitRate: (prev.cacheHitRate * prev.totalRequests + 100) / (prev.totalRequests + 1),\r\n            totalRequests: prev.totalRequests + 1\r\n          }));\r\n\r\n          return cached.data;\r\n        }\r\n      }\r\n\r\n      // Fetch fresh data\r\n      const data = await fetchFn();\r\n      const fetchTime = performance.now() - startTime;\r\n\r\n      // Cache the result\r\n      if (enableCaching) {\r\n        cache.set(cacheKey, { data, timestamp: Date.now() });\r\n      }\r\n\r\n      // Update state with transition for React 19 optimization\r\n      if (enableDeferredUpdates) {\r\n        startTransitionHook(() => {\r\n          setState({\r\n            data,\r\n            loading: false,\r\n            error: null,\r\n            cached: false,\r\n            lastUpdated: new Date()\r\n          });\r\n        });\r\n      } else {\r\n        setState({\r\n          data,\r\n          loading: false,\r\n          error: null,\r\n          cached: false,\r\n          lastUpdated: new Date()\r\n        });\r\n      }\r\n\r\n      // Update metrics\r\n      setMetrics(prev => ({\r\n        ...prev,\r\n        dataFetchTime: fetchTime,\r\n        cacheHitRate: useCache && cache.has(cacheKey) \r\n          ? prev.cacheHitRate \r\n          : (prev.cacheHitRate * prev.totalRequests) / (prev.totalRequests + 1),\r\n        totalRequests: prev.totalRequests + 1\r\n      }));\r\n\r\n      return data;\r\n\r\n    } catch (error) {\r\n      const fetchTime = performance.now() - startTime;\r\n      const errorMessage = error instanceof Error ? error.message : 'Unknown error';\r\n\r\n      setState(prev => ({\r\n        ...prev,\r\n        loading: false,\r\n        error: errorMessage,\r\n        cached: false\r\n      }));\r\n\r\n      // Update error metrics\r\n      setMetrics(prev => ({\r\n        ...prev,\r\n        dataFetchTime: fetchTime,\r\n        errorRate: (prev.errorRate * prev.totalRequests + 100) / (prev.totalRequests + 1),\r\n        totalRequests: prev.totalRequests + 1\r\n      }));\r\n\r\n      throw error;\r\n    }\r\n  }, [enableCaching, enableDeferredUpdates, cache, fetchFn]);\r\n\r\n  // Debounced refetch for performance\r\n  const debouncedRefetch = useMemo(() => {\r\n    let timeoutId: NodeJS.Timeout;\r\n    \r\n    return (useCache = enableCaching) => {\r\n      clearTimeout(timeoutId);\r\n      timeoutId = setTimeout(() => {\r\n        optimizedFetch(useCache);\r\n      }, debounceMs);\r\n    };\r\n  }, [optimizedFetch, debounceMs, enableCaching]);\r\n\r\n  // Retry mechanism with exponential backoff\r\n  const retryFetch = useCallback(async (retryCount = 0) => {\r\n    try {\r\n      return await optimizedFetch(false); // Don't use cache on retry\r\n    } catch (error) {\r\n      if (retryCount < maxRetries) {\r\n        const delay = Math.pow(2, retryCount) * 1000; // Exponential backoff\r\n        await new Promise(resolve => setTimeout(resolve, delay));\r\n        return retryFetch(retryCount + 1);\r\n      }\r\n      throw error;\r\n    }\r\n  }, [optimizedFetch, maxRetries]);\r\n\r\n  // Clear cache function\r\n  const clearCache = useCallback(() => {\r\n    cache.clear();\r\n  }, [cache]);\r\n\r\n  // Prefetch function for performance optimization\r\n  const prefetch = useCallback(() => {\r\n    // Don't set loading state for prefetch\r\n    optimizedFetch(enableCaching).catch(() => {\r\n      // Silently fail prefetch\r\n    });\r\n  }, [optimizedFetch, enableCaching]);\r\n\r\n  // Initial fetch - use a flag to prevent multiple calls\r\n  const [hasInitialized, setHasInitialized] = useState(false);\r\n  \r\n  useEffect(() => {\r\n    if (!hasInitialized) {\r\n      setHasInitialized(true);\r\n      optimizedFetch().catch(() => {\r\n        // Handle error silently for initial fetch\r\n      });\r\n    }\r\n  }, [hasInitialized, optimizedFetch]);\r\n\r\n  return {\r\n    // State\r\n    data: enableDeferredUpdates ? deferredData : state.data,\r\n    loading: state.loading || isPending,\r\n    error: state.error,\r\n    cached: state.cached,\r\n    lastUpdated: state.lastUpdated,\r\n    \r\n    // Actions\r\n    refetch: optimizedFetch,\r\n    debouncedRefetch,\r\n    retryFetch,\r\n    clearCache,\r\n    prefetch,\r\n    \r\n    // Performance\r\n    metrics,\r\n    \r\n    // React 19 features\r\n    isPending,\r\n    startTransition: startTransitionHook\r\n  };\r\n}\r\n\r\n// Hook for optimized list rendering with virtualization\r\nexport function useOptimizedList<T>(\r\n  items: T[],\r\n  config: { itemHeight?: number; overscan?: number; enableVirtualization?: boolean } = {}\r\n) {\r\n  const { itemHeight = 50, overscan = 5, enableVirtualization = true } = config;\r\n  \r\n  const [scrollTop, setScrollTop] = useState(0);\r\n  const [containerHeight, setContainerHeight] = useState(400);\r\n\r\n  // Deferred value for smooth scrolling\r\n  const deferredScrollTop = useDeferredValue(scrollTop);\r\n  \r\n  // Calculate visible range for virtualization\r\n  const visibleRange = useMemo(() => {\r\n    if (!enableVirtualization) {\r\n      return { start: 0, end: items.length };\r\n    }\r\n\r\n    const start = Math.max(0, Math.floor(deferredScrollTop / itemHeight) - overscan);\r\n    const visibleCount = Math.ceil(containerHeight / itemHeight);\r\n    const end = Math.min(items.length, start + visibleCount + overscan * 2);\r\n    \r\n    return { start, end };\r\n  }, [deferredScrollTop, containerHeight, itemHeight, overscan, items.length, enableVirtualization]);\r\n\r\n  // Get visible items\r\n  const visibleItems = useMemo(() => {\r\n    return items.slice(visibleRange.start, visibleRange.end).map((item, index) => ({\r\n      item,\r\n      index: index + visibleRange.start,\r\n      style: enableVirtualization ? {\r\n        position: 'absolute' as const,\r\n        top: (index + visibleRange.start) * itemHeight,\r\n        height: itemHeight,\r\n        width: '100%'\r\n      } : undefined\r\n    }));\r\n  }, [items, visibleRange, itemHeight, enableVirtualization]);\r\n\r\n  // Container props for virtualization\r\n  const containerProps = useMemo(() => ({\r\n    style: enableVirtualization ? {\r\n      height: containerHeight,\r\n      overflow: 'auto' as const,\r\n      position: 'relative' as const\r\n    } : undefined,\r\n    onScroll: enableVirtualization ? (e: React.UIEvent<HTMLDivElement>) => {\r\n      setScrollTop(e.currentTarget.scrollTop);\r\n    } : undefined\r\n  }), [containerHeight, enableVirtualization]);\r\n\r\n  // Inner container props for total height\r\n  const innerProps = useMemo(() => ({\r\n    style: enableVirtualization ? {\r\n      height: items.length * itemHeight,\r\n      position: 'relative' as const\r\n    } : undefined\r\n  }), [items.length, itemHeight, enableVirtualization]);\r\n\r\n  return {\r\n    visibleItems,\r\n    containerProps,\r\n    innerProps,\r\n    setContainerHeight,\r\n    totalItems: items.length,\r\n    visibleCount: visibleRange.end - visibleRange.start\r\n  };\r\n}\r\n\r\n// Hook for optimized data synchronization\r\nexport function useOptimizedSync<T>(\r\n  key: string,\r\n  fetchFn: () => Promise<T>,\r\n  interval = 30000 // 30 seconds default\r\n) {\r\n  const {\r\n    data,\r\n    loading,\r\n    error,\r\n    refetch,\r\n    metrics,\r\n    cached\r\n  } = useOptimizedPerformance(fetchFn, {\r\n    enableCaching: true,\r\n    enableDeferredUpdates: true\r\n  });\r\n\r\n  // Auto-sync with interval\r\n  useEffect(() => {\r\n    const intervalId = setInterval(() => {\r\n      refetch(false); // Force fresh fetch\r\n    }, interval);\r\n\r\n    return () => clearInterval(intervalId);\r\n  }, [refetch, interval]);\r\n\r\n  // Sync on page visibility change\r\n  useEffect(() => {\r\n    const handleVisibilityChange = () => {\r\n      if (!document.hidden) {\r\n        refetch();\r\n      }\r\n    };\r\n\r\n    document.addEventListener('visibilitychange', handleVisibilityChange);\r\n    return () => document.removeEventListener('visibilitychange', handleVisibilityChange);\r\n  }, [refetch]);\r\n\r\n  return {\r\n    data,\r\n    loading,\r\n    error,\r\n    refetch,\r\n    metrics,\r\n    cached,\r\n    lastSync: data ? new Date() : null\r\n  };\r\n}\r\n"],"mappings":"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","ignoreList":[]}