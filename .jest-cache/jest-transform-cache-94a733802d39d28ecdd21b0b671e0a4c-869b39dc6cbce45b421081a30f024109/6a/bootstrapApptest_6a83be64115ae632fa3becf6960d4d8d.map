{"version":3,"names":["_getJestObj","mock","getRuntimeEnv","mode","isDev","isProd","isTest","source","getMode","__esModule","logger","mockLogger","_authService","mockAuthService","reliabilityMonitoringOrchestrator","mockReliabilityOrchestrator","webVitalsService","mockWebVitalsService","_bootstrapApp","require","_env","jest","info","fn","debug","error","warn","isAuthenticated","mockReturnValue","getUser","startMonitoring","mockResolvedValue","init","window","location","search","reload","href","Object","defineProperty","value","getItem","setItem","writable","now","userAgent","describe","beforeEach","clearAllMocks","__resetBootstrapForTesting","__A1_AUTH_RESTORED","process","NODE_ENV","global","importMetaEnv","MODE","it","env","expect","toBe","toHaveProperty","isBootstrapped","result","bootstrapApp","alreadyBootstrapped","environment","durationMs","toBeGreaterThan","services","errorHandlersRegistered","authRestored","webVitalsInitialized","toHaveBeenCalledWith","stringContaining","objectContaining","firstResult","secondResult","not","toHaveBeenCalled","force","reliabilityStarted","skipAuth","skipReliability","skipWebVitals","key","mockUser","id","email","role","userId","toBeUndefined","any","Error","mockRejectedValue","rejects","toThrow","message","stack","mockImplementation","errorCall","calls","timestamp","toMatch","toFixed","String"],"sources":["bootstrapApp.test.ts"],"sourcesContent":["/**\r\n * Bootstrap App Tests - Idempotency & Environment Resolution\r\n * \r\n * Tests ensure bootstrap only runs once even if called multiple times,\r\n * environment is correctly detected, and all services are properly initialized.\r\n */\r\n\r\n// Mock the environment module before importing\r\njest.mock('../env', () => ({\r\n  getRuntimeEnv: () => ({\r\n    mode: 'test' as const,\r\n    isDev: false,\r\n    isProd: false,\r\n    isTest: true,\r\n    source: 'node' as const,\r\n  }),\r\n  isDev: () => false,\r\n  isProd: () => false,\r\n  isTest: () => true,\r\n  getMode: () => 'test' as const,\r\n}));\r\n\r\n// Mock the logger to capture calls\r\nconst mockLogger = {\r\n  info: jest.fn(),\r\n  debug: jest.fn(),\r\n  error: jest.fn(),\r\n  warn: jest.fn(),\r\n};\r\n\r\n// Mock dependencies with correct paths\r\njest.mock('../../utils/logger', () => ({\r\n  __esModule: true,\r\n  logger: mockLogger,\r\n}));\r\n\r\n// Also mock the TS-path aliased import used in some modules\r\njest.mock('src/utils/logger', () => ({\r\n  __esModule: true,\r\n  logger: mockLogger,\r\n}));\r\n\r\n// Mock auth service\r\nconst mockAuthService = {\r\n  isAuthenticated: jest.fn().mockReturnValue(false),\r\n  getUser: jest.fn().mockReturnValue(null),\r\n};\r\n\r\njest.mock('../../services/authService', () => ({\r\n  _authService: mockAuthService,\r\n}));\r\n\r\n// Mock reliability orchestrator\r\nconst mockReliabilityOrchestrator = {\r\n  startMonitoring: jest.fn().mockResolvedValue(void 0),\r\n};\r\n\r\njest.mock('../../services/reliabilityMonitoringOrchestrator', () => ({\r\n  reliabilityMonitoringOrchestrator: mockReliabilityOrchestrator,\r\n}));\r\n\r\n// Mock web vitals service\r\nconst mockWebVitalsService = {\r\n  init: jest.fn(),\r\n};\r\n\r\njest.mock('../../services/webVitalsService', () => ({\r\n  webVitalsService: mockWebVitalsService,\r\n}));\r\n\r\n// Setup DOM mocks without causing navigation\r\ndelete (window as any).location;\r\n(window as any).location = {\r\n  search: '',\r\n  reload: jest.fn(),\r\n  href: 'http://localhost:3000'\r\n};\r\n\r\nObject.defineProperty(window, 'localStorage', {\r\n  value: {\r\n    getItem: jest.fn().mockReturnValue(null),\r\n    setItem: jest.fn(),\r\n  },\r\n  writable: true,\r\n});\r\n\r\n// Mock performance API\r\nObject.defineProperty(window, 'performance', {\r\n  value: {\r\n    now: jest.fn().mockReturnValue(100)\r\n  },\r\n  writable: true\r\n});\r\n\r\nimport { bootstrapApp, isBootstrapped, __resetBootstrapForTesting } from '../bootstrapApp';\r\nimport { getRuntimeEnv } from '../env';\r\n\r\nObject.defineProperty(window, 'navigator', {\r\n  value: {\r\n    userAgent: 'test-user-agent',\r\n  },\r\n  writable: true,\r\n});\r\n\r\ndescribe('Bootstrap App', () => {\r\n  beforeEach(() => {\r\n    // Reset all mocks and bootstrap state\r\n    jest.clearAllMocks();\r\n    __resetBootstrapForTesting();\r\n    \r\n    // Clear any global state\r\n    delete (window as any).__A1_AUTH_RESTORED;\r\n    \r\n    // Reset environment mocks\r\n    Object.defineProperty(process, 'env', {\r\n      value: { NODE_ENV: 'test' },\r\n      writable: true,\r\n    });\r\n    \r\n    // Mock import.meta.env\r\n    (global as any).importMetaEnv = { MODE: 'test' };\r\n  });\r\n\r\n  describe('Environment Detection', () => {\r\n    it('should correctly detect test environment', () => {\r\n      const env = getRuntimeEnv();\r\n      expect(env.mode).toBe('test');\r\n      expect(env.isTest).toBe(true);\r\n      expect(env.isDev).toBe(false);\r\n      expect(env.isProd).toBe(false);\r\n    });\r\n\r\n    it('should use mocked environment values', () => {\r\n      // Our mock returns test mode - verify it works\r\n      const env = getRuntimeEnv();\r\n      expect(env.mode).toBe('test');\r\n      expect(env.source).toBe('node');\r\n    });\r\n\r\n    it('should have consistent environment interface', () => {\r\n      // Verify all expected properties exist\r\n      const env = getRuntimeEnv();\r\n      expect(env).toHaveProperty('mode');\r\n      expect(env).toHaveProperty('isDev');\r\n      expect(env).toHaveProperty('isProd');\r\n      expect(env).toHaveProperty('isTest');\r\n      expect(env).toHaveProperty('source');\r\n    });\r\n  });\r\n\r\n  describe('Bootstrap Idempotency', () => {\r\n    it('should not be bootstrapped initially', () => {\r\n      expect(isBootstrapped()).toBe(false);\r\n    });\r\n\r\n    it('should complete bootstrap successfully on first call', async () => {\r\n      const result = await bootstrapApp();\r\n\r\n      expect(result.alreadyBootstrapped).toBe(false);\r\n      expect(result.environment.mode).toBe('test');\r\n      expect(result.durationMs).toBeGreaterThan(0);\r\n      expect(result.services.errorHandlersRegistered).toBe(true);\r\n      expect(result.services.authRestored).toBe(true);\r\n      expect(result.services.webVitalsInitialized).toBe(true);\r\n      \r\n      // Should be marked as bootstrapped\r\n      expect(isBootstrapped()).toBe(true);\r\n      \r\n      // Should log completion\r\n      expect(mockLogger.info).toHaveBeenCalledWith(\r\n        expect.stringContaining('Bootstrap ✅ Completed'),\r\n        expect.objectContaining({\r\n          environment: 'test',\r\n          services: result.services,\r\n        }),\r\n        'Bootstrap'\r\n      );\r\n    });\r\n\r\n    it('should skip duplicate initialization on second call', async () => {\r\n      // First bootstrap\r\n      const firstResult = await bootstrapApp();\r\n      expect(firstResult.alreadyBootstrapped).toBe(false);\r\n      \r\n      // Clear mock calls to isolate second call\r\n      jest.clearAllMocks();\r\n      \r\n      // Second bootstrap (should be skipped)\r\n      const secondResult = await bootstrapApp();\r\n      \r\n      expect(secondResult.alreadyBootstrapped).toBe(true);\r\n      expect(secondResult.environment.mode).toBe('test');\r\n      expect(secondResult.durationMs).toBeGreaterThan(0);\r\n      \r\n      // Services should not be called again\r\n      expect(mockReliabilityOrchestrator.startMonitoring).not.toHaveBeenCalled();\r\n      expect(mockWebVitalsService.init).not.toHaveBeenCalled();\r\n      \r\n      // Should log skip message\r\n      expect(mockLogger.debug).toHaveBeenCalledWith(\r\n        'Bootstrap skipped - already initialized',\r\n        expect.objectContaining({\r\n          environment: 'test',\r\n        }),\r\n        'Bootstrap'\r\n      );\r\n    });\r\n\r\n    it('should reinitialize when force option is used', async () => {\r\n      // First bootstrap\r\n      await bootstrapApp();\r\n      jest.clearAllMocks();\r\n      \r\n      // Force second bootstrap\r\n      const result = await bootstrapApp({ force: true });\r\n      \r\n      expect(result.alreadyBootstrapped).toBe(false);\r\n      \r\n      // Services should be called again\r\n      expect(mockReliabilityOrchestrator.startMonitoring).toHaveBeenCalled();\r\n      expect(mockWebVitalsService.init).toHaveBeenCalled();\r\n    });\r\n  });\r\n\r\n  describe('Service Initialization', () => {\r\n    it('should initialize all services by default', async () => {\r\n      const result = await bootstrapApp();\r\n\r\n      expect(result.services.errorHandlersRegistered).toBe(true);\r\n      expect(result.services.authRestored).toBe(true);\r\n      expect(result.services.reliabilityStarted).toBe(true);\r\n      expect(result.services.webVitalsInitialized).toBe(true);\r\n      \r\n      expect(mockReliabilityOrchestrator.startMonitoring).toHaveBeenCalled();\r\n      expect(mockWebVitalsService.init).toHaveBeenCalled();\r\n    });\r\n\r\n    it('should skip auth when skipAuth option is used', async () => {\r\n      const result = await bootstrapApp({ skipAuth: true });\r\n\r\n      expect(result.services.authRestored).toBe(false);\r\n      expect(result.services.errorHandlersRegistered).toBe(true);\r\n      expect(result.services.webVitalsInitialized).toBe(true);\r\n    });\r\n\r\n    it('should skip reliability when skipReliability option is used', async () => {\r\n      const result = await bootstrapApp({ skipReliability: true });\r\n\r\n      expect(result.services.reliabilityStarted).toBe(false);\r\n      expect(mockReliabilityOrchestrator.startMonitoring).not.toHaveBeenCalled();\r\n    });\r\n\r\n    it('should skip web vitals when skipWebVitals option is used', async () => {\r\n      const result = await bootstrapApp({ skipWebVitals: true });\r\n\r\n      expect(result.services.webVitalsInitialized).toBe(false);\r\n      expect(mockWebVitalsService.init).not.toHaveBeenCalled();\r\n    });\r\n\r\n    it('should skip reliability in lean mode', async () => {\r\n      // Mock lean mode\r\n      Object.defineProperty(window, 'localStorage', {\r\n        value: {\r\n          getItem: jest.fn((key: string) => key === 'DEV_LEAN_MODE' ? 'true' : null),\r\n        },\r\n        writable: true,\r\n      });\r\n\r\n      const result = await bootstrapApp();\r\n\r\n      expect(result.services.reliabilityStarted).toBe(false);\r\n      expect(mockReliabilityOrchestrator.startMonitoring).not.toHaveBeenCalled();\r\n    });\r\n  });\r\n\r\n  describe('Authentication Coordination', () => {\r\n    it('should restore authenticated user and set global flag', async () => {\r\n      const mockUser = {\r\n        id: '123',\r\n        email: 'test@example.com',\r\n        role: 'user',\r\n      };\r\n\r\n      mockAuthService.isAuthenticated.mockReturnValue(true);\r\n      mockAuthService.getUser.mockReturnValue(mockUser);\r\n\r\n      const result = await bootstrapApp();\r\n\r\n      expect(result.services.authRestored).toBe(true);\r\n      expect((window as any).__A1_AUTH_RESTORED).toBe(true);\r\n      \r\n      expect(mockLogger.info).toHaveBeenCalledWith(\r\n        '🔐 Authentication restored',\r\n        expect.objectContaining({\r\n          email: mockUser.email,\r\n          role: mockUser.role,\r\n          userId: mockUser.id,\r\n        }),\r\n        'Auth'\r\n      );\r\n    });\r\n\r\n    it('should not restore auth when user is not authenticated', async () => {\r\n      mockAuthService.isAuthenticated.mockReturnValue(false);\r\n\r\n      const result = await bootstrapApp();\r\n\r\n      expect(result.services.authRestored).toBe(true); // Process completed\r\n      expect((window as any).__A1_AUTH_RESTORED).toBeUndefined();\r\n      \r\n      // Should not log auth restoration\r\n      expect(mockLogger.info).not.toHaveBeenCalledWith(\r\n        expect.stringContaining('Authentication restored'),\r\n        expect.any(Object),\r\n        'Auth'\r\n      );\r\n    });\r\n  });\r\n\r\n  describe('Error Handling', () => {\r\n    it('should handle initialization failures gracefully', async () => {\r\n      const error = new Error('Service initialization failed');\r\n      mockReliabilityOrchestrator.startMonitoring.mockRejectedValue(error);\r\n\r\n      await expect(bootstrapApp()).rejects.toThrow('Service initialization failed');\r\n      \r\n      expect(mockLogger.error).toHaveBeenCalledWith(\r\n        'Bootstrap failed',\r\n        expect.objectContaining({\r\n          error: error.message,\r\n          stack: error.stack,\r\n          environment: 'test',\r\n        }),\r\n        'Bootstrap'\r\n      );\r\n    });\r\n\r\n    it('should include timing information in error logs', async () => {\r\n      const error = new Error('Test error');\r\n      mockWebVitalsService.init.mockImplementation(() => {\r\n        throw error;\r\n      });\r\n\r\n      await expect(bootstrapApp()).rejects.toThrow('Test error');\r\n      \r\n      const errorCall = mockLogger.error.mock.calls[0];\r\n      expect(errorCall[1]).toHaveProperty('durationMs');\r\n      expect(errorCall[1].durationMs).toBeGreaterThan(0);\r\n    });\r\n  });\r\n\r\n  describe('Performance Tracking', () => {\r\n    it('should track bootstrap timing', async () => {\r\n      const result = await bootstrapApp();\r\n\r\n      expect(result.durationMs).toBeGreaterThan(0);\r\n      expect(result.timestamp).toMatch(/^\\d{4}-\\d{2}-\\d{2}T/); // ISO format\r\n      \r\n      // Should log timing information\r\n      expect(mockLogger.info).toHaveBeenCalledWith(\r\n        expect.stringContaining(`Completed in ${result.durationMs.toFixed(1)}ms`),\r\n        expect.any(Object),\r\n        'Bootstrap'\r\n      );\r\n    });\r\n\r\n    it('should include environment information in logs', async () => {\r\n      await bootstrapApp();\r\n\r\n      expect(mockLogger.info).toHaveBeenCalledWith(\r\n        'A1Betting Platform Loading - Test Mode',\r\n        expect.objectContaining({\r\n          environment: 'test',\r\n          source: expect.any(String),\r\n          timestamp: expect.any(String),\r\n          userAgent: 'test-user-agent',\r\n          force: false,\r\n        }),\r\n        'Bootstrap'\r\n      );\r\n    });\r\n  });\r\n});"],"mappings":"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","ignoreList":[]}