{"version":3,"names":["UnifiedCache","constructor","cache","Map","defaultTTL","getInstance","instance","set","key","value","ttl","_expiry","Date","now","expiry","get","_item","isExpired","delete","has","clear","item","getSize","size","getKeys","Array","from","keys","setDefaultTTL","exports","_UnifiedCache","_unifiedCache"],"sources":["UnifiedCache.ts"],"sourcesContent":["interface CacheItem<T> {\r\n  value: T;\r\n  expiry: number;\r\n}\r\n\r\nexport class UnifiedCache {\r\n  private static instance: UnifiedCache;\r\n  private cache: Map<string, CacheItem<unknown>> = new Map();\r\n  private defaultTTL: number = 300000; // 5 minutes - Fixed variable name issues\r\n\r\n  private constructor() {}\r\n\r\n  static getInstance(): UnifiedCache {\r\n    if (!UnifiedCache.instance) {\r\n      UnifiedCache.instance = new UnifiedCache();\r\n    }\r\n    return UnifiedCache.instance;\r\n  }\r\n\r\n  set<T>(key: string, value: T, ttl?: number): void {\r\n    const _expiry = Date.now() + (ttl || this.defaultTTL);\r\n    this.cache.set(key, { value, expiry: _expiry });\r\n  }\r\n\r\n  get<T>(key: string): T | null {\r\n    const _item = this.cache.get(key);\r\n    if (!_item) return null;\r\n\r\n    if (this.isExpired(_item)) {\r\n      this.cache.delete(key);\r\n      return null;\r\n    }\r\n\r\n  return _item.value as T;\r\n  }\r\n\r\n  has(key: string): boolean {\r\n    const _item = this.cache.get(key);\r\n    if (!_item) return false;\r\n\r\n    if (this.isExpired(_item)) {\r\n      this.cache.delete(key);\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  delete(key: string): void {\r\n    this.cache.delete(key);\r\n  }\r\n\r\n  clear(): void {\r\n    this.cache.clear();\r\n  }\r\n\r\n  private isExpired(item: CacheItem<unknown>): boolean {\r\n    return Date.now() > item.expiry;\r\n  }\r\n\r\n  getSize(): number {\r\n    return this.cache.size;\r\n  }\r\n\r\n  getKeys(): string[] {\r\n    return Array.from(this.cache.keys());\r\n  }\r\n\r\n  setDefaultTTL(ttl: number): void {\r\n    this.defaultTTL = ttl;\r\n  }\r\n}\r\n\r\nexport const _unifiedCache = UnifiedCache.getInstance();\r\n"],"mappings":";;;;;;;AAKO,MAAMA,YAAY,CAAC;EAGa;;EAE7BC,WAAWA,CAAA,EAAG;IAAA,KAHdC,KAAK,GAAoC,IAAIC,GAAG,CAAC,CAAC;IAAA,KAClDC,UAAU,GAAW,MAAM;EAEZ;EAEvB,OAAOC,WAAWA,CAAA,EAAiB;IACjC,IAAI,CAACL,YAAY,CAACM,QAAQ,EAAE;MAC1BN,YAAY,CAACM,QAAQ,GAAG,IAAIN,YAAY,CAAC,CAAC;IAC5C;IACA,OAAOA,YAAY,CAACM,QAAQ;EAC9B;EAEAC,GAAGA,CAAIC,GAAW,EAAEC,KAAQ,EAAEC,GAAY,EAAQ;IAChD,MAAMC,OAAO,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,IAAIH,GAAG,IAAI,IAAI,CAACN,UAAU,CAAC;IACrD,IAAI,CAACF,KAAK,CAACK,GAAG,CAACC,GAAG,EAAE;MAAEC,KAAK;MAAEK,MAAM,EAAEH;IAAQ,CAAC,CAAC;EACjD;EAEAI,GAAGA,CAAIP,GAAW,EAAY;IAC5B,MAAMQ,KAAK,GAAG,IAAI,CAACd,KAAK,CAACa,GAAG,CAACP,GAAG,CAAC;IACjC,IAAI,CAACQ,KAAK,EAAE,OAAO,IAAI;IAEvB,IAAI,IAAI,CAACC,SAAS,CAACD,KAAK,CAAC,EAAE;MACzB,IAAI,CAACd,KAAK,CAACgB,MAAM,CAACV,GAAG,CAAC;MACtB,OAAO,IAAI;IACb;IAEF,OAAOQ,KAAK,CAACP,KAAK;EAClB;EAEAU,GAAGA,CAACX,GAAW,EAAW;IACxB,MAAMQ,KAAK,GAAG,IAAI,CAACd,KAAK,CAACa,GAAG,CAACP,GAAG,CAAC;IACjC,IAAI,CAACQ,KAAK,EAAE,OAAO,KAAK;IAExB,IAAI,IAAI,CAACC,SAAS,CAACD,KAAK,CAAC,EAAE;MACzB,IAAI,CAACd,KAAK,CAACgB,MAAM,CAACV,GAAG,CAAC;MACtB,OAAO,KAAK;IACd;IAEA,OAAO,IAAI;EACb;EAEAU,MAAMA,CAACV,GAAW,EAAQ;IACxB,IAAI,CAACN,KAAK,CAACgB,MAAM,CAACV,GAAG,CAAC;EACxB;EAEAY,KAAKA,CAAA,EAAS;IACZ,IAAI,CAAClB,KAAK,CAACkB,KAAK,CAAC,CAAC;EACpB;EAEQH,SAASA,CAACI,IAAwB,EAAW;IACnD,OAAOT,IAAI,CAACC,GAAG,CAAC,CAAC,GAAGQ,IAAI,CAACP,MAAM;EACjC;EAEAQ,OAAOA,CAAA,EAAW;IAChB,OAAO,IAAI,CAACpB,KAAK,CAACqB,IAAI;EACxB;EAEAC,OAAOA,CAAA,EAAa;IAClB,OAAOC,KAAK,CAACC,IAAI,CAAC,IAAI,CAACxB,KAAK,CAACyB,IAAI,CAAC,CAAC,CAAC;EACtC;EAEAC,aAAaA,CAAClB,GAAW,EAAQ;IAC/B,IAAI,CAACN,UAAU,GAAGM,GAAG;EACvB;AACF;AAACmB,OAAA,CAAA7B,YAAA,GAAAA,YAAA;AAAA8B,aAAA,GAlEY9B,YAAY;AAAZA,YAAY,CACRM,QAAQ;AAmElB,MAAMyB,aAAa,GAAAF,OAAA,CAAAE,aAAA,GAAG/B,YAAY,CAACK,WAAW,CAAC,CAAC","ignoreList":[]}