{"version":3,"names":["_oneTimeLog","require","safeStringify","obj","JSON","stringify","String","coerceToNumber","value","fallback","isFinite","parsed","parseFloat","isNaN","normalizeStatus","status","normalized","toLowerCase","validateHealthResponse","raw","error","Error","code","context","rawObj","mandatoryKeys","missingKeys","filter","key","length","oneTimeLog","console","warn","join","servicesRaw","services","Array","isArray","map","service","index","name","serviceObj","latency_ms","details","undefined","performanceRaw","performance","perfObj","cpu_percent","memory_usage_mb","p95_latency_ms","cache_hit_rate","active_connections","requests_per_minute","cacheRaw","cache","cacheObj","hit_rate","miss_rate","evictions","total_keys","memory_usage","infrastructureRaw","infrastructure","infraObj","database","hit_rate_percent","external_apis","api","apiObj","active_edges","validated","overall_status","timestamp","Date","toISOString","uptime_seconds","version","__validated","Object","fromEntries","entries","includes"],"sources":["validateHealthResponse.ts"],"sourcesContent":["/**\r\n * Health response validation utility\r\n * Replaces ensureHealthShape.ts with tolerant validation aligned with new schema\r\n */\r\n\r\nimport { ValidatedHealthPayload, HealthData, DiagnosticsError } from '../types/diagnostics';\r\nimport { oneTimeLog } from './oneTimeLog';\r\n\r\n/**\r\n * Safe stringify for logging\r\n */\r\nconst safeStringify = (obj: unknown): string => {\r\n  try {\r\n    return JSON.stringify(obj, null, 2);\r\n  } catch {\r\n    return String(obj);\r\n  }\r\n};\r\n\r\n/**\r\n * Safely coerce value to number with fallback\r\n */\r\nconst coerceToNumber = (value: unknown, fallback: number = 0): number => {\r\n  if (typeof value === 'number' && isFinite(value)) {\r\n    return value;\r\n  }\r\n  if (typeof value === 'string') {\r\n    const parsed = parseFloat(value);\r\n    if (!isNaN(parsed) && isFinite(parsed)) {\r\n      return parsed;\r\n    }\r\n  }\r\n  return fallback;\r\n};\r\n\r\n/**\r\n * Normalize status to expected values\r\n */\r\nconst normalizeStatus = (status: unknown): 'ok' | 'degraded' | 'down' => {\r\n  if (typeof status === 'string') {\r\n    const normalized = status.toLowerCase();\r\n    if (normalized === 'ok' || normalized === 'healthy') return 'ok';\r\n    if (normalized === 'degraded' || normalized === 'warning') return 'degraded';\r\n    if (normalized === 'down' || normalized === 'error' || normalized === 'unhealthy') return 'down';\r\n  }\r\n  return 'down'; // Default to down for unknown states\r\n};\r\n\r\n/**\r\n * Validates and normalizes health response data\r\n * Performs shallow structural checks and provides safe defaults\r\n * \r\n * @param raw - Raw response data from backend\r\n * @returns Validated health payload\r\n * @throws DiagnosticsError if critical structure is missing\r\n */\r\nexport function validateHealthResponse(raw: unknown): ValidatedHealthPayload {\r\n  // Type guard for raw data\r\n  if (!raw || typeof raw !== 'object') {\r\n    const error: DiagnosticsError = new Error('Health response is not an object') as DiagnosticsError;\r\n    error.code = 'HEALTH_SHAPE_MISMATCH';\r\n    error.context = { raw };\r\n    throw error;\r\n  }\r\n\r\n  const rawObj = raw as Record<string, unknown>;\r\n\r\n  // Check for mandatory top-level keys\r\n  const mandatoryKeys = ['services', 'performance', 'cache', 'infrastructure'];\r\n  const missingKeys = mandatoryKeys.filter(key => !(key in rawObj));\r\n\r\n  if (missingKeys.length > 0) {\r\n    oneTimeLog(\r\n      'health-validation-missing-keys',\r\n      () => {\r\n        // eslint-disable-next-line no-console\r\n        console.warn(\r\n          '[Health Validator] Missing mandatory fields:',\r\n          missingKeys.join(', '),\r\n          '\\nRaw data:',\r\n          safeStringify(raw)\r\n        );\r\n      },\r\n      missingKeys.join(',')\r\n    );\r\n\r\n    const error: DiagnosticsError = new Error(`Missing mandatory health fields: ${missingKeys.join(', ')}`) as DiagnosticsError;\r\n    error.code = 'HEALTH_SHAPE_MISMATCH';\r\n    error.context = { missingKeys, raw };\r\n    throw error;\r\n  }\r\n\r\n  // Extract and validate services array\r\n  const servicesRaw = rawObj.services;\r\n  let services: HealthData['services'] = [];\r\n  \r\n  if (Array.isArray(servicesRaw)) {\r\n    services = servicesRaw.map((service, index) => {\r\n      if (!service || typeof service !== 'object') {\r\n        oneTimeLog(\r\n          'health-validation-invalid-service',\r\n          // eslint-disable-next-line no-console\r\n          () => console.warn(`[Health Validator] Invalid service at index ${index}:`, service),\r\n          `index-${index}`\r\n        );\r\n        return { name: `unknown-${index}`, status: 'down' as const };\r\n      }\r\n      \r\n      const serviceObj = service as Record<string, unknown>;\r\n      return {\r\n        name: typeof serviceObj.name === 'string' ? serviceObj.name : `service-${index}`,\r\n        status: normalizeStatus(serviceObj.status),\r\n        latency_ms: coerceToNumber(serviceObj.latency_ms),\r\n        details: serviceObj.details && typeof serviceObj.details === 'object' \r\n          ? serviceObj.details as Record<string, unknown> \r\n          : undefined,\r\n      };\r\n    });\r\n  } else {\r\n    oneTimeLog(\r\n      'health-validation-services-not-array',\r\n      // eslint-disable-next-line no-console\r\n      () => console.warn('[Health Validator] Services field is not an array:', servicesRaw)\r\n    );\r\n  }\r\n\r\n  // Extract and validate performance metrics\r\n  const performanceRaw = rawObj.performance;\r\n  let performance: HealthData['performance'] = {};\r\n  \r\n  if (performanceRaw && typeof performanceRaw === 'object') {\r\n    const perfObj = performanceRaw as Record<string, unknown>;\r\n    performance = {\r\n      cpu_percent: coerceToNumber(perfObj.cpu_percent),\r\n      memory_usage_mb: coerceToNumber(perfObj.memory_usage_mb),\r\n      p95_latency_ms: coerceToNumber(perfObj.p95_latency_ms),\r\n      cache_hit_rate: coerceToNumber(perfObj.cache_hit_rate),\r\n      active_connections: coerceToNumber(perfObj.active_connections),\r\n      requests_per_minute: coerceToNumber(perfObj.requests_per_minute),\r\n    };\r\n  }\r\n\r\n  // Extract and validate cache metrics\r\n  const cacheRaw = rawObj.cache;\r\n  let cache: HealthData['cache'] = {};\r\n  \r\n  if (cacheRaw && typeof cacheRaw === 'object') {\r\n    const cacheObj = cacheRaw as Record<string, unknown>;\r\n    cache = {\r\n      hit_rate: coerceToNumber(cacheObj.hit_rate),\r\n      miss_rate: coerceToNumber(cacheObj.miss_rate),\r\n      evictions: coerceToNumber(cacheObj.evictions),\r\n      total_keys: coerceToNumber(cacheObj.total_keys),\r\n      memory_usage: coerceToNumber(cacheObj.memory_usage),\r\n    };\r\n  }\r\n\r\n  // Extract and validate infrastructure\r\n  const infrastructureRaw = rawObj.infrastructure;\r\n  let infrastructure: HealthData['infrastructure'] = {};\r\n  \r\n  if (infrastructureRaw && typeof infrastructureRaw === 'object') {\r\n    const infraObj = infrastructureRaw as Record<string, unknown>;\r\n    infrastructure = {\r\n      database: infraObj.database && typeof infraObj.database === 'object'\r\n        ? {\r\n            name: 'database',\r\n            status: normalizeStatus((infraObj.database as Record<string, unknown>).status),\r\n            latency_ms: coerceToNumber((infraObj.database as Record<string, unknown>).latency_ms),\r\n          }\r\n        : undefined,\r\n      cache: infraObj.cache && typeof infraObj.cache === 'object'\r\n        ? {\r\n            name: 'cache',\r\n            status: normalizeStatus((infraObj.cache as Record<string, unknown>).status),\r\n            latency_ms: coerceToNumber((infraObj.cache as Record<string, unknown>).latency_ms),\r\n            hit_rate_percent: coerceToNumber((infraObj.cache as Record<string, unknown>).hit_rate_percent),\r\n          }\r\n        : undefined,\r\n      external_apis: Array.isArray(infraObj.external_apis)\r\n        ? (infraObj.external_apis as Array<unknown>).map((api, index) => {\r\n            if (!api || typeof api !== 'object') {\r\n              return { name: `external-api-${index}`, status: 'down' as const };\r\n            }\r\n            const apiObj = api as Record<string, unknown>;\r\n            return {\r\n              name: typeof apiObj.name === 'string' ? apiObj.name : `external-api-${index}`,\r\n              status: normalizeStatus(apiObj.status),\r\n              latency_ms: coerceToNumber(apiObj.latency_ms),\r\n            };\r\n          })\r\n        : undefined,\r\n      active_edges: coerceToNumber(infraObj.active_edges),\r\n    };\r\n  }\r\n\r\n  // Build validated health object\r\n  const validated: ValidatedHealthPayload = {\r\n    overall_status: normalizeStatus(rawObj.overall_status || rawObj.status),\r\n    services,\r\n    performance,\r\n    cache,\r\n    infrastructure,\r\n    timestamp: typeof rawObj.timestamp === 'string' ? rawObj.timestamp : new Date().toISOString(),\r\n    uptime_seconds: coerceToNumber(rawObj.uptime_seconds),\r\n    version: typeof rawObj.version === 'string' ? rawObj.version : undefined,\r\n    __validated: true,\r\n    // Preserve other fields for extensibility\r\n    ...Object.fromEntries(\r\n      Object.entries(rawObj).filter(([key]) => \r\n        !['overall_status', 'status', 'services', 'performance', 'cache', 'infrastructure', 'timestamp', 'uptime_seconds', 'version'].includes(key)\r\n      )\r\n    ),\r\n  };\r\n\r\n  return validated;\r\n}"],"mappings":"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","ignoreList":[]}