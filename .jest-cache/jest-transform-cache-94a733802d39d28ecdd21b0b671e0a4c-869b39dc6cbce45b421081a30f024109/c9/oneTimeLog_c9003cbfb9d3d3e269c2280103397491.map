{"version":3,"names":["loggedSignatures","Set","generateSignature","key","message","oneTimeLog","logFn","signature","has","add","clearLoggedSignatures","clear","getLoggedCount","size"],"sources":["oneTimeLog.ts"],"sourcesContent":["/**\r\n * One-time logging utility to prevent console noise from repeated warnings\r\n * Uses signature hashing to track which warnings have been logged\r\n */\r\n\r\nconst loggedSignatures = new Set<string>();\r\n\r\n/**\r\n * Generates a simple hash for a log signature to track uniqueness\r\n */\r\nfunction generateSignature(key: string, message?: string): string {\r\n  return `${key}:${message || 'generic'}`;\r\n}\r\n\r\n/**\r\n * Logs a message only once per session for a given signature\r\n * @param key - Unique identifier for the log type\r\n * @param logFn - Function to execute for logging\r\n * @param message - Optional message to include in signature\r\n */\r\nexport function oneTimeLog(key: string, logFn: () => void, message?: string): void {\r\n  const signature = generateSignature(key, message);\r\n  \r\n  if (!loggedSignatures.has(signature)) {\r\n    loggedSignatures.add(signature);\r\n    logFn();\r\n  }\r\n}\r\n\r\n/**\r\n * Clears all logged signatures (useful for testing)\r\n */\r\nexport function clearLoggedSignatures(): void {\r\n  loggedSignatures.clear();\r\n}\r\n\r\n/**\r\n * Gets the count of unique signatures logged\r\n */\r\nexport function getLoggedCount(): number {\r\n  return loggedSignatures.size;\r\n}"],"mappings":";;;;;;;;AAAA;AACA;AACA;AACA;;AAEA,MAAMA,gBAAgB,GAAG,IAAIC,GAAG,CAAS,CAAC;;AAE1C;AACA;AACA;AACA,SAASC,iBAAiBA,CAACC,GAAW,EAAEC,OAAgB,EAAU;EAChE,OAAO,GAAGD,GAAG,IAAIC,OAAO,IAAI,SAAS,EAAE;AACzC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO,SAASC,UAAUA,CAACF,GAAW,EAAEG,KAAiB,EAAEF,OAAgB,EAAQ;EACjF,MAAMG,SAAS,GAAGL,iBAAiB,CAACC,GAAG,EAAEC,OAAO,CAAC;EAEjD,IAAI,CAACJ,gBAAgB,CAACQ,GAAG,CAACD,SAAS,CAAC,EAAE;IACpCP,gBAAgB,CAACS,GAAG,CAACF,SAAS,CAAC;IAC/BD,KAAK,CAAC,CAAC;EACT;AACF;;AAEA;AACA;AACA;AACO,SAASI,qBAAqBA,CAAA,EAAS;EAC5CV,gBAAgB,CAACW,KAAK,CAAC,CAAC;AAC1B;;AAEA;AACA;AACA;AACO,SAASC,cAAcA,CAAA,EAAW;EACvC,OAAOZ,gBAAgB,CAACa,IAAI;AAC9B","ignoreList":[]}