12337363fc444c445601175e82be6fec
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports._CardHeader = exports._CardFooter = exports._CardContent = exports._Card = void 0;
var _framerMotion = require("framer-motion");
var _react = _interopRequireDefault(require("react"));
var _jsxRuntime = require("react/jsx-runtime");
/**
 * Card Component
 *
 * A versatile card component with multiple styles and hover effects, designed for the A1Betting platform.
 * Used to create consistent layouts and container styles.
 *
 * @param variant - Visual style of the card
 * @param hoverEffect - Whether to apply a hover effect
 * @param children - Card content
 */

const _Card = exports._Card = /*#__PURE__*/_react.default.forwardRef(({
  variant = 'default',
  hoverEffect = false,
  children,
  className,
  ...props
}, ref) => {
  const baseClasses = 'rounded-lg overflow-hidden transition-all duration-300';
  const variantClasses = {
    default: 'bg-gray-800 border border-gray-700',
    glass: 'bg-white/5 backdrop-blur-md border border-white/10',
    outline: 'bg-transparent border border-gray-700'
  };
  const hoverClasses = hoverEffect ? 'hover:shadow-lg hover:border-cyan-500/50 hover:-translate-y-1' : '';
  // Destructure out problematic drag-related props
  const {
    onDrag,
    onDragStart,
    onDragEnd,
    onAnimationStart,
    ...rest
  } = props;
  return /*#__PURE__*/(0, _jsxRuntime.jsx)(_framerMotion.motion.div, {
    ref: ref,
    className: `${baseClasses} ${variantClasses[variant]} ${hoverClasses} ${className || ''}`,
    whileHover: hoverEffect ? {
      scale: 1.02
    } : {},
    ...rest,
    children: children
  });
});
_Card.displayName = 'Card';

// Card Subcomponents for better structure

const _CardHeader = exports._CardHeader = /*#__PURE__*/_react.default.forwardRef(({
  className,
  ...props
}, ref) => /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
  ref: ref,
  className: `p-6 border-b border-gray-700 ${className}`,
  ...props
}));
_CardHeader.displayName = 'CardHeader';
const _CardContent = exports._CardContent = /*#__PURE__*/_react.default.forwardRef(({
  className,
  ...props
}, ref) => /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
  ref: ref,
  className: `p-6 ${className}`,
  ...props
}));
_CardContent.displayName = 'CardContent';
const _CardFooter = exports._CardFooter = /*#__PURE__*/_react.default.forwardRef(({
  className,
  ...props
}, ref) => /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
  ref: ref,
  className: `p-6 border-t border-gray-700 ${className}`,
  ...props
}));
_CardFooter.displayName = 'CardFooter';

// Export all as named exports for clarity
var _default = exports.default = _Card;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfZnJhbWVyTW90aW9uIiwicmVxdWlyZSIsIl9yZWFjdCIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJfanN4UnVudGltZSIsIl9DYXJkIiwiZXhwb3J0cyIsIlJlYWN0IiwiZm9yd2FyZFJlZiIsInZhcmlhbnQiLCJob3ZlckVmZmVjdCIsImNoaWxkcmVuIiwiY2xhc3NOYW1lIiwicHJvcHMiLCJyZWYiLCJiYXNlQ2xhc3NlcyIsInZhcmlhbnRDbGFzc2VzIiwiZGVmYXVsdCIsImdsYXNzIiwib3V0bGluZSIsImhvdmVyQ2xhc3NlcyIsIm9uRHJhZyIsIm9uRHJhZ1N0YXJ0Iiwib25EcmFnRW5kIiwib25BbmltYXRpb25TdGFydCIsInJlc3QiLCJqc3giLCJtb3Rpb24iLCJkaXYiLCJ3aGlsZUhvdmVyIiwic2NhbGUiLCJkaXNwbGF5TmFtZSIsIl9DYXJkSGVhZGVyIiwiX0NhcmRDb250ZW50IiwiX0NhcmRGb290ZXIiLCJfZGVmYXVsdCJdLCJzb3VyY2VzIjpbIkNhcmQudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IG1vdGlvbiB9IGZyb20gJ2ZyYW1lci1tb3Rpb24nO1xyXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xyXG5cclxuaW50ZXJmYWNlIENhcmRQcm9wcyBleHRlbmRzIE9taXQ8UmVhY3QuSFRNTEF0dHJpYnV0ZXM8SFRNTERpdkVsZW1lbnQ+LCAnYXMnPiB7XHJcbiAgY2hpbGRyZW46IFJlYWN0LlJlYWN0Tm9kZTtcclxuICB2YXJpYW50PzogJ2RlZmF1bHQnIHwgJ2dsYXNzJyB8ICdvdXRsaW5lJztcclxuICBob3ZlckVmZmVjdD86IGJvb2xlYW47XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBDYXJkIENvbXBvbmVudFxyXG4gKlxyXG4gKiBBIHZlcnNhdGlsZSBjYXJkIGNvbXBvbmVudCB3aXRoIG11bHRpcGxlIHN0eWxlcyBhbmQgaG92ZXIgZWZmZWN0cywgZGVzaWduZWQgZm9yIHRoZSBBMUJldHRpbmcgcGxhdGZvcm0uXHJcbiAqIFVzZWQgdG8gY3JlYXRlIGNvbnNpc3RlbnQgbGF5b3V0cyBhbmQgY29udGFpbmVyIHN0eWxlcy5cclxuICpcclxuICogQHBhcmFtIHZhcmlhbnQgLSBWaXN1YWwgc3R5bGUgb2YgdGhlIGNhcmRcclxuICogQHBhcmFtIGhvdmVyRWZmZWN0IC0gV2hldGhlciB0byBhcHBseSBhIGhvdmVyIGVmZmVjdFxyXG4gKiBAcGFyYW0gY2hpbGRyZW4gLSBDYXJkIGNvbnRlbnRcclxuICovXHJcblxyXG5leHBvcnQgY29uc3QgX0NhcmQgPSBSZWFjdC5mb3J3YXJkUmVmPEhUTUxEaXZFbGVtZW50LCBDYXJkUHJvcHM+KFxyXG4gICh7IHZhcmlhbnQgPSAnZGVmYXVsdCcsIGhvdmVyRWZmZWN0ID0gZmFsc2UsIGNoaWxkcmVuLCBjbGFzc05hbWUsIC4uLnByb3BzIH0sIHJlZikgPT4ge1xyXG4gICAgY29uc3QgYmFzZUNsYXNzZXMgPSAncm91bmRlZC1sZyBvdmVyZmxvdy1oaWRkZW4gdHJhbnNpdGlvbi1hbGwgZHVyYXRpb24tMzAwJztcclxuICAgIGNvbnN0IHZhcmlhbnRDbGFzc2VzOiBSZWNvcmQ8c3RyaW5nLCBzdHJpbmc+ID0ge1xyXG4gICAgICBkZWZhdWx0OiAnYmctZ3JheS04MDAgYm9yZGVyIGJvcmRlci1ncmF5LTcwMCcsXHJcbiAgICAgIGdsYXNzOiAnYmctd2hpdGUvNSBiYWNrZHJvcC1ibHVyLW1kIGJvcmRlciBib3JkZXItd2hpdGUvMTAnLFxyXG4gICAgICBvdXRsaW5lOiAnYmctdHJhbnNwYXJlbnQgYm9yZGVyIGJvcmRlci1ncmF5LTcwMCcsXHJcbiAgICB9O1xyXG4gICAgY29uc3QgaG92ZXJDbGFzc2VzID0gaG92ZXJFZmZlY3RcclxuICAgICAgPyAnaG92ZXI6c2hhZG93LWxnIGhvdmVyOmJvcmRlci1jeWFuLTUwMC81MCBob3ZlcjotdHJhbnNsYXRlLXktMSdcclxuICAgICAgOiAnJztcclxuICAgIC8vIERlc3RydWN0dXJlIG91dCBwcm9ibGVtYXRpYyBkcmFnLXJlbGF0ZWQgcHJvcHNcclxuICAgIGNvbnN0IHsgb25EcmFnLCBvbkRyYWdTdGFydCwgb25EcmFnRW5kLCBvbkFuaW1hdGlvblN0YXJ0LCAuLi5yZXN0IH0gPSBwcm9wcztcclxuICAgIHJldHVybiAoXHJcbiAgICAgIDxtb3Rpb24uZGl2XHJcbiAgICAgICAgcmVmPXtyZWZ9XHJcbiAgICAgICAgY2xhc3NOYW1lPXtgJHtiYXNlQ2xhc3Nlc30gJHt2YXJpYW50Q2xhc3Nlc1t2YXJpYW50XX0gJHtob3ZlckNsYXNzZXN9ICR7Y2xhc3NOYW1lIHx8ICcnfWB9XHJcbiAgICAgICAgd2hpbGVIb3Zlcj17aG92ZXJFZmZlY3QgPyB7IHNjYWxlOiAxLjAyIH0gOiB7fX1cclxuICAgICAgICB7Li4ucmVzdH1cclxuICAgICAgPlxyXG4gICAgICAgIHtjaGlsZHJlbn1cclxuICAgICAgPC9tb3Rpb24uZGl2PlxyXG4gICAgKTtcclxuICB9XHJcbik7XHJcbl9DYXJkLmRpc3BsYXlOYW1lID0gJ0NhcmQnO1xyXG5cclxuLy8gQ2FyZCBTdWJjb21wb25lbnRzIGZvciBiZXR0ZXIgc3RydWN0dXJlXHJcblxyXG5leHBvcnQgY29uc3QgX0NhcmRIZWFkZXIgPSBSZWFjdC5mb3J3YXJkUmVmPEhUTUxEaXZFbGVtZW50LCBSZWFjdC5IVE1MQXR0cmlidXRlczxIVE1MRGl2RWxlbWVudD4+KFxyXG4gICh7IGNsYXNzTmFtZSwgLi4ucHJvcHMgfSwgcmVmKSA9PiAoXHJcbiAgICA8ZGl2IHJlZj17cmVmfSBjbGFzc05hbWU9e2BwLTYgYm9yZGVyLWIgYm9yZGVyLWdyYXktNzAwICR7Y2xhc3NOYW1lfWB9IHsuLi5wcm9wc30gLz5cclxuICApXHJcbik7XHJcbl9DYXJkSGVhZGVyLmRpc3BsYXlOYW1lID0gJ0NhcmRIZWFkZXInO1xyXG5cclxuZXhwb3J0IGNvbnN0IF9DYXJkQ29udGVudCA9IFJlYWN0LmZvcndhcmRSZWY8SFRNTERpdkVsZW1lbnQsIFJlYWN0LkhUTUxBdHRyaWJ1dGVzPEhUTUxEaXZFbGVtZW50Pj4oXHJcbiAgKHsgY2xhc3NOYW1lLCAuLi5wcm9wcyB9LCByZWYpID0+IDxkaXYgcmVmPXtyZWZ9IGNsYXNzTmFtZT17YHAtNiAke2NsYXNzTmFtZX1gfSB7Li4ucHJvcHN9IC8+XHJcbik7XHJcbl9DYXJkQ29udGVudC5kaXNwbGF5TmFtZSA9ICdDYXJkQ29udGVudCc7XHJcblxyXG5leHBvcnQgY29uc3QgX0NhcmRGb290ZXIgPSBSZWFjdC5mb3J3YXJkUmVmPEhUTUxEaXZFbGVtZW50LCBSZWFjdC5IVE1MQXR0cmlidXRlczxIVE1MRGl2RWxlbWVudD4+KFxyXG4gICh7IGNsYXNzTmFtZSwgLi4ucHJvcHMgfSwgcmVmKSA9PiAoXHJcbiAgICA8ZGl2IHJlZj17cmVmfSBjbGFzc05hbWU9e2BwLTYgYm9yZGVyLXQgYm9yZGVyLWdyYXktNzAwICR7Y2xhc3NOYW1lfWB9IHsuLi5wcm9wc30gLz5cclxuICApXHJcbik7XHJcbl9DYXJkRm9vdGVyLmRpc3BsYXlOYW1lID0gJ0NhcmRGb290ZXInO1xyXG5cclxuLy8gRXhwb3J0IGFsbCBhcyBuYW1lZCBleHBvcnRzIGZvciBjbGFyaXR5XHJcbmV4cG9ydCBkZWZhdWx0IF9DYXJkO1xyXG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQSxJQUFBQSxhQUFBLEdBQUFDLE9BQUE7QUFDQSxJQUFBQyxNQUFBLEdBQUFDLHNCQUFBLENBQUFGLE9BQUE7QUFBMEIsSUFBQUcsV0FBQSxHQUFBSCxPQUFBO0FBUTFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVPLE1BQU1JLEtBQUssR0FBQUMsT0FBQSxDQUFBRCxLQUFBLGdCQUFHRSxjQUFLLENBQUNDLFVBQVUsQ0FDbkMsQ0FBQztFQUFFQyxPQUFPLEdBQUcsU0FBUztFQUFFQyxXQUFXLEdBQUcsS0FBSztFQUFFQyxRQUFRO0VBQUVDLFNBQVM7RUFBRSxHQUFHQztBQUFNLENBQUMsRUFBRUMsR0FBRyxLQUFLO0VBQ3BGLE1BQU1DLFdBQVcsR0FBRyx3REFBd0Q7RUFDNUUsTUFBTUMsY0FBc0MsR0FBRztJQUM3Q0MsT0FBTyxFQUFFLG9DQUFvQztJQUM3Q0MsS0FBSyxFQUFFLG9EQUFvRDtJQUMzREMsT0FBTyxFQUFFO0VBQ1gsQ0FBQztFQUNELE1BQU1DLFlBQVksR0FBR1YsV0FBVyxHQUM1QiwrREFBK0QsR0FDL0QsRUFBRTtFQUNOO0VBQ0EsTUFBTTtJQUFFVyxNQUFNO0lBQUVDLFdBQVc7SUFBRUMsU0FBUztJQUFFQyxnQkFBZ0I7SUFBRSxHQUFHQztFQUFLLENBQUMsR0FBR1osS0FBSztFQUMzRSxvQkFDRSxJQUFBVCxXQUFBLENBQUFzQixHQUFBLEVBQUMxQixhQUFBLENBQUEyQixNQUFNLENBQUNDLEdBQUc7SUFDVGQsR0FBRyxFQUFFQSxHQUFJO0lBQ1RGLFNBQVMsRUFBRSxHQUFHRyxXQUFXLElBQUlDLGNBQWMsQ0FBQ1AsT0FBTyxDQUFDLElBQUlXLFlBQVksSUFBSVIsU0FBUyxJQUFJLEVBQUUsRUFBRztJQUMxRmlCLFVBQVUsRUFBRW5CLFdBQVcsR0FBRztNQUFFb0IsS0FBSyxFQUFFO0lBQUssQ0FBQyxHQUFHLENBQUMsQ0FBRTtJQUFBLEdBQzNDTCxJQUFJO0lBQUFkLFFBQUEsRUFFUEE7RUFBUSxDQUNDLENBQUM7QUFFakIsQ0FDRixDQUFDO0FBQ0ROLEtBQUssQ0FBQzBCLFdBQVcsR0FBRyxNQUFNOztBQUUxQjs7QUFFTyxNQUFNQyxXQUFXLEdBQUExQixPQUFBLENBQUEwQixXQUFBLGdCQUFHekIsY0FBSyxDQUFDQyxVQUFVLENBQ3pDLENBQUM7RUFBRUksU0FBUztFQUFFLEdBQUdDO0FBQU0sQ0FBQyxFQUFFQyxHQUFHLGtCQUMzQixJQUFBVixXQUFBLENBQUFzQixHQUFBO0VBQUtaLEdBQUcsRUFBRUEsR0FBSTtFQUFDRixTQUFTLEVBQUUsZ0NBQWdDQSxTQUFTLEVBQUc7RUFBQSxHQUFLQztBQUFLLENBQUcsQ0FFdkYsQ0FBQztBQUNEbUIsV0FBVyxDQUFDRCxXQUFXLEdBQUcsWUFBWTtBQUUvQixNQUFNRSxZQUFZLEdBQUEzQixPQUFBLENBQUEyQixZQUFBLGdCQUFHMUIsY0FBSyxDQUFDQyxVQUFVLENBQzFDLENBQUM7RUFBRUksU0FBUztFQUFFLEdBQUdDO0FBQU0sQ0FBQyxFQUFFQyxHQUFHLGtCQUFLLElBQUFWLFdBQUEsQ0FBQXNCLEdBQUE7RUFBS1osR0FBRyxFQUFFQSxHQUFJO0VBQUNGLFNBQVMsRUFBRSxPQUFPQSxTQUFTLEVBQUc7RUFBQSxHQUFLQztBQUFLLENBQUcsQ0FDOUYsQ0FBQztBQUNEb0IsWUFBWSxDQUFDRixXQUFXLEdBQUcsYUFBYTtBQUVqQyxNQUFNRyxXQUFXLEdBQUE1QixPQUFBLENBQUE0QixXQUFBLGdCQUFHM0IsY0FBSyxDQUFDQyxVQUFVLENBQ3pDLENBQUM7RUFBRUksU0FBUztFQUFFLEdBQUdDO0FBQU0sQ0FBQyxFQUFFQyxHQUFHLGtCQUMzQixJQUFBVixXQUFBLENBQUFzQixHQUFBO0VBQUtaLEdBQUcsRUFBRUEsR0FBSTtFQUFDRixTQUFTLEVBQUUsZ0NBQWdDQSxTQUFTLEVBQUc7RUFBQSxHQUFLQztBQUFLLENBQUcsQ0FFdkYsQ0FBQztBQUNEcUIsV0FBVyxDQUFDSCxXQUFXLEdBQUcsWUFBWTs7QUFFdEM7QUFBQSxJQUFBSSxRQUFBLEdBQUE3QixPQUFBLENBQUFXLE9BQUEsR0FDZVosS0FBSyIsImlnbm9yZUxpc3QiOltdfQ==