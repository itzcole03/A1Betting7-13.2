{"version":3,"names":["_getJestObj","mock","jest","fn","mockImplementation","message","global","fetch","url","opts","includes","Promise","resolve","ok","status","text","JSON","stringify","body","parse","_jsxRuntime","jsx","children","_reactQuery","require","_react","_interopRequireWildcard","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","globalThis","__JEST_E2E_ERROR__","describe","beforeAll","__MOCK_GET_ENHANCED_BETS_ERROR__","afterAll","it","App","then","queryClient","QueryClient","act","render","QueryClientProvider","client","waitFor","errorMessages","screen","getAllByText","expect","length","toBeGreaterThan"],"sources":["App.e2e.error.test.tsx"],"sourcesContent":["import { QueryClient, QueryClientProvider } from '@tanstack/react-query';\r\nimport { render, screen, waitFor } from '@testing-library/react';\r\nimport '../../../jest.setup.e2e.js';\r\n\r\n// Use the mock for unifiedApiService in error state E2E tests\r\n\r\njest.mock('src/services/unifiedApiService');\r\n\r\nglobalThis.__JEST_E2E_ERROR__ = true;\r\n\r\ndescribe('App E2E Error State', () => {\r\n  beforeAll(() => {\r\n    (globalThis as any).__MOCK_GET_ENHANCED_BETS_ERROR__ = true;\r\n  });\r\n  afterAll(() => {\r\n    (globalThis as any).__MOCK_GET_ENHANCED_BETS_ERROR__ = false;\r\n  });\r\n\r\n  it('shows error state if API returns error', async () => {\r\n    const App = (await import('../App')).default;\r\n    const queryClient = new QueryClient();\r\n    // Wrap render in act to address React warnings\r\n    await (\r\n      await import('react-dom/test-utils')\r\n    ).act(async () => {\r\n      render(\r\n        <QueryClientProvider client={queryClient}>\r\n          <App />\r\n        </QueryClientProvider>\r\n      );\r\n    });\r\n    // Wait for the error message rendered inline in PropOllamaUnified\r\n    await waitFor(() => {\r\n      const errorMessages = screen.getAllByText(/Cannot connect|Error|Failed|Unable to load/i);\r\n      expect(errorMessages.length).toBeGreaterThan(0);\r\n    });\r\n  }, 20000);\r\n});\r\njest.mock('src/components/user-friendly/PropOllama', () => {\r\n  return jest.fn().mockImplementation(() => {\r\n    let message = '';\r\n    // Mock the fetch call to simulate backend behavior\r\n    global.fetch = (url, opts) => {\r\n      if (url.includes('/health')) {\r\n        return Promise.resolve({\r\n          ok: true,\r\n          status: 200,\r\n          text: () => Promise.resolve(JSON.stringify({ status: 'ok' })),\r\n        });\r\n      }\r\n      if (url.includes('/propollama')) {\r\n        if (opts && opts.body) {\r\n          if (typeof opts.body === 'object') {\r\n            message = opts.body.message || '';\r\n          } else if (typeof opts.body === 'string') {\r\n            try {\r\n              message = JSON.parse(opts.body).message;\r\n            } catch {\r\n              // intentionally ignore JSON parse errors\r\n            }\r\n          }\r\n        } else if (opts && typeof opts === 'string') {\r\n          message = opts;\r\n        } else if (opts && opts.body && typeof opts.body === 'string') {\r\n          // Handle string body\r\n          message = opts.body;\r\n        }\r\n      }\r\n      return Promise.resolve({\r\n        ok: true,\r\n        status: 200,\r\n        text: () => Promise.resolve(JSON.stringify({ message })),\r\n      });\r\n    };\r\n    return <div>{message}</div>;\r\n  });\r\n});\r\n"],"mappings":"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","ignoreList":[]}