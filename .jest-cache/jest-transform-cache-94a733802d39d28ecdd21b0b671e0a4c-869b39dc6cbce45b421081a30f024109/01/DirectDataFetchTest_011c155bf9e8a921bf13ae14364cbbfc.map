{"version":3,"names":["_react","_interopRequireWildcard","require","_SportsService","_jsxRuntime","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","DirectDataFetchTest","results","setResults","useState","isRunning","setIsRunning","tests","name","endpoint","method","useV2","runDirectTests","console","log","test","startTime","Date","now","data","dataCount","ok","status","activateSport","success","fetchOptions","headers","response","fetch","json","Array","isArray","length","games","err","duration","prev","timestamp","toISOString","versionUsed","version_used","error","Error","message","String","jsxs","className","children","jsx","onClick","disabled","map","result","index","split","JSON","stringify","substring","_default","exports"],"sources":["DirectDataFetchTest.tsx"],"sourcesContent":["/**\r\n * Direct PropOllama Data Fetching Test\r\n * This component bypasses all the complex hooks and data managers\r\n * to directly test the API endpoints that PropOllama should be using\r\n */\r\n\r\nimport React, { useState } from 'react';\r\nimport { activateSport } from '../../services/SportsService';\r\n\r\ninterface DirectTestResult {\r\n  endpoint: string;\r\n  method: string;\r\n  success: boolean;\r\n  dataCount: number;\r\n  data?: any;\r\n  error?: string;\r\n  duration: number;\r\n  timestamp: string;\r\n  versionUsed?: string;\r\n}\r\n\r\nconst DirectDataFetchTest: React.FC = () => {\r\n  const [results, setResults] = useState<DirectTestResult[]>([]);\r\n  const [isRunning, setIsRunning] = useState(false);\r\n\r\n  const tests = [\r\n    {\r\n      name: 'Backend Health Check',\r\n      endpoint: 'http://localhost:8000/health',\r\n      method: 'GET',\r\n    },\r\n    {\r\n      name: 'V2 API Health Check',\r\n      endpoint: 'http://localhost:8000/api/v2/health',\r\n      method: 'GET',\r\n    },\r\n    {\r\n      name: \"Today's MLB Games\",\r\n      endpoint: 'http://localhost:8000/mlb/todays-games',\r\n      method: 'GET',\r\n    },\r\n    {\r\n      name: 'MLB Player Props (Direct)',\r\n      endpoint: 'http://localhost:8000/mlb/odds-comparison/?market_type=playerprops&limit=10',\r\n      method: 'GET',\r\n    },\r\n    {\r\n      name: 'Sport Activation - MLB (v2)',\r\n      endpoint: '/api/v2/sports/activate',\r\n      method: 'POST',\r\n      useV2: true,\r\n    },\r\n    {\r\n      name: 'Frontend Health (via proxy)',\r\n      endpoint: '/api/health',\r\n      method: 'GET',\r\n    },\r\n  ];\r\n\r\n  const runDirectTests = async () => {\r\n    setIsRunning(true);\r\n    setResults([]);\r\n\r\n    console.log('[DirectDataFetchTest] Starting direct API tests...');\r\n\r\n    for (const test of tests) {\r\n      const startTime = Date.now();\r\n      try {\r\n        console.log(`[DirectDataFetchTest] Testing: ${test.name} - ${test.endpoint}`);\r\n        let data;\r\n        let dataCount = 0;\r\n        let ok = false;\r\n        let status = 0;\r\n        if (test.useV2) {\r\n          // Use new versioned service with fallback and logging\r\n          data = await activateSport('MLB');\r\n          ok = data?.success;\r\n          dataCount = 1;\r\n          status = 200;\r\n        } else {\r\n          const fetchOptions: RequestInit = {\r\n            method: test.method,\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n            },\r\n          };\r\n          const response = await fetch(test.endpoint, fetchOptions);\r\n          status = response.status;\r\n          try {\r\n            data = await response.json();\r\n            dataCount = Array.isArray(data) ? data.length : data?.games?.length || 0;\r\n            ok = response.ok;\r\n          } catch (err) {\r\n            data = null;\r\n          }\r\n        }\r\n        const duration = Date.now() - startTime;\r\n        setResults(prev => [\r\n          ...prev,\r\n          {\r\n            endpoint: test.endpoint,\r\n            method: test.method,\r\n            success: ok,\r\n            dataCount,\r\n            data: Array.isArray(data) ? `Array(${data.length})` : data,\r\n            duration,\r\n            timestamp: new Date().toISOString(),\r\n            versionUsed: data?.version_used,\r\n          },\r\n        ]);\r\n        console.log(`[DirectDataFetchTest] ‚úÖ ${test.name}: ${status} (${duration}ms)`, data);\r\n      } catch (error) {\r\n        const duration = Date.now() - startTime;\r\n        setResults(prev => [\r\n          ...prev,\r\n          {\r\n            endpoint: test.endpoint,\r\n            method: test.method,\r\n            success: false,\r\n            dataCount: 0,\r\n            error: error instanceof Error ? error.message : String(error),\r\n            duration,\r\n            timestamp: new Date().toISOString(),\r\n          },\r\n        ]);\r\n      }\r\n    }\r\n    setIsRunning(false);\r\n  };\r\n\r\n  return (\r\n    <div className='p-6'>\r\n      <button\r\n        className='bg-blue-700 hover:bg-blue-800 text-white px-4 py-2 rounded mb-6 font-bold shadow'\r\n        onClick={runDirectTests}\r\n        disabled={isRunning}\r\n      >\r\n        {isRunning ? 'üîÑ Running Tests...' : '‚ñ∂Ô∏è Run Direct API Tests'}\r\n      </button>\r\n\r\n      <div className='grid gap-4'>\r\n        {results.map((result, index) => (\r\n          <div\r\n            key={index}\r\n            className={`p-4 rounded border-l-4 ${\r\n              result.success\r\n                ? 'bg-green-900/20 border-green-500 text-green-100'\r\n                : 'bg-red-900/20 border-red-500 text-red-100'\r\n            }`}\r\n          >\r\n            <div className='flex items-center justify-between mb-2'>\r\n              <span className='font-medium flex items-center gap-2'>\r\n                {result.success ? '‚úÖ' : '‚ùå'}\r\n                <span className='text-sm opacity-75'>{result.method}</span>\r\n              </span>\r\n              <div className='text-xs opacity-75 flex gap-4'>\r\n                <span>{result.duration}ms</span>\r\n                <span>{result.timestamp.split('T')[1].split('.')[0]}</span>\r\n              </div>\r\n            </div>\r\n\r\n            <div className='text-sm mb-2 font-mono break-all opacity-90'>{result.endpoint}</div>\r\n\r\n            {result.success && result.dataCount > 0 && (\r\n              <div className='text-xs bg-green-900/30 p-2 rounded mb-2'>\r\n                üìä Data received: {result.dataCount} items\r\n                {result.versionUsed && (\r\n                  <span className='ml-2 text-yellow-300'>[API version: {result.versionUsed}]</span>\r\n                )}\r\n              </div>\r\n            )}\r\n\r\n            {result.error && (\r\n              <div className='text-xs bg-red-900/30 p-2 rounded mb-2'>‚ö†Ô∏è Error: {result.error}</div>\r\n            )}\r\n\r\n            {result.data && typeof result.data === 'object' && (\r\n              <details className='text-xs'>\r\n                <summary className='cursor-pointer opacity-75 hover:opacity-100'>\r\n                  View Response Data\r\n                </summary>\r\n                <pre className='bg-slate-800/50 p-2 rounded mt-2 overflow-x-auto'>\r\n                  {JSON.stringify(result.data, null, 2).substring(0, 1000)}\r\n                  {JSON.stringify(result.data).length > 1000 && '\\n...truncated'}\r\n                </pre>\r\n              </details>\r\n            )}\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {results.length === 0 && !isRunning && (\r\n        <div className='text-gray-400 text-center py-8'>\r\n          No tests run yet - click the button above to start\r\n        </div>\r\n      )}\r\n\r\n      {isRunning && (\r\n        <div className='text-yellow-400 text-center py-4 flex items-center justify-center gap-2'>\r\n          <div className='animate-spin w-4 h-4 border-2 border-yellow-400 border-t-transparent rounded-full'></div>\r\n          Running API tests...\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DirectDataFetchTest;\r\n"],"mappings":"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","ignoreList":[]}