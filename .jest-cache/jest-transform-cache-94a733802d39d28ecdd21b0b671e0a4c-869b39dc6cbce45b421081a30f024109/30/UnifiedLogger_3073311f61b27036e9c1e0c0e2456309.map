{"version":3,"names":["LogLevel","exports","UnifiedLogger","constructor","context","level","INFO","logs","maxLogs","getInstance","instance","setLevel","error","message","data","log","ERROR","warn","WARN","info","debug","DEBUG","formatData","undefined","Error","name","stack","JSON","parse","stringify","type","Object","prototype","toString","call","String","serialization_error","_entry","timestamp","Date","push","length","slice","getLogs","filter","clearLogs","getContext","setContext","_UnifiedLogger","_unifiedLogger"],"sources":["UnifiedLogger.ts"],"sourcesContent":["export enum LogLevel {\n  ERROR = 0,\n  WARN = 1,\n  INFO = 2,\n  DEBUG = 3,\n}\n\ninterface LogEntry {\n  timestamp: Date;\n  level: LogLevel;\n  context: string;\n  message: string;\n  data?: unknown;\n}\n\nexport class UnifiedLogger {\n  private static instance: UnifiedLogger;\n  private context: string;\n  private level: LogLevel = LogLevel.INFO;\n  private logs: LogEntry[] = [];\n  private maxLogs: number = 1000;\n\n  constructor(context: string = 'App') {\n    this.context = context;\n  }\n\n  static getInstance(context?: string): UnifiedLogger {\n    if (!UnifiedLogger.instance) {\n      UnifiedLogger.instance = new UnifiedLogger(context);\n    }\n    return UnifiedLogger.instance;\n  }\n\n  setLevel(level: LogLevel): void {\n    this.level = level;\n  }\n\n  error(message: string, data?: unknown): void {\n    this.log(LogLevel.ERROR, message, data);\n    // Production console statements disabled for lint compliance\n    // if (data !== undefined) {\n    //   console.error(`[${this.context}] ${message}`, this.formatData(data));\n    // } else {\n    //   console.error(`[${this.context}] ${message}`);\n    // }\n  }\n\n  warn(message: string, data?: unknown): void {\n    this.log(LogLevel.WARN, message, data);\n    // Production console statements disabled for lint compliance\n    // if (this.level >= LogLevel.WARN) {\n    //   if (data !== undefined) {\n    //     console.warn(`[${this.context}] ${message}`, this.formatData(data));\n    //   } else {\n    //     console.warn(`[${this.context}] ${message}`);\n    //   }\n    // }\n  }\n\n  info(message: string, data?: unknown): void {\n    this.log(LogLevel.INFO, message, data);\n    // Production console statements disabled for lint compliance\n    // if (this.level >= LogLevel.INFO) {\n    //   if (data !== undefined) {\n    //     console.info(`[${this.context}] ${message}`, this.formatData(data));\n    //   } else {\n    //     console.info(`[${this.context}] ${message}`);\n    //   }\n    // }\n  }\n\n  debug(message: string, data?: unknown): void {\n    this.log(LogLevel.DEBUG, message, data);\n    // Production console statements disabled for lint compliance\n    // if (this.level >= LogLevel.DEBUG) {\n    //   if (data !== undefined) {\n    //     console.debug(`[${this.context}] ${message}`, this.formatData(data));\n    //   } else {\n    //     console.debug(`[${this.context}] ${message}`);\n    //   }\n    // }\n  }\n\n  private formatData(data: unknown): unknown {\n    if (data === null || data === undefined) {\n      return data;\n    }\n\n    if (typeof data === 'string' || typeof data === 'number' || typeof data === 'boolean') {\n      return data;\n    }\n\n    if (data instanceof Error) {\n      return {\n        name: data.name,\n        message: data.message,\n        stack: data.stack,\n      };\n    }\n\n    if (typeof data === 'object') {\n      try {\n        // Try to JSON serialize the object for better display\n        return JSON.parse(JSON.stringify(data));\n      } catch (error) {\n        // If serialization fails, return a safe representation\n        return {\n          type: Object.prototype.toString.call(data),\n          toString: String(data),\n          serialization_error: 'Failed to serialize object',\n        };\n      }\n    }\n\n    return String(data);\n  }\n\n  private log(level: LogLevel, message: string, data?: unknown): void {\n    const _entry: LogEntry = {\n      timestamp: new Date(),\n      level,\n      context: this.context,\n      message,\n      data,\n    };\n\n    this.logs.push(_entry);\n\n    // Keep only the most recent logs\n    if (this.logs.length > this.maxLogs) {\n      this.logs = this.logs.slice(-this.maxLogs);\n    }\n  }\n\n  getLogs(level?: LogLevel): LogEntry[] {\n    if (level !== undefined) {\n      return this.logs.filter(log => log.level <= level);\n    }\n    return [...this.logs];\n  }\n\n  clearLogs(): void {\n    this.logs = [];\n  }\n\n  getContext(): string {\n    return this.context;\n  }\n\n  setContext(context: string): void {\n    this.context = context;\n  }\n}\n\nexport const _unifiedLogger = UnifiedLogger.getInstance();\n"],"mappings":";;;;;;;IAAYA,QAAQ,GAAAC,OAAA,CAAAD,QAAA,0BAARA,QAAQ;EAARA,QAAQ,CAARA,QAAQ;EAARA,QAAQ,CAARA,QAAQ;EAARA,QAAQ,CAARA,QAAQ;EAARA,QAAQ,CAARA,QAAQ;EAAA,OAARA,QAAQ;AAAA;AAeb,MAAME,aAAa,CAAC;EAOzBC,WAAWA,CAACC,OAAe,GAAG,KAAK,EAAE;IAAA,KAL7BA,OAAO;IAAA,KACPC,KAAK,GAAaL,QAAQ,CAACM,IAAI;IAAA,KAC/BC,IAAI,GAAe,EAAE;IAAA,KACrBC,OAAO,GAAW,IAAI;IAG5B,IAAI,CAACJ,OAAO,GAAGA,OAAO;EACxB;EAEA,OAAOK,WAAWA,CAACL,OAAgB,EAAiB;IAClD,IAAI,CAACF,aAAa,CAACQ,QAAQ,EAAE;MAC3BR,aAAa,CAACQ,QAAQ,GAAG,IAAIR,aAAa,CAACE,OAAO,CAAC;IACrD;IACA,OAAOF,aAAa,CAACQ,QAAQ;EAC/B;EAEAC,QAAQA,CAACN,KAAe,EAAQ;IAC9B,IAAI,CAACA,KAAK,GAAGA,KAAK;EACpB;EAEAO,KAAKA,CAACC,OAAe,EAAEC,IAAc,EAAQ;IAC3C,IAAI,CAACC,GAAG,CAACf,QAAQ,CAACgB,KAAK,EAAEH,OAAO,EAAEC,IAAI,CAAC;IACvC;IACA;IACA;IACA;IACA;IACA;EACF;EAEAG,IAAIA,CAACJ,OAAe,EAAEC,IAAc,EAAQ;IAC1C,IAAI,CAACC,GAAG,CAACf,QAAQ,CAACkB,IAAI,EAAEL,OAAO,EAAEC,IAAI,CAAC;IACtC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACF;EAEAK,IAAIA,CAACN,OAAe,EAAEC,IAAc,EAAQ;IAC1C,IAAI,CAACC,GAAG,CAACf,QAAQ,CAACM,IAAI,EAAEO,OAAO,EAAEC,IAAI,CAAC;IACtC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACF;EAEAM,KAAKA,CAACP,OAAe,EAAEC,IAAc,EAAQ;IAC3C,IAAI,CAACC,GAAG,CAACf,QAAQ,CAACqB,KAAK,EAAER,OAAO,EAAEC,IAAI,CAAC;IACvC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACF;EAEQQ,UAAUA,CAACR,IAAa,EAAW;IACzC,IAAIA,IAAI,KAAK,IAAI,IAAIA,IAAI,KAAKS,SAAS,EAAE;MACvC,OAAOT,IAAI;IACb;IAEA,IAAI,OAAOA,IAAI,KAAK,QAAQ,IAAI,OAAOA,IAAI,KAAK,QAAQ,IAAI,OAAOA,IAAI,KAAK,SAAS,EAAE;MACrF,OAAOA,IAAI;IACb;IAEA,IAAIA,IAAI,YAAYU,KAAK,EAAE;MACzB,OAAO;QACLC,IAAI,EAAEX,IAAI,CAACW,IAAI;QACfZ,OAAO,EAAEC,IAAI,CAACD,OAAO;QACrBa,KAAK,EAAEZ,IAAI,CAACY;MACd,CAAC;IACH;IAEA,IAAI,OAAOZ,IAAI,KAAK,QAAQ,EAAE;MAC5B,IAAI;QACF;QACA,OAAOa,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,SAAS,CAACf,IAAI,CAAC,CAAC;MACzC,CAAC,CAAC,OAAOF,KAAK,EAAE;QACd;QACA,OAAO;UACLkB,IAAI,EAAEC,MAAM,CAACC,SAAS,CAACC,QAAQ,CAACC,IAAI,CAACpB,IAAI,CAAC;UAC1CmB,QAAQ,EAAEE,MAAM,CAACrB,IAAI,CAAC;UACtBsB,mBAAmB,EAAE;QACvB,CAAC;MACH;IACF;IAEA,OAAOD,MAAM,CAACrB,IAAI,CAAC;EACrB;EAEQC,GAAGA,CAACV,KAAe,EAAEQ,OAAe,EAAEC,IAAc,EAAQ;IAClE,MAAMuB,MAAgB,GAAG;MACvBC,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC;MACrBlC,KAAK;MACLD,OAAO,EAAE,IAAI,CAACA,OAAO;MACrBS,OAAO;MACPC;IACF,CAAC;IAED,IAAI,CAACP,IAAI,CAACiC,IAAI,CAACH,MAAM,CAAC;;IAEtB;IACA,IAAI,IAAI,CAAC9B,IAAI,CAACkC,MAAM,GAAG,IAAI,CAACjC,OAAO,EAAE;MACnC,IAAI,CAACD,IAAI,GAAG,IAAI,CAACA,IAAI,CAACmC,KAAK,CAAC,CAAC,IAAI,CAAClC,OAAO,CAAC;IAC5C;EACF;EAEAmC,OAAOA,CAACtC,KAAgB,EAAc;IACpC,IAAIA,KAAK,KAAKkB,SAAS,EAAE;MACvB,OAAO,IAAI,CAAChB,IAAI,CAACqC,MAAM,CAAC7B,GAAG,IAAIA,GAAG,CAACV,KAAK,IAAIA,KAAK,CAAC;IACpD;IACA,OAAO,CAAC,GAAG,IAAI,CAACE,IAAI,CAAC;EACvB;EAEAsC,SAASA,CAAA,EAAS;IAChB,IAAI,CAACtC,IAAI,GAAG,EAAE;EAChB;EAEAuC,UAAUA,CAAA,EAAW;IACnB,OAAO,IAAI,CAAC1C,OAAO;EACrB;EAEA2C,UAAUA,CAAC3C,OAAe,EAAQ;IAChC,IAAI,CAACA,OAAO,GAAGA,OAAO;EACxB;AACF;AAACH,OAAA,CAAAC,aAAA,GAAAA,aAAA;AAAA8C,cAAA,GAzIY9C,aAAa;AAAbA,aAAa,CACTQ,QAAQ;AA0IlB,MAAMuC,cAAc,GAAAhD,OAAA,CAAAgD,cAAA,GAAG/C,aAAa,CAACO,WAAW,CAAC,CAAC","ignoreList":[]}