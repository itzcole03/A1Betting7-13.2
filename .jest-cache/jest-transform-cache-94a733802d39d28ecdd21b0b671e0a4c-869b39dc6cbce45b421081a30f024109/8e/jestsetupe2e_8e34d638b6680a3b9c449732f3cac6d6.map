{"version":3,"names":["_getJestObj","mock","usePortfolioOptimization","data","portfolio_metrics","total_expected_value","total_risk_score","diversification_score","kelly_optimization","sharpe_ratio","max_drawdown","confidence_weighted_return","optimization_recommendations","risk_assessment","status","isLoading","isError","useAIInsights","ai_insights","bet_id","player_name","sport","confidence","quantum_analysis","neural_patterns","shap_explanation","risk_factors","opportunity_score","market_edge","confidence_reasoning","key_factors","summary","total_opportunities","average_opportunity_score","total_market_edge","quantum_analysis_available","neural_patterns_detected","high_confidence_bets","market_intelligence","inefficiencies_detected","pattern_strength","recommendation","OnboardingFlow","UpdateModal","actual","jest","requireActual","__esModule","_AuthProvider","useAuth","user","id","email","role","isAdmin","isAuthenticated","requiresPasswordChange","changePassword","fn","loading","error","undefined","discoverBackend","backendDiscovery","getBackendUrl","require"],"sources":["jest.setup.e2e.js"],"sourcesContent":["// Shared E2E Jest setup for global mocks\r\n\r\njest.mock(\"./frontend/src/hooks/usePortfolioOptimization\", () => ({\r\n  usePortfolioOptimization: () => ({\r\n    data: {\r\n      portfolio_metrics: {\r\n        total_expected_value: 0.33,\r\n        total_risk_score: 0.1,\r\n        diversification_score: 0.5,\r\n        kelly_optimization: 0.1,\r\n        sharpe_ratio: 1.2,\r\n        max_drawdown: -0.05,\r\n        confidence_weighted_return: 0.2,\r\n      },\r\n      optimization_recommendations: [],\r\n      risk_assessment: {},\r\n      status: \"mock\",\r\n    },\r\n    isLoading: false,\r\n    isError: false,\r\n  }),\r\n}));\r\njest.mock(\"./frontend/src/hooks/useAIInsights\", () => ({\r\n  useAIInsights: () => ({\r\n    data: {\r\n      ai_insights: [\r\n        {\r\n          bet_id: \"1\",\r\n          player_name: \"LeBron James\",\r\n          sport: \"NBA\",\r\n          confidence: 92,\r\n          quantum_analysis:\r\n            \"Quantum algorithms detected optimal betting patterns.\",\r\n          neural_patterns: [\"Strong momentum indicators\"],\r\n          shap_explanation: {},\r\n          risk_factors: [\"Injury risk\"],\r\n          opportunity_score: 8.7,\r\n          market_edge: 4.2,\r\n          confidence_reasoning: \"Multiple AI models show consensus.\",\r\n          key_factors: [[\"Recent performance\", 0.35]],\r\n        },\r\n      ],\r\n      summary: {\r\n        total_opportunities: 1,\r\n        average_opportunity_score: 8.7,\r\n        total_market_edge: 4.2,\r\n        quantum_analysis_available: true,\r\n        neural_patterns_detected: 1,\r\n        high_confidence_bets: 1,\r\n      },\r\n      market_intelligence: {\r\n        inefficiencies_detected: 1,\r\n        pattern_strength: \"strong\",\r\n        recommendation: \"Bet on LeBron James\",\r\n      },\r\n    },\r\n    isLoading: false,\r\n    isError: false,\r\n  }),\r\n}));\r\njest.mock(\"./frontend/src/onboarding/OnboardingFlow\", () => ({\r\n  OnboardingFlow: () => null,\r\n}));\r\njest.mock(\"./frontend/src/update/UpdateModal\", () => ({\r\n  UpdateModal: () => null,\r\n}));\r\njest.mock(\"./frontend/src/contexts/AuthContext\", () => {\r\n  const actual = jest.requireActual(\"./frontend/src/contexts/AuthContext\");\r\n  return {\r\n    __esModule: true,\r\n    _AuthProvider: actual._AuthProvider,\r\n    useAuth: () => ({\r\n      user: { id: \"1\", email: \"user@example.com\", role: \"user\" },\r\n      isAdmin: false,\r\n      isAuthenticated: true,\r\n      requiresPasswordChange: false,\r\n      changePassword: jest.fn(),\r\n      loading: false,\r\n      error: undefined,\r\n    }),\r\n  };\r\n});\r\njest.mock(\"./frontend/src/services/backendDiscovery\", () => ({\r\n  discoverBackend: async () => \"http://localhost:8000\",\r\n  backendDiscovery: {\r\n    getBackendUrl: async () => \"http://localhost:8000\",\r\n  },\r\n}));\r\n"],"mappings":"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","ignoreList":[]}