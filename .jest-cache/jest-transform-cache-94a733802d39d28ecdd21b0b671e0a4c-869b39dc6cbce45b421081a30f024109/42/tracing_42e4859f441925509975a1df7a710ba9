74b3e5a09065e3e10c6960ce20ab9e39
"use strict";
// Simplified tracing utility
// OpenTelemetry functionality temporarily disabled until dependencies are properly installed
Object.defineProperty(exports, "__esModule", { value: true });
exports.provider = void 0;
const provider = null;
exports.provider = provider;
// Safe environment variable access for both Vite and Jest
function safeImportMetaEnv(key) {
    try {
        // In test environment, use process.env
        if (typeof process !== 'undefined' && process.env) {
            return process.env[key];
        }
        // In Vite environment, use import.meta.env if available
        if (typeof window !== 'undefined' && window.__VITE_ENV__) {
            return window.__VITE_ENV__[key];
        }
    }
    catch (e) { }
    return undefined;
}
const isTest = (typeof process !== 'undefined' && process.env && process.env.NODE_ENV === 'test') ||
    safeImportMetaEnv('MODE') === 'test';
// OpenTelemetry is temporarily disabled
const otelEnabled = false;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiQzpcXFVzZXJzXFxiY21hZFxcRG93bmxvYWRzXFxBMUJldHRpbmc3LTEzLjJcXGZyb250ZW5kXFxzcmNcXHV0aWxzXFx0cmFjaW5nLnRzIiwibWFwcGluZ3MiOiI7QUFBQSw2QkFBNkI7QUFDN0IsNkZBQTZGOzs7QUFFN0YsTUFBTSxRQUFRLEdBQVksSUFBSSxDQUFDO0FBMEJ0Qiw0QkFBUTtBQXhCakIsMERBQTBEO0FBQzFELFNBQVMsaUJBQWlCLENBQUMsR0FBVztJQUNwQyxJQUFJLENBQUM7UUFDSCx1Q0FBdUM7UUFDdkMsSUFBSSxPQUFPLE9BQU8sS0FBSyxXQUFXLElBQUksT0FBTyxDQUFDLEdBQUcsRUFBRSxDQUFDO1lBQ2xELE9BQU8sT0FBTyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUMxQixDQUFDO1FBQ0Qsd0RBQXdEO1FBQ3hELElBQUksT0FBTyxNQUFNLEtBQUssV0FBVyxJQUFLLE1BQWMsQ0FBQyxZQUFZLEVBQUUsQ0FBQztZQUNsRSxPQUFRLE1BQWMsQ0FBQyxZQUFZLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDM0MsQ0FBQztJQUNILENBQUM7SUFBQyxPQUFPLENBQUMsRUFBRSxDQUFDLENBQUEsQ0FBQztJQUNkLE9BQU8sU0FBUyxDQUFDO0FBQ25CLENBQUM7QUFFRCxNQUFNLE1BQU0sR0FDVixDQUFDLE9BQU8sT0FBTyxLQUFLLFdBQVcsSUFBSSxPQUFPLENBQUMsR0FBRyxJQUFJLE9BQU8sQ0FBQyxHQUFHLENBQUMsUUFBUSxLQUFLLE1BQU0sQ0FBQztJQUNsRixpQkFBaUIsQ0FBQyxNQUFNLENBQUMsS0FBSyxNQUFNLENBQUM7QUFFdkMsd0NBQXdDO0FBQ3hDLE1BQU0sV0FBVyxHQUFHLEtBQUssQ0FBQyIsIm5hbWVzIjpbXSwic291cmNlcyI6WyJDOlxcVXNlcnNcXGJjbWFkXFxEb3dubG9hZHNcXEExQmV0dGluZzctMTMuMlxcZnJvbnRlbmRcXHNyY1xcdXRpbHNcXHRyYWNpbmcudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gU2ltcGxpZmllZCB0cmFjaW5nIHV0aWxpdHlcclxuLy8gT3BlblRlbGVtZXRyeSBmdW5jdGlvbmFsaXR5IHRlbXBvcmFyaWx5IGRpc2FibGVkIHVudGlsIGRlcGVuZGVuY2llcyBhcmUgcHJvcGVybHkgaW5zdGFsbGVkXHJcblxyXG5jb25zdCBwcm92aWRlcjogdW5rbm93biA9IG51bGw7XHJcblxyXG4vLyBTYWZlIGVudmlyb25tZW50IHZhcmlhYmxlIGFjY2VzcyBmb3IgYm90aCBWaXRlIGFuZCBKZXN0XHJcbmZ1bmN0aW9uIHNhZmVJbXBvcnRNZXRhRW52KGtleTogc3RyaW5nKTogc3RyaW5nIHwgdW5kZWZpbmVkIHtcclxuICB0cnkge1xyXG4gICAgLy8gSW4gdGVzdCBlbnZpcm9ubWVudCwgdXNlIHByb2Nlc3MuZW52XHJcbiAgICBpZiAodHlwZW9mIHByb2Nlc3MgIT09ICd1bmRlZmluZWQnICYmIHByb2Nlc3MuZW52KSB7XHJcbiAgICAgIHJldHVybiBwcm9jZXNzLmVudltrZXldO1xyXG4gICAgfVxyXG4gICAgLy8gSW4gVml0ZSBlbnZpcm9ubWVudCwgdXNlIGltcG9ydC5tZXRhLmVudiBpZiBhdmFpbGFibGVcclxuICAgIGlmICh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJyAmJiAod2luZG93IGFzIGFueSkuX19WSVRFX0VOVl9fKSB7XHJcbiAgICAgIHJldHVybiAod2luZG93IGFzIGFueSkuX19WSVRFX0VOVl9fW2tleV07XHJcbiAgICB9XHJcbiAgfSBjYXRjaCAoZSkge31cclxuICByZXR1cm4gdW5kZWZpbmVkO1xyXG59XHJcblxyXG5jb25zdCBpc1Rlc3QgPVxyXG4gICh0eXBlb2YgcHJvY2VzcyAhPT0gJ3VuZGVmaW5lZCcgJiYgcHJvY2Vzcy5lbnYgJiYgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICd0ZXN0JykgfHxcclxuICBzYWZlSW1wb3J0TWV0YUVudignTU9ERScpID09PSAndGVzdCc7XHJcblxyXG4vLyBPcGVuVGVsZW1ldHJ5IGlzIHRlbXBvcmFyaWx5IGRpc2FibGVkXHJcbmNvbnN0IG90ZWxFbmFibGVkID0gZmFsc2U7XHJcblxyXG4vLyBjb25zb2xlLmxvZygnVHJhY2luZyBpbml0aWFsaXplZCAoZGlzYWJsZWQpOicsIHsgaXNUZXN0LCBvdGVsRW5hYmxlZCB9KTtcclxuXHJcbmV4cG9ydCB7IHByb3ZpZGVyIH07XHJcbiJdLCJ2ZXJzaW9uIjozfQ==