{"version":3,"names":["_BaseService","require","_UnifiedStateService","UnifiedStateService","BaseService","constructor","state","listeners","listenerIdCounter","initializeDefaultState","getInstance","instance","user","isAuthenticated","profile","preferences","sports","selectedSport","activeFilters","data","betting","opportunities","history","metrics","ui","theme","sidebarOpen","notifications","system","isOnline","lastSync","errors","get","path","defaultValue","_keys","split","_current","_key","set","value","_lastKey","pop","_oldValue","notifyListeners","logger","debug","update","updater","_currentValue","_newValue","merge","partial","delete","undefined","subscribe","callback","_id","push","id","unsubscribe","listenerId","_index","findIndex","l","splice","changedPath","newValue","oldValue","_listener","pathMatches","error","listenerPath","length","startsWith","getState","JSON","parse","stringify","setState","newState","_oldState","info","reset","persist","_serializedState","localStorage","setItem","restore","getItem","_restoredState","exports","_default","default"],"sources":["UnifiedStateService.ts"],"sourcesContent":["import { BaseService } from './BaseService';\r\n\r\ninterface StateData {\r\n  [key: string]: unknown;\r\n}\r\n\r\ninterface StateListener {\r\n  id: string;\r\n  path: string;\r\n  callback: (newValue: unknown, oldValue: unknown) => void;\r\n}\r\n\r\nexport class UnifiedStateService extends BaseService {\r\n  private static instance: UnifiedStateService;\r\n  private state: StateData = {};\r\n  private listeners: StateListener[] = [];\r\n  private listenerIdCounter = 0;\r\n\r\n  protected constructor() {\r\n    // @ts-expect-error TS(2554): Expected 2 arguments, but got 1. BaseService expects two arguments, but only one is provided here for singleton pattern compatibility.\r\n    super('UnifiedStateService');\r\n    this.initializeDefaultState();\r\n  }\r\n\r\n  static getInstance(): UnifiedStateService {\r\n    if (!UnifiedStateService.instance) {\r\n      UnifiedStateService.instance = new UnifiedStateService();\r\n    }\r\n    return UnifiedStateService.instance;\r\n  }\r\n\r\n  private initializeDefaultState(): void {\r\n    this.state = {\r\n      user: {\r\n        isAuthenticated: false,\r\n        profile: null,\r\n        preferences: {},\r\n      },\r\n      sports: {\r\n        selectedSport: 'nfl',\r\n        activeFilters: {},\r\n        data: {},\r\n      },\r\n      betting: {\r\n        opportunities: [],\r\n        history: [],\r\n        metrics: {},\r\n      },\r\n      ui: {\r\n        theme: 'cyber-dark',\r\n        sidebarOpen: true,\r\n        notifications: [],\r\n      },\r\n      system: {\r\n        isOnline: true,\r\n        lastSync: null,\r\n        errors: [],\r\n      },\r\n    };\r\n  }\r\n\r\n  get<T>(path: string, defaultValue?: T): T {\r\n    const _keys = path.split('.');\r\n    let _current = this.state;\r\n\r\n    for (const _key of _keys) {\r\n      if (_current && typeof _current === 'object' && _key in _current) {\r\n        _current = (_current as any)[_key];\r\n      } else {\r\n        return defaultValue as T;\r\n      }\r\n    }\r\n\r\n    return _current as T;\r\n  }\r\n\r\n  set(path: string, value: unknown): void {\r\n    const _keys = path.split('.');\r\n    const _lastKey = _keys.pop()!;\r\n    let _current = this.state;\r\n\r\n    // Navigate to the parent object\r\n    for (const _key of _keys) {\r\n      if (!(_key in _current) || typeof (_current as any)[_key] !== 'object') {\r\n        (_current as any)[_key] = {};\r\n      }\r\n      _current = (_current as any)[_key];\r\n    }\r\n\r\n    const _oldValue = (_current as any)[_lastKey];\r\n    (_current as any)[_lastKey] = value;\r\n\r\n    this.notifyListeners(path, value, _oldValue);\r\n    this.logger.debug('State updated', { path, value });\r\n  }\r\n\r\n  update(path: string, updater: (current: unknown) => unknown): void {\r\n    const _currentValue = this.get(path);\r\n    const _newValue = updater(_currentValue);\r\n    this.set(path, _newValue);\r\n  }\r\n\r\n  merge(path: string, partial: unknown): void {\r\n    const _currentValue = this.get(path, {});\r\n    const _newValue = { ...(_currentValue as object), ...(partial as object) };\r\n    this.set(path, _newValue);\r\n  }\r\n\r\n  delete(path: string): void {\r\n    const _keys = path.split('.');\r\n    const _lastKey = _keys.pop()!;\r\n    let _current = this.state;\r\n\r\n    for (const _key of _keys) {\r\n      if (!(_key in _current) || typeof (_current as any)[_key] !== 'object') {\r\n        return; // Path doesn't exist\r\n      }\r\n      _current = (_current as any)[_key];\r\n    }\r\n\r\n    const _oldValue = (_current as any)[_lastKey];\r\n    delete (_current as any)[_lastKey];\r\n\r\n    this.notifyListeners(path, undefined, _oldValue);\r\n    this.logger.debug('State deleted', { path });\r\n  }\r\n\r\n  subscribe(path: string, callback: (newValue: unknown, oldValue: unknown) => void): string {\r\n    const _id = `listener_${++this.listenerIdCounter}`;\r\n    this.listeners.push({ id: _id, path, callback });\r\n\r\n    this.logger.debug('State listener added', { id: _id, path });\r\n    return _id;\r\n  }\r\n\r\n  unsubscribe(listenerId: string): void {\r\n    const _index = this.listeners.findIndex(l => l.id === listenerId);\r\n    if (_index >= 0) {\r\n      this.listeners.splice(_index, 1);\r\n      this.logger.debug('State listener removed', { listenerId });\r\n    }\r\n  }\r\n\r\n  private notifyListeners(changedPath: string, newValue: unknown, oldValue: unknown): void {\r\n    for (const _listener of this.listeners) {\r\n      if (this.pathMatches(changedPath, _listener.path)) {\r\n        try {\r\n          _listener.callback(newValue, oldValue);\r\n        } catch (error) {\r\n          this.logger.error('State listener error', {\r\n            listenerId: _listener.id,\r\n            path: _listener.path,\r\n            error,\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private pathMatches(changedPath: string, listenerPath: string): boolean {\r\n    // Exact match\r\n    if (changedPath === listenerPath) return true;\r\n\r\n    // Parent path change affects child listeners\r\n    if (changedPath.length < listenerPath.length) {\r\n      return listenerPath.startsWith(changedPath + '.');\r\n    }\r\n\r\n    // Child path change affects parent listeners\r\n    if (changedPath.length > listenerPath.length) {\r\n      return changedPath.startsWith(listenerPath + '.');\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  getState(): StateData {\r\n    return JSON.parse(JSON.stringify(this.state));\r\n  }\r\n\r\n  setState(newState: StateData): void {\r\n    const _oldState = this.state;\r\n    this.state = newState;\r\n\r\n    // Notify all listeners that root state changed\r\n    this.notifyListeners('', newState, _oldState);\r\n    this.logger.info('Full state replaced');\r\n  }\r\n\r\n  reset(): void {\r\n    this.initializeDefaultState();\r\n    this.listeners = [];\r\n    this.logger.info('State reset to defaults');\r\n  }\r\n\r\n  persist(): void {\r\n    try {\r\n      const _serializedState = JSON.stringify(this.state);\r\n      localStorage.setItem('app_state', _serializedState);\r\n      this.logger.debug('State persisted to localStorage');\r\n    } catch (error) {\r\n      this.logger.error('Failed to persist state', error);\r\n    }\r\n  }\r\n\r\n  restore(): void {\r\n    try {\r\n      const _serializedState = localStorage.getItem('app_state');\r\n      if (_serializedState) {\r\n        const _restoredState = JSON.parse(_serializedState);\r\n        this.setState(_restoredState);\r\n        this.logger.info('State restored from localStorage');\r\n      }\r\n    } catch (error) {\r\n      this.logger.error('Failed to restore state', error);\r\n      this.initializeDefaultState();\r\n    }\r\n  }\r\n}\r\n\r\nexport default UnifiedStateService;\r\n"],"mappings":"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","ignoreList":[]}