{"version":3,"names":["_EventBus","require","_navReadySignal","getConfig","im","undefined","globalThis","__import_meta__","env","importMeta","_e","envNode","NODE_ENV","process","isDev","viteMaxAttempts","viteIntervalMs","viteTimeoutMs","VITE_VALIDATOR_NAV_MAX_ATTEMPTS","VITE_VALIDATOR_NAV_INTERVAL_MS","VITE_VALIDATOR_NAV_TIMEOUT_MS","navMaxAttempts","parseInt","navIntervalMs","navTimeoutMs","enableDev","CoreFunctionalityValidator","constructor","navValidationState","navValidationAttempts","navReadyUnsubscribe","navValidationTimeout","lastDegradedAt","config","validationInterval","isRunning","performanceBaseline","healthSnapshot","status","lastSuccessTs","lastAttemptTs","consecutiveFailures","totalCycles","avgResponseTime","validationResults","responseTimes","maxResponseTimes","aggregatedErrors","Map","errorAggregationInterval","lastErrorReport","Date","now","coreFunctions","navigation","validateNavigation","dataFetching","validateDataFetching","userInteractions","validateUserInteractions","predictions","validatePredictions","bettingCalculations","validateBettingCalculations","rendering","validateRendering","emitValidatorEvent","eventData","event","event_type","phase","duration_ms","timestamp","_eventBus","emit","console","debug","error","warn","updateHealthSnapshot","overallStatus","cycleTime","isSuccess","push","length","shift","reduce","a","b","window","__A1_VALIDATOR","fullSnapshot","startValidation","interval","establishPerformanceBaseline","waitForBootstrapCompletion","then","setInterval","requestIdleCallback","runValidationCycle","setTimeout","timeout","Promise","resolve","startTime","observer","pollInterval","pollCount","maxPollCount","cleanup","disconnect","clearTimeout","onBootstrapComplete","reason","details","functionName","log","onTimeout","info","isBootstrapComplete","navElements","document","querySelectorAll","appRoot","querySelector","found","hasChildren","children","reactElements","immediateCheck","timeoutId","handleBootstrapEvent","addEventListener","once","MutationObserver","mutations","significantChange","some","mutation","addedNodes","type","attributeName","removeEventListener","observe","body","childList","subtree","attributes","attributeFilter","adaptivePoll","nextInterval","Math","min","pow","stopValidation","clearInterval","cleanupNavValidation","performance","validator","Object","entries","result","runValidationWithTimeout","isValid","trackAggregatedError","executionTime","errorType","errorDetails","warning","processAggregatedErrors","performanceImpact","assessPerformanceImpact","recommendations","generateRecommendations","determineOverallStatus","report","criticalPathBlocked","logValidationReport","Error","message","errorReport","generateErrorReport","onNavReady","isNavReady","navSelectors","testUrl","HEALTH_ENDPOINT","controller","AbortController","abort","_response","fetch","signal","method","fetchError","name","LEGACY_HEALTH_ENDPOINT","legacyController","legacyTimeoutId","_legacyResponse","testElement","createElement","eventFired","clickEvent","MouseEvent","bubbles","cancelable","view","dispatchEvent","predictionElements","hasContent","Array","from","el","textContent","trim","testCalc","abs","Number","EPSILON","bankroll","odds","probability","kellyFraction","betSize","isNaN","isFinite","odds1","odds2","impliedProb1","impliedProb2","totalImpliedProb","testDiv","innerHTML","appendChild","renderTime","removeChild","timeoutPromise","_","reject","race","performanceMetrics","expected","actual","round","errorMessage","errorAnalysis","classifyValidationError","_originalError","includes","missingElements","foundElements","predictionSelectors","emptyElements","issue","brokenFunctionality","getEntriesByType","impact","renderingDelay","memoryUsage","jsHeapSize","delay","memory","usedJSHeapSize","totalJSHeapSize","results","failedValidations","filter","r","map","f","join","slowValidations","failedCount","warningCount","statusEmoji","groupCollapsed","table","Function","Status","Time","toFixed","Issues","groupEnd","errorKey","existingError","get","count","lastSeen","set","size","errorSummary","structural_missing","functions","data_pending","functionality_broken","performance_issue","errorInfo","split","category","group","summary","toUpperCase","affectedFunctions","totalOccurrences","uniqueFunctions","Set","sampleDetails","clear","exports","coreFunctionalityValidator"],"sources":["coreFunctionalityValidator.ts"],"sourcesContent":["/**\r\n * Core Functionality Validator\r\n * \r\n * Ensures that reliability monitoring and enhancements do not interfere\r\n * with the core application functionality. Validates that essential\r\n * features remain accessible and performant.\r\n */\r\n\r\nimport { _eventBus } from '../core/EventBus';\r\nimport { onNavReady, isNavReady } from '../navigation/navReadySignal';\r\n\r\ninterface CoreValidatorConfig {\r\n  navMaxAttempts: number;\r\n  navIntervalMs: number;\r\n  navTimeoutMs: number;\r\n  enableDev: boolean;\r\n}\r\n\r\n// Configuration with environment variable overrides\r\nconst getConfig = (): CoreValidatorConfig => {\r\n  // Prefer import.meta.env when available (tests set it), fall back to process.env\r\n  // Avoid using the bare `import` identifier which breaks Jest parsing; tests set\r\n  // a fake import.meta on globalThis so check there first.\r\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n  let im: any | undefined = undefined;\r\n  try {\r\n    if (typeof globalThis !== 'undefined' && (globalThis as any).__import_meta__ && (globalThis as any).__import_meta__.env) {\r\n      im = (globalThis as any).__import_meta__;\r\n    } else if (typeof globalThis !== 'undefined' && (globalThis as any).importMeta && (globalThis as any).importMeta.env) {\r\n      im = (globalThis as any).importMeta;\r\n    }\r\n  } catch (_e) {\r\n    // ignore\r\n  }\r\n\r\n  const envNode = (im && im.env && im.env.NODE_ENV) || process.env.NODE_ENV;\r\n  const isDev = envNode === 'development' || process.env.NODE_ENV === 'development';\r\n\r\n  // Try to read import.meta.env values safely (from the im variable)\r\n  let viteMaxAttempts: string | undefined = undefined;\r\n  let viteIntervalMs: string | undefined = undefined;\r\n  let viteTimeoutMs: string | undefined = undefined;\r\n  if (im && im.env) {\r\n    viteMaxAttempts = im.env.VITE_VALIDATOR_NAV_MAX_ATTEMPTS;\r\n    viteIntervalMs = im.env.VITE_VALIDATOR_NAV_INTERVAL_MS;\r\n    viteTimeoutMs = im.env.VITE_VALIDATOR_NAV_TIMEOUT_MS;\r\n  }\r\n\r\n  return {\r\n    navMaxAttempts: parseInt(viteMaxAttempts || (process.env.VITE_VALIDATOR_NAV_MAX_ATTEMPTS as unknown as string) || '12') || 12,\r\n    navIntervalMs: parseInt(viteIntervalMs || (process.env.VITE_VALIDATOR_NAV_INTERVAL_MS as unknown as string) || '250') || 250,\r\n    navTimeoutMs: parseInt(viteTimeoutMs || (process.env.VITE_VALIDATOR_NAV_TIMEOUT_MS as unknown as string) || '5000') || 5000,\r\n    enableDev: isDev\r\n  };\r\n};\r\n\r\ninterface CoreFunctionValidationResult {\r\n  isValid: boolean;\r\n  functionName: string;\r\n  executionTime: number;\r\n  error?: string;\r\n  warning?: string;\r\n  // Enhanced error classification\r\n  errorType?: 'structural_missing' | 'data_pending' | 'functionality_broken' | 'performance_issue';\r\n  errorDetails?: {\r\n    missingElements?: string[];\r\n    emptyElements?: string[];\r\n    brokenFunctionality?: string[];\r\n    performanceMetrics?: { expected: number; actual: number };\r\n  };\r\n}\r\n\r\ninterface ValidatorEvent {\r\n  event_type: 'validator.cycle' | 'validator.cycle.fail' | 'validator.bootstrap' | 'validator.performance';\r\n  phase: string;\r\n  status: 'pass' | 'fail' | 'warn' | 'timeout';\r\n  attempt?: number;\r\n  duration_ms: number;\r\n  timestamp: number;\r\n  details?: {\r\n    error?: string;\r\n    warning?: string;\r\n    functionName?: string;\r\n    performanceImpact?: boolean;\r\n    // Enhanced error classification fields\r\n    errorType?: 'structural_missing' | 'data_pending' | 'functionality_broken' | 'performance_issue';\r\n    errorDetails?: Record<string, unknown>;\r\n  };\r\n}\r\n\r\ninterface HealthSnapshot {\r\n  status: 'healthy' | 'degraded' | 'failed';\r\n  lastSuccessTs: number;\r\n  lastAttemptTs: number;\r\n  consecutiveFailures: number;\r\n  totalCycles: number;\r\n  avgResponseTime: number;\r\n  validationResults: CoreFunctionValidationResult[];\r\n}\r\n\r\ninterface CoreFunctionalityReport {\r\n  timestamp: Date;\r\n  overallStatus: 'PASSING' | 'WARNING' | 'FAILING';\r\n  validationResults: CoreFunctionValidationResult[];\r\n  performanceImpact: {\r\n    renderingDelay: number;\r\n    memoryUsage: number;\r\n    jsHeapSize: number;\r\n    criticalPathBlocked: boolean;\r\n  };\r\n  recommendations: string[];\r\n}\r\n\r\nexport class CoreFunctionalityValidator {\r\n  // Navigation validation state machine\r\n  private navValidationState: 'idle' | 'waitingForDom' | 'success' | 'degraded_timeout' = 'idle';\r\n  private navValidationAttempts = 0;\r\n  private navReadyUnsubscribe?: () => void;\r\n  private navValidationTimeout: NodeJS.Timeout | null = null;\r\n  private lastDegradedAt: number | null = null;\r\n  // Instance-level configuration\r\n  private config: CoreValidatorConfig;\r\n\r\n  constructor() {\r\n    this.config = getConfig();\r\n  }\r\n  public getConfig(): CoreValidatorConfig {\r\n    return this.config;\r\n  }\r\n  \r\n  // Legacy properties\r\n  private validationInterval: NodeJS.Timeout | null = null;\r\n  private isRunning = false;\r\n  private performanceBaseline: PerformanceEntry[] = [];\r\n  \r\n  // Health snapshot tracking\r\n  private healthSnapshot: HealthSnapshot = {\r\n    status: 'healthy',\r\n    lastSuccessTs: 0,\r\n    lastAttemptTs: 0,\r\n    consecutiveFailures: 0,\r\n    totalCycles: 0,\r\n    avgResponseTime: 0,\r\n    validationResults: []\r\n  };\r\n  \r\n  // Performance tracking for observability\r\n  private responseTimes: number[] = [];\r\n  private maxResponseTimes = 50; // Keep last 50 response times for averaging\r\n  \r\n  // Aggregated error tracking for enhanced logging\r\n  private aggregatedErrors: Map<string, {\r\n    count: number;\r\n    errorType: 'structural_missing' | 'data_pending' | 'functionality_broken' | 'performance_issue';\r\n    lastSeen: Date;\r\n    details: Record<string, unknown>;\r\n  }> = new Map();\r\n  private errorAggregationInterval = 30000; // 30 seconds\r\n  private lastErrorReport = Date.now();\r\n\r\n  /**\r\n   * Emit validator event for observability\r\n   */\r\n  private emitValidatorEvent(eventData: Partial<ValidatorEvent>): void {\r\n    try {\r\n      const event: ValidatorEvent = {\r\n        event_type: 'validator.cycle',\r\n        phase: 'unknown',\r\n        status: 'pass',\r\n        duration_ms: 0,\r\n        timestamp: Date.now(),\r\n        ...eventData\r\n      };\r\n\r\n      _eventBus.emit('validator.event', event);\r\n      \r\n      // Also emit specific event type for targeted listeners\r\n      _eventBus.emit(event.event_type, event);\r\n      \r\n      if (this.config.enableDev) {\r\n        // eslint-disable-next-line no-console\r\n        console.debug('[CoreValidator] Event emitted:', event.event_type, event);\r\n      }\r\n    } catch (error) {\r\n      if (this.config && this.config.enableDev) {\r\n        // eslint-disable-next-line no-console\r\n        console.warn('[CoreValidator] Failed to emit event:', error);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update health snapshot and expose to window for QA\r\n   */\r\n  private updateHealthSnapshot(\r\n    validationResults: CoreFunctionValidationResult[], \r\n    overallStatus: 'PASSING' | 'WARNING' | 'FAILING',\r\n    cycleTime: number\r\n  ): void {\r\n    const now = Date.now();\r\n    const isSuccess = overallStatus === 'PASSING';\r\n    \r\n    this.healthSnapshot.lastAttemptTs = now;\r\n    this.healthSnapshot.totalCycles++;\r\n    this.healthSnapshot.validationResults = validationResults;\r\n    \r\n    if (isSuccess) {\r\n      this.healthSnapshot.lastSuccessTs = now;\r\n      this.healthSnapshot.consecutiveFailures = 0;\r\n      this.healthSnapshot.status = 'healthy';\r\n    } else {\r\n      this.healthSnapshot.consecutiveFailures++;\r\n      \r\n      // Implement hysteresis: require 3 consecutive failures before marking as failed\r\n      if (this.healthSnapshot.consecutiveFailures >= 3) {\r\n        this.healthSnapshot.status = 'failed';\r\n      } else if (this.healthSnapshot.consecutiveFailures >= 1 && overallStatus === 'FAILING') {\r\n        this.healthSnapshot.status = 'degraded';\r\n      }\r\n    }\r\n    \r\n    // Update average response time\r\n    this.responseTimes.push(cycleTime);\r\n    if (this.responseTimes.length > this.maxResponseTimes) {\r\n      this.responseTimes.shift();\r\n    }\r\n    this.healthSnapshot.avgResponseTime = this.responseTimes.reduce((a, b) => a + b, 0) / this.responseTimes.length;\r\n    \r\n    // Expose to window for automated QA harnesses\r\n    (window as typeof window & { __A1_VALIDATOR?: unknown }).__A1_VALIDATOR = {\r\n      status: this.healthSnapshot.status,\r\n      lastSuccessTs: this.healthSnapshot.lastSuccessTs,\r\n      lastAttemptTs: this.healthSnapshot.lastAttemptTs,\r\n      consecutiveFailures: this.healthSnapshot.consecutiveFailures,\r\n      totalCycles: this.healthSnapshot.totalCycles,\r\n      avgResponseTime: this.healthSnapshot.avgResponseTime,\r\n      // Include the full snapshot for advanced debugging\r\n      fullSnapshot: this.healthSnapshot\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Core application functions that must remain unimpacted\r\n   */\r\n  private coreFunctions = {\r\n    // Navigation and routing\r\n    navigation: () => this.validateNavigation(),\r\n    // Data fetching and display\r\n    dataFetching: () => this.validateDataFetching(),\r\n    // User interactions\r\n    userInteractions: () => this.validateUserInteractions(),\r\n    // Prediction and analysis features\r\n    predictions: () => this.validatePredictions(),\r\n    // Betting and financial calculations\r\n    bettingCalculations: () => this.validateBettingCalculations(),\r\n    // Performance-critical rendering\r\n    rendering: () => this.validateRendering()\r\n  };\r\n\r\n  /**\r\n   * Initialize continuous validation without impacting performance\r\n   * Now waits for bootstrap completion before starting validation cycles\r\n   */\r\n  public startValidation(interval: number = 60000): void {\r\n    if (this.isRunning) return;\r\n\r\n    this.isRunning = true;\r\n    this.establishPerformanceBaseline();\r\n\r\n    // Wait for bootstrap completion before starting validation cycles\r\n    this.waitForBootstrapCompletion().then(() => {\r\n      // Use requestIdleCallback to avoid blocking main thread\r\n      this.validationInterval = setInterval(() => {\r\n        if ('requestIdleCallback' in window) {\r\n          window.requestIdleCallback(() => this.runValidationCycle());\r\n        } else {\r\n          setTimeout(() => this.runValidationCycle(), 0);\r\n        }\r\n      }, interval);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Wait for bootstrap completion using MutationObserver + adaptive backoff\r\n   * @private\r\n   */\r\n  private async waitForBootstrapCompletion(timeout: number = 10000): Promise<void> {\r\n    return new Promise((resolve) => {\r\n      const startTime = Date.now();\r\n      let observer: MutationObserver | null = null;\r\n      let pollInterval: NodeJS.Timeout | null = null;\r\n      let pollCount = 0;\r\n      const maxPollCount = 5; // Limit aggressive polling\r\n\r\n      const cleanup = () => {\r\n        if (observer) {\r\n          observer.disconnect();\r\n          observer = null;\r\n        }\r\n        if (pollInterval) {\r\n          clearTimeout(pollInterval);\r\n          pollInterval = null;\r\n        }\r\n      };\r\n\r\n      const onBootstrapComplete = (reason: string) => {\r\n        cleanup();\r\n        this.emitValidatorEvent({\r\n          event_type: 'validator.bootstrap',\r\n          phase: 'complete',\r\n          status: 'pass',\r\n          duration_ms: Date.now() - startTime,\r\n          details: { functionName: reason }\r\n        });\r\n\r\n        if (this.config.enableDev) {\r\n          // eslint-disable-next-line no-console\r\n          console.log(`[CoreFunctionalityValidator] ${reason}, starting validation`);\r\n        }\r\n\r\n        resolve();\r\n      };\r\n\r\n      const onTimeout = () => {\r\n        cleanup();\r\n        this.emitValidatorEvent({\r\n          event_type: 'validator.bootstrap',\r\n          phase: 'timeout',\r\n          status: 'warn',\r\n          duration_ms: timeout\r\n        });\r\n\r\n        if (this.config.enableDev) {\r\n          // eslint-disable-next-line no-console\r\n          console.info('[CoreFunctionalityValidator] Bootstrap detection timeout, starting validation (this is normal)');\r\n        }\r\n\r\n        resolve();\r\n      };\r\n\r\n      const isBootstrapComplete = (): string | null => {\r\n        if (this.config.enableDev) {\r\n          // eslint-disable-next-line no-console\r\n          console.log('[NavDiag] Checking bootstrap completion...');\r\n        }\r\n\r\n        const navElements = document.querySelectorAll(\r\n          '[data-nav-root], [data-testid*=\"nav\"], [role=\"navigation\"], nav, #app-nav'\r\n        );\r\n\r\n        if (this.config.enableDev) {\r\n          // eslint-disable-next-line no-console\r\n          console.log('[NavDiag] Navigation elements found:', navElements.length);\r\n        }\r\n\r\n        if (navElements.length > 0) {\r\n          return 'Navigation elements found';\r\n        }\r\n\r\n        const appRoot = document.querySelector('#root [data-testid=\"app\"], #root .app, main, [role=\"main\"]');\r\n        if (this.config.enableDev) {\r\n          // eslint-disable-next-line no-console\r\n          console.log('[NavDiag] App root check:', {\r\n            found: !!appRoot,\r\n            hasChildren: appRoot ? appRoot.children.length : 0\r\n          });\r\n        }\r\n\r\n        if (appRoot && appRoot.children.length > 0) {\r\n          return 'App root mounted with content';\r\n        }\r\n\r\n        const reactElements = document.querySelectorAll('[data-reactroot], [data-testid]');\r\n        if (this.config.enableDev) {\r\n          // eslint-disable-next-line no-console\r\n          console.log('[NavDiag] React elements found:', reactElements.length);\r\n        }\r\n\r\n        if (reactElements.length > 3) {\r\n          return 'React components rendered';\r\n        }\r\n\r\n        if (this.config.enableDev) {\r\n          // eslint-disable-next-line no-console\r\n          console.log('[NavDiag] Bootstrap not complete yet');\r\n        }\r\n\r\n        return null;\r\n      };\r\n\r\n      const immediateCheck = isBootstrapComplete();\r\n      if (immediateCheck) {\r\n        onBootstrapComplete(immediateCheck);\r\n        return;\r\n      }\r\n\r\n      const timeoutId = setTimeout(onTimeout, timeout);\r\n\r\n      const handleBootstrapEvent = () => {\r\n        clearTimeout(timeoutId);\r\n        onBootstrapComplete('Bootstrap event received');\r\n      };\r\n      document.addEventListener('a1:bootstrap-complete', handleBootstrapEvent, { once: true });\r\n\r\n      try {\r\n        observer = new MutationObserver((mutations) => {\r\n          const significantChange = mutations.some(mutation =>\r\n            mutation.addedNodes.length > 0 ||\r\n            (mutation.type === 'attributes' && mutation.attributeName === 'data-testid')\r\n          );\r\n\r\n          if (significantChange) {\r\n            const reason = isBootstrapComplete();\r\n            if (reason) {\r\n              clearTimeout(timeoutId);\r\n              document.removeEventListener('a1:bootstrap-complete', handleBootstrapEvent);\r\n              onBootstrapComplete(reason);\r\n            }\r\n          }\r\n        });\r\n\r\n        observer.observe(document.body, {\r\n          childList: true,\r\n          subtree: true,\r\n          attributes: true,\r\n          attributeFilter: ['data-testid', 'data-nav-root', 'role']\r\n        });\r\n      } catch (error) {\r\n        if (this.config.enableDev) {\r\n          // eslint-disable-next-line no-console\r\n          console.warn('[CoreFunctionalityValidator] MutationObserver setup failed:', error);\r\n        }\r\n      }\r\n\r\n      const adaptivePoll = () => {\r\n        if (Date.now() - startTime > timeout) {\r\n          clearTimeout(timeoutId);\r\n          document.removeEventListener('a1:bootstrap-complete', handleBootstrapEvent);\r\n          onTimeout();\r\n          return;\r\n        }\r\n\r\n        pollCount++;\r\n        const reason = isBootstrapComplete();\r\n        if (reason) {\r\n          clearTimeout(timeoutId);\r\n          document.removeEventListener('a1:bootstrap-complete', handleBootstrapEvent);\r\n          onBootstrapComplete(reason);\r\n          return;\r\n        }\r\n\r\n        let nextInterval = Math.min(250 * Math.pow(1.5, pollCount), 2000);\r\n        if (pollCount >= maxPollCount) {\r\n          nextInterval = 2000;\r\n        }\r\n\r\n        pollInterval = setTimeout(adaptivePoll, nextInterval);\r\n      };\r\n\r\n      setTimeout(adaptivePoll, 250);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Stop validation and cleanup\r\n   */\r\n  public stopValidation(): void {\r\n    if (this.validationInterval) {\r\n      clearInterval(this.validationInterval);\r\n      this.validationInterval = null;\r\n    }\r\n    this.isRunning = false;\r\n    this.cleanupNavValidation();\r\n  }\r\n\r\n  /**\r\n   * Run a complete validation cycle\r\n   */\r\n  public async runValidationCycle(): Promise<CoreFunctionalityReport> {\r\n    const startTime = performance.now();\r\n    const validationResults: CoreFunctionValidationResult[] = [];\r\n    \r\n    // Emit cycle start event\r\n    this.emitValidatorEvent({\r\n      event_type: 'validator.cycle',\r\n      phase: 'start',\r\n      status: 'pass',\r\n      duration_ms: 0\r\n    });\r\n    \r\n    try {\r\n      // Validate each core function with timeout protection\r\n      for (const [functionName, validator] of Object.entries(this.coreFunctions)) {\r\n        const result = await this.runValidationWithTimeout(functionName, validator, 5000);\r\n        validationResults.push(result);\r\n        \r\n        // Emit individual function validation events\r\n        if (!result.isValid) {\r\n          // Track aggregated errors for enhanced logging\r\n          this.trackAggregatedError(result);\r\n          \r\n          this.emitValidatorEvent({\r\n            event_type: 'validator.cycle.fail',\r\n            phase: functionName,\r\n            status: 'fail',\r\n            duration_ms: result.executionTime,\r\n            details: {\r\n              error: result.error,\r\n              functionName: result.functionName,\r\n              errorType: result.errorType,\r\n              errorDetails: result.errorDetails\r\n            }\r\n          });\r\n        } else if (result.warning) {\r\n          this.emitValidatorEvent({\r\n            event_type: 'validator.cycle',\r\n            phase: functionName,\r\n            status: 'warn',\r\n            duration_ms: result.executionTime,\r\n            details: {\r\n              warning: result.warning,\r\n              functionName: result.functionName\r\n            }\r\n          });\r\n        }\r\n      }\r\n\r\n      // Process aggregated error reporting\r\n      this.processAggregatedErrors();\r\n\r\n      // Assess performance impact\r\n      const performanceImpact = this.assessPerformanceImpact();\r\n\r\n      // Generate recommendations\r\n      const recommendations = this.generateRecommendations(validationResults, performanceImpact);\r\n\r\n      // Determine overall status\r\n      const overallStatus = this.determineOverallStatus(validationResults, performanceImpact);\r\n\r\n      const cycleTime = performance.now() - startTime;\r\n      const report: CoreFunctionalityReport = {\r\n        timestamp: new Date(),\r\n        overallStatus,\r\n        validationResults,\r\n        performanceImpact,\r\n        recommendations\r\n      };\r\n\r\n      // Update health snapshot and expose to window\r\n      this.updateHealthSnapshot(validationResults, overallStatus, cycleTime);\r\n\r\n      // Emit cycle complete event\r\n      this.emitValidatorEvent({\r\n        event_type: 'validator.cycle',\r\n        phase: 'complete',\r\n        status: overallStatus === 'PASSING' ? 'pass' : (overallStatus === 'WARNING' ? 'warn' : 'fail'),\r\n        duration_ms: cycleTime,\r\n        details: {\r\n          performanceImpact: performanceImpact.criticalPathBlocked\r\n        }\r\n      });\r\n\r\n      // Log results in development mode only\r\n      if (this.config.enableDev) {\r\n        this.logValidationReport(report);\r\n      }\r\n      return report;\r\n\r\n    } catch (error) {\r\n      const cycleTime = performance.now() - startTime;\r\n      \r\n      // Emit error event\r\n      this.emitValidatorEvent({\r\n        event_type: 'validator.cycle.fail',\r\n        phase: 'validation_cycle',\r\n        status: 'fail',\r\n        duration_ms: cycleTime,\r\n        details: {\r\n          error: error instanceof Error ? error.message : 'Unknown validation error'\r\n        }\r\n      });\r\n\r\n      // Update health snapshot with error\r\n      const errorReport = this.generateErrorReport(error);\r\n      this.updateHealthSnapshot(errorReport.validationResults, 'FAILING', cycleTime);\r\n\r\n      // eslint-disable-next-line no-console\r\n      console.warn('[CoreFunctionalityValidator] Validation cycle error:', error);\r\n      return errorReport;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Validate navigation functionality with state machine and navReady integration\r\n   */\r\n  private async validateNavigation(): Promise<boolean> {\r\n  // Refresh config each run to honor dynamic test-time env changes\r\n  this.config = getConfig();\r\n    // Prevent additional immediate calls from changing attempts after a recent degraded timeout\r\n    if (this.lastDegradedAt && (Date.now() - this.lastDegradedAt) < 1000) {\r\n      return false;\r\n    }\r\n\r\n    // Quick exit if already successful\r\n    if (this.navValidationState === 'success') {\r\n      return true;\r\n    }\r\n\r\n    // Quick exit if already degraded\r\n    if (this.navValidationState === 'degraded_timeout') {\r\n      return false;\r\n    }\r\n\r\n    // Initialize state machine: do not change public state to waiting unless\r\n    // we reach a definitive status. Keep attempts and subscribe to nav ready.\r\n    if (this.navValidationState === 'idle') {\r\n      // Only subscribe once per idle cycle\r\n      if (!this.navReadyUnsubscribe) {\r\n        this.navReadyUnsubscribe = onNavReady(() => {\r\n          this.navValidationState = 'success';\r\n          if (this.config.enableDev) {\r\n            // eslint-disable-next-line no-console\r\n            console.log('[NavDiag] Navigation ready via signal');\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    // Check if nav ready signal already fired\r\n    if (isNavReady()) {\r\n      this.navValidationState = 'success';\r\n      if (this.config.enableDev) {\r\n        // eslint-disable-next-line no-console\r\n        console.log('[NavDiag] Navigation already ready');\r\n      }\r\n      return true;\r\n    }\r\n\r\n    // Increment attempts\r\n    this.navValidationAttempts++;\r\n\r\n    // Log single diagnostic on first attempt\r\n    if (this.navValidationAttempts === 1 && this.config.enableDev) {\r\n      // eslint-disable-next-line no-console\r\n      console.log('[NavDiag] Starting navigation validation...');\r\n    }\r\n\r\n    // Check for navigation elements with hardened selectors\r\n    const navSelectors = '[data-testid=\"primary-nav\"], [role=\"navigation\"], nav';\r\n    const navElements = document.querySelectorAll(navSelectors);\r\n    \r\n    if (navElements.length > 0) {\r\n      this.navValidationState = 'success';\r\n      if (this.config.enableDev) {\r\n        // eslint-disable-next-line no-console\r\n        console.log('[NavDiag] Navigation validation successful - found elements:', navElements.length);\r\n      }\r\n      this.cleanupNavValidation();\r\n      return true;\r\n    }\r\n\r\n    // Check if max attempts reached\r\n    if (this.navValidationAttempts >= this.config.navMaxAttempts) {\r\n      this.navValidationState = 'degraded_timeout';\r\n      this.lastDegradedAt = Date.now();\r\n      if (this.config.enableDev) {\r\n        // eslint-disable-next-line no-console\r\n        console.warn('[NavDiag] Navigation validation degraded - no nav elements found after', this.navValidationAttempts, 'attempts');\r\n      }\r\n      this.cleanupNavValidation();\r\n      return false;\r\n    }\r\n\r\n    // Continue polling (will be called again by the main validation cycle)\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Clean up navigation validation resources\r\n   */\r\n  private cleanupNavValidation(): void {\r\n    if (this.navReadyUnsubscribe) {\r\n      this.navReadyUnsubscribe();\r\n      this.navReadyUnsubscribe = undefined;\r\n    }\r\n    if (this.navValidationTimeout) {\r\n      clearTimeout(this.navValidationTimeout);\r\n      this.navValidationTimeout = null;\r\n    }\r\n    this.navValidationState = 'idle';\r\n    this.navValidationAttempts = 0;\r\n  }\r\n\r\n  /**\r\n   * Health endpoint URL - updated to use new structured health endpoint\r\n   */\r\n  private static readonly HEALTH_ENDPOINT = '/api/v2/diagnostics/health';\r\n  private static readonly LEGACY_HEALTH_ENDPOINT = '/api/health';\r\n\r\n  /**\r\n   * Validate data fetching capabilities - uses new health endpoint with legacy fallback\r\n   */\r\n  private async validateDataFetching(): Promise<boolean> {\r\n    try {\r\n      // Test new structured health endpoint first\r\n      let testUrl = CoreFunctionalityValidator.HEALTH_ENDPOINT;\r\n      const controller = new AbortController();\r\n      const timeoutId = setTimeout(() => controller.abort(), 3000);\r\n\r\n      try {\r\n        const _response = await fetch(testUrl, {\r\n          signal: controller.signal,\r\n          method: 'GET'\r\n        });\r\n        clearTimeout(timeoutId);\r\n        \r\n        // Accept any response (including 404) as long as fetch works\r\n        return true;\r\n      } catch (fetchError) {\r\n        clearTimeout(timeoutId);\r\n        \r\n        // If it's an AbortError, fetch is working but timed out\r\n        if (fetchError instanceof Error && fetchError.name === 'AbortError') {\r\n          return true;\r\n        }\r\n        \r\n        // Try legacy endpoint as fallback\r\n        try {\r\n          testUrl = CoreFunctionalityValidator.LEGACY_HEALTH_ENDPOINT;\r\n          const legacyController = new AbortController();\r\n          const legacyTimeoutId = setTimeout(() => legacyController.abort(), 3000);\r\n          \r\n          try {\r\n            const _legacyResponse = await fetch(testUrl, {\r\n              signal: legacyController.signal,\r\n              method: 'GET'\r\n            });\r\n            clearTimeout(legacyTimeoutId);\r\n            \r\n            // Log migration hint at info level only (will be removed in production builds)\r\n            if (process.env.NODE_ENV === 'development') {\r\n              // eslint-disable-next-line no-console\r\n              console.info('[CoreValidator] Using legacy health endpoint. Consider migrating to /api/v2/diagnostics/health');\r\n            }\r\n            return true;\r\n          } catch {\r\n            clearTimeout(legacyTimeoutId);\r\n            // If legacy also fails, that's still a functioning fetch\r\n            return true;\r\n          }\r\n        } catch {\r\n          // Final fallback - any error indicates fetch is working\r\n          return true;\r\n        }\r\n      }\r\n    } catch (error) {\r\n      // Avoid warnings for expected connection issues - use info level\r\n      if (process.env.NODE_ENV === 'development') {\r\n        // eslint-disable-next-line no-console\r\n        console.info('[CoreValidator] Data fetching validation note:', error);\r\n      }\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Validate user interaction capabilities\r\n   */\r\n  private async validateUserInteractions(): Promise<boolean> {\r\n    try {\r\n      // Check if event listeners can be attached\r\n      const testElement = document.createElement('div');\r\n      let eventFired = false;\r\n\r\n      testElement.addEventListener('click', () => {\r\n        eventFired = true;\r\n      });\r\n\r\n      // Simulate click event\r\n      const clickEvent = new MouseEvent('click', {\r\n        bubbles: true,\r\n        cancelable: true,\r\n        view: window\r\n      });\r\n\r\n      testElement.dispatchEvent(clickEvent);\r\n\r\n      if (!eventFired) {\r\n        throw new Error('Event system not functioning');\r\n      }\r\n\r\n      // Check if React event system is working\r\n      const reactElements = document.querySelectorAll('[data-reactroot], [data-testid]');\r\n      if (reactElements.length === 0 && process.env.NODE_ENV === 'development') {\r\n        // eslint-disable-next-line no-console\r\n        console.warn('[CoreValidator] No React elements detected');\r\n      }\r\n\r\n      return true;\r\n    } catch (error) {\r\n      if (process.env.NODE_ENV === 'development') {\r\n        // eslint-disable-next-line no-console\r\n        console.warn('[CoreValidator] User interactions validation failed:', error);\r\n      }\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Validate prediction system functionality\r\n   */\r\n  private async validatePredictions(): Promise<boolean> {\r\n    try {\r\n      // Check if prediction-related services are accessible\r\n      const predictionElements = document.querySelectorAll('[data-testid*=\"prediction\"], [data-component*=\"prediction\"]');\r\n      \r\n      // Basic validation that prediction components can be rendered\r\n      if (predictionElements.length > 0) {\r\n        // Check if any prediction data is visible\r\n        const hasContent = Array.from(predictionElements).some(el => \r\n          el.textContent && el.textContent.trim().length > 0\r\n        );\r\n        \r\n        if (!hasContent && process.env.NODE_ENV === 'development') {\r\n          // eslint-disable-next-line no-console\r\n          console.warn('[CoreValidator] Prediction elements found but no content visible');\r\n        }\r\n      }\r\n\r\n      // Test basic mathematical operations used in predictions\r\n      const testCalc = 0.1 + 0.2;\r\n      if (Math.abs(testCalc - 0.3) > Number.EPSILON) {\r\n        throw new Error('Basic math operations failing');\r\n      }\r\n\r\n      return true;\r\n    } catch (error) {\r\n      if (process.env.NODE_ENV === 'development') {\r\n        // eslint-disable-next-line no-console\r\n        console.warn('[CoreValidator] Predictions validation failed:', error);\r\n      }\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Validate betting calculations\r\n   */\r\n  private async validateBettingCalculations(): Promise<boolean> {\r\n    try {\r\n      // Test Kelly Criterion calculation\r\n      const bankroll = 1000;\r\n      const odds = 2.0;\r\n      const probability = 0.6;\r\n      \r\n      const kellyFraction = (probability * odds - 1) / (odds - 1);\r\n      const betSize = bankroll * kellyFraction;\r\n\r\n      if (isNaN(betSize) || !isFinite(betSize)) {\r\n        throw new Error('Kelly calculation producing invalid results');\r\n      }\r\n\r\n      // Test arbitrage calculation\r\n      const odds1 = 2.0;\r\n      const odds2 = 2.5;\r\n      const impliedProb1 = 1 / odds1;\r\n      const impliedProb2 = 1 / odds2;\r\n      const totalImpliedProb = impliedProb1 + impliedProb2;\r\n\r\n      if (isNaN(totalImpliedProb) || !isFinite(totalImpliedProb)) {\r\n        throw new Error('Arbitrage calculation producing invalid results');\r\n      }\r\n\r\n      return true;\r\n    } catch (error) {\r\n      if (process.env.NODE_ENV === 'development') {\r\n        // eslint-disable-next-line no-console\r\n        console.warn('[CoreValidator] Betting calculations validation failed:', error);\r\n      }\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Validate rendering performance\r\n   */\r\n  private async validateRendering(): Promise<boolean> {\r\n    try {\r\n      const startTime = performance.now();\r\n\r\n      // Test DOM manipulation performance\r\n      const testDiv = document.createElement('div');\r\n      testDiv.innerHTML = '<span>Test</span>';\r\n      document.body.appendChild(testDiv);\r\n      \r\n      const renderTime = performance.now() - startTime;\r\n      \r\n      // Clean up\r\n      document.body.removeChild(testDiv);\r\n\r\n      // Flag if rendering is taking too long (more than 16ms for 60fps)\r\n      if (renderTime > 16 && process.env.NODE_ENV === 'development') {\r\n        // eslint-disable-next-line no-console\r\n        console.warn(`[CoreValidator] Slow rendering detected: ${renderTime}ms`);\r\n      }\r\n\r\n      return renderTime < 100; // Fail if rendering takes more than 100ms\r\n    } catch (error) {\r\n      if (process.env.NODE_ENV === 'development') {\r\n        // eslint-disable-next-line no-console\r\n        console.warn('[CoreValidator] Rendering validation failed:', error);\r\n      }\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Run validation with timeout and enhanced error classification\r\n   */\r\n  private async runValidationWithTimeout(\r\n    functionName: string,\r\n    validator: () => Promise<boolean>,\r\n    timeout: number\r\n  ): Promise<CoreFunctionValidationResult> {\r\n    const startTime = performance.now();\r\n\r\n    try {\r\n      const timeoutPromise = new Promise<never>((_, reject) => {\r\n        setTimeout(() => reject(new Error('Validation timeout')), timeout);\r\n      });\r\n\r\n      const isValid = await Promise.race([validator(), timeoutPromise]);\r\n      const executionTime = performance.now() - startTime;\r\n\r\n      const result: CoreFunctionValidationResult = {\r\n        isValid,\r\n        functionName,\r\n        executionTime,\r\n        warning: executionTime > 1000 ? `Slow execution: ${executionTime}ms` : undefined\r\n      };\r\n\r\n      // Add performance issue classification for slow operations\r\n      if (executionTime > 1000) {\r\n        result.errorType = 'performance_issue';\r\n        result.errorDetails = {\r\n          performanceMetrics: { expected: 500, actual: Math.round(executionTime) }\r\n        };\r\n      }\r\n\r\n      return result;\r\n    } catch (error) {\r\n      const executionTime = performance.now() - startTime;\r\n      const errorMessage = error instanceof Error ? error.message : 'Unknown error';\r\n      \r\n      // Enhanced error classification\r\n      const errorAnalysis = this.classifyValidationError(functionName, errorMessage, error);\r\n      \r\n      return {\r\n        isValid: false,\r\n        functionName,\r\n        executionTime,\r\n        error: errorMessage,\r\n        errorType: errorAnalysis.type,\r\n        errorDetails: errorAnalysis.details\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Classify validation errors for better debugging and aggregated reporting\r\n   */\r\n  private classifyValidationError(\r\n    functionName: string, \r\n    errorMessage: string, \r\n    _originalError: unknown\r\n  ): { type: 'structural_missing' | 'data_pending' | 'functionality_broken' | 'performance_issue', details: Record<string, unknown> } {\r\n\r\n    // Check for missing structural elements\r\n    if (errorMessage.includes('not found') || errorMessage.includes('No navigation elements') || \r\n        errorMessage.includes('No elements found') || errorMessage.includes('elements found but')) {\r\n      \r\n      // Try to determine what specific elements are missing\r\n      const missingElements: string[] = [];\r\n      if (functionName === 'navigation') {\r\n        const navSelectors = '[data-testid*=\"nav\"], [role=\"navigation\"], nav';\r\n        const foundElements = document.querySelectorAll(navSelectors);\r\n        if (foundElements.length === 0) {\r\n          missingElements.push('navigation elements');\r\n        }\r\n      } else if (functionName === 'predictions') {\r\n        const predictionSelectors = '[data-testid*=\"prediction\"], [data-component*=\"prediction\"]';\r\n        const foundElements = document.querySelectorAll(predictionSelectors);\r\n        if (foundElements.length === 0) {\r\n          missingElements.push('prediction components');\r\n        }\r\n      }\r\n\r\n      return {\r\n        type: 'structural_missing',\r\n        details: { missingElements }\r\n      };\r\n    }\r\n\r\n    // Check for data pending situations (elements exist but no content)\r\n    if (errorMessage.includes('no content visible') || errorMessage.includes('content visible') || \r\n        errorMessage.includes('empty') || errorMessage.includes('data not loaded')) {\r\n      \r\n      const emptyElements: string[] = [];\r\n      // Additional logic to identify empty elements can be added here\r\n      \r\n      return {\r\n        type: 'data_pending',\r\n        details: { emptyElements }\r\n      };\r\n    }\r\n\r\n    // Check for performance issues\r\n    if (errorMessage.includes('timeout') || errorMessage.includes('Slow execution')) {\r\n      return {\r\n        type: 'performance_issue',\r\n        details: { performanceMetrics: { issue: 'timeout_or_slow_execution' } }\r\n      };\r\n    }\r\n\r\n    // Default to functionality broken for other errors\r\n    return {\r\n      type: 'functionality_broken',\r\n      details: { brokenFunctionality: [errorMessage] }\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Establish performance baseline for comparison\r\n   */\r\n  private establishPerformanceBaseline(): void {\r\n    if ('performance' in window && 'getEntriesByType' in performance) {\r\n      this.performanceBaseline = performance.getEntriesByType('measure');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Assess performance impact of reliability monitoring\r\n   */\r\n  private assessPerformanceImpact(): CoreFunctionalityReport['performanceImpact'] {\r\n    const impact = {\r\n      renderingDelay: 0,\r\n      memoryUsage: 0,\r\n      jsHeapSize: 0,\r\n      criticalPathBlocked: false\r\n    };\r\n\r\n    try {\r\n      // Check for main thread blocking\r\n      const now = performance.now();\r\n      setTimeout(() => {\r\n        const delay = performance.now() - now;\r\n        impact.renderingDelay = delay;\r\n        impact.criticalPathBlocked = delay > 50; // More than 50ms indicates blocking\r\n      }, 0);\r\n\r\n      // Check memory usage if available\r\n      if ('memory' in performance) {\r\n        // Define memory interface to avoid any type\r\n        interface PerformanceMemory {\r\n          usedJSHeapSize: number;\r\n          totalJSHeapSize: number;\r\n        }\r\n        const memory = (performance as Performance & { memory?: PerformanceMemory }).memory;\r\n        if (memory) {\r\n          impact.memoryUsage = memory.usedJSHeapSize;\r\n          impact.jsHeapSize = memory.totalJSHeapSize;\r\n        }\r\n      }\r\n    } catch (error) {\r\n      if (process.env.NODE_ENV === 'development') {\r\n        // eslint-disable-next-line no-console\r\n        console.warn('[CoreValidator] Performance impact assessment failed:', error);\r\n      }\r\n    }\r\n\r\n    return impact;\r\n  }\r\n\r\n  /**\r\n   * Generate recommendations based on validation results\r\n   */\r\n  private generateRecommendations(\r\n    results: CoreFunctionValidationResult[],\r\n    performanceImpact: CoreFunctionalityReport['performanceImpact']\r\n  ): string[] {\r\n    const recommendations: string[] = [];\r\n\r\n    // Check for failing validations\r\n    const failedValidations = results.filter(r => !r.isValid);\r\n    if (failedValidations.length > 0) {\r\n      recommendations.push(`Address failed core functions: ${failedValidations.map(f => f.functionName).join(', ')}`);\r\n    }\r\n\r\n    // Check for slow executions\r\n    const slowValidations = results.filter(r => r.executionTime > 1000);\r\n    if (slowValidations.length > 0) {\r\n      recommendations.push(`Optimize slow functions: ${slowValidations.map(f => f.functionName).join(', ')}`);\r\n    }\r\n\r\n    // Check performance impact\r\n    if (performanceImpact.criticalPathBlocked) {\r\n      recommendations.push('Reduce main thread blocking to improve responsiveness');\r\n    }\r\n\r\n    if (performanceImpact.renderingDelay > 16) {\r\n      recommendations.push('Optimize rendering performance to maintain 60fps');\r\n    }\r\n\r\n    if (recommendations.length === 0) {\r\n      recommendations.push('All core functionality validations passing - continue monitoring');\r\n    }\r\n\r\n    return recommendations;\r\n  }\r\n\r\n  /**\r\n   * Determine overall validation status\r\n   */\r\n  private determineOverallStatus(\r\n    results: CoreFunctionValidationResult[],\r\n    performanceImpact: CoreFunctionalityReport['performanceImpact']\r\n  ): 'PASSING' | 'WARNING' | 'FAILING' {\r\n    const failedCount = results.filter(r => !r.isValid).length;\r\n    const warningCount = results.filter(r => r.warning).length;\r\n\r\n    if (failedCount > 0 || performanceImpact.criticalPathBlocked) {\r\n      return 'FAILING';\r\n    }\r\n\r\n    if (warningCount > 0 || performanceImpact.renderingDelay > 16) {\r\n      return 'WARNING';\r\n    }\r\n\r\n    return 'PASSING';\r\n  }\r\n\r\n  /**\r\n   * Log validation report for development\r\n   */\r\n  private logValidationReport(report: CoreFunctionalityReport): void {\r\n    const statusEmoji = {\r\n      'PASSING': '✅',\r\n      'WARNING': '⚠️',\r\n      'FAILING': '❌'\r\n    };\r\n\r\n    /* eslint-disable no-console */\r\n    console.groupCollapsed(`${statusEmoji[report.overallStatus]} Core Functionality Validation: ${report.overallStatus}`);\r\n    \r\n    console.table(report.validationResults.map(r => ({\r\n      Function: r.functionName,\r\n      Status: r.isValid ? '✅ Pass' : '❌ Fail',\r\n      Time: `${r.executionTime.toFixed(2)}ms`,\r\n      Issues: r.error || r.warning || 'None'\r\n    })));\r\n\r\n    if (report.recommendations.length > 0) {\r\n      console.log('📋 Recommendations:', report.recommendations);\r\n    }\r\n\r\n    console.groupEnd();\r\n    /* eslint-enable no-console */\r\n  }\r\n\r\n  /**\r\n   * Generate error report when validation cycle fails\r\n   */\r\n  private generateErrorReport(error: unknown): CoreFunctionalityReport {\r\n    return {\r\n      timestamp: new Date(),\r\n      overallStatus: 'FAILING',\r\n      validationResults: [{\r\n        isValid: false,\r\n        functionName: 'validation_cycle',\r\n        executionTime: 0,\r\n        error: error instanceof Error ? error.message : 'Unknown validation error'\r\n      }],\r\n      performanceImpact: {\r\n        renderingDelay: 0,\r\n        memoryUsage: 0,\r\n        jsHeapSize: 0,\r\n        criticalPathBlocked: true\r\n      },\r\n      recommendations: ['Fix core validation system', 'Check for system-level issues']\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Track aggregated errors for enhanced logging and debugging\r\n   */\r\n  private trackAggregatedError(result: CoreFunctionValidationResult): void {\r\n    if (!result.errorType || !result.error) return;\r\n\r\n    const errorKey = `${result.functionName}:${result.errorType}`;\r\n    const existingError = this.aggregatedErrors.get(errorKey);\r\n\r\n    if (existingError) {\r\n      existingError.count++;\r\n      existingError.lastSeen = new Date();\r\n      existingError.details = { ...existingError.details, ...result.errorDetails };\r\n    } else {\r\n      this.aggregatedErrors.set(errorKey, {\r\n        count: 1,\r\n        errorType: result.errorType,\r\n        lastSeen: new Date(),\r\n        details: result.errorDetails || {}\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Process and report aggregated errors periodically to avoid spam\r\n   */\r\n  private processAggregatedErrors(): void {\r\n    const now = Date.now();\r\n    if (now - this.lastErrorReport < this.errorAggregationInterval) {\r\n      return; // Not time to report yet\r\n    }\r\n\r\n    if (this.aggregatedErrors.size === 0) {\r\n      this.lastErrorReport = now;\r\n      return; // No errors to report\r\n    }\r\n\r\n    // Categorize errors by type for structured reporting\r\n    const errorSummary: Record<string, { functions: string[]; count: number; details: Record<string, unknown>[] }> = {\r\n      structural_missing: { functions: [], count: 0, details: [] },\r\n      data_pending: { functions: [], count: 0, details: [] },\r\n      functionality_broken: { functions: [], count: 0, details: [] },\r\n      performance_issue: { functions: [], count: 0, details: [] }\r\n    };\r\n\r\n    for (const [errorKey, errorInfo] of this.aggregatedErrors.entries()) {\r\n      const [functionName] = errorKey.split(':');\r\n      const category = errorSummary[errorInfo.errorType];\r\n      \r\n      if (category) {\r\n        category.functions.push(functionName);\r\n        category.count += errorInfo.count;\r\n        category.details.push(errorInfo.details);\r\n      }\r\n    }\r\n\r\n    // Log aggregated summary (only in development to avoid production noise)\r\n    if (process.env.NODE_ENV === 'development') {\r\n      // eslint-disable-next-line no-console\r\n      console.group('[CoreValidator] Aggregated Error Summary (Last 30s)');\r\n      \r\n      for (const [errorType, summary] of Object.entries(errorSummary)) {\r\n        if (summary.count > 0) {\r\n          // eslint-disable-next-line no-console\r\n          console.warn(`${errorType.toUpperCase()}:`, {\r\n            affectedFunctions: summary.functions,\r\n            totalOccurrences: summary.count,\r\n            uniqueFunctions: [...new Set(summary.functions)].length,\r\n            sampleDetails: summary.details[0] // Show first example\r\n          });\r\n        }\r\n      }\r\n      \r\n      // eslint-disable-next-line no-console\r\n      console.groupEnd();\r\n    }\r\n\r\n    // Emit aggregated error event for external monitoring\r\n    this.emitValidatorEvent({\r\n      event_type: 'validator.performance',\r\n      phase: 'aggregated_errors',\r\n      status: 'warn',\r\n      duration_ms: this.errorAggregationInterval,\r\n      timestamp: now,\r\n      details: {\r\n        warning: `Aggregated errors: ${this.aggregatedErrors.size} unique errors`,\r\n        functionName: 'aggregated_error_reporter',\r\n        performanceImpact: this.aggregatedErrors.size > 5 // Consider high error count as performance impact\r\n      }\r\n    });\r\n\r\n    // Clear aggregated errors after reporting\r\n    this.aggregatedErrors.clear();\r\n    this.lastErrorReport = now;\r\n  }\r\n}\r\n\r\n// Export singleton instance\r\nexport const coreFunctionalityValidator = new CoreFunctionalityValidator();\r\nexport type { CoreFunctionalityReport, CoreFunctionValidationResult };\r\n"],"mappings":"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","ignoreList":[]}