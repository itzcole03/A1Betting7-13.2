{"version":3,"names":["_axios","_interopRequireDefault","require","_UnifiedCache","_UnifiedConfig","_UnifiedLogger","EventEmitter","constructor","events","on","event","listener","push","off","filter","l","emit","args","forEach","BaseService","name","serviceRegistry","config","logger","api","cache","UnifiedConfig","getInstance","UnifiedLogger","UnifiedCache","axios","create","baseURL","getApiUrl","timeout","headers","setupInterceptors","interceptors","request","use","error","Promise","reject","response","handleError","serviceError","errorMsg","message","String","source","timestamp","Date","now","retry","operation","maxRetries","delay","_lastError","lastError","i","resolve","setTimeout","getCacheKey","parts","join","withCache","key","ttl","cached","get","result","set","initialize","info","cleanup","handleRequest","exports"],"sources":["BaseService.ts"],"sourcesContent":["import type { AxiosError, AxiosInstance, AxiosResponse } from 'axios';\r\nimport axios from 'axios';\r\nimport { UnifiedCache } from './UnifiedCache';\r\nimport { UnifiedConfig } from './UnifiedConfig';\r\nimport { UnifiedLogger } from './UnifiedLogger';\r\nimport { UnifiedServiceRegistry } from './UnifiedServiceRegistry';\r\n\r\n// Browser-compatible EventEmitter;\r\nclass EventEmitter {\r\n  private events: { [key: string]: Array<(...args: unknown[]) => void> } = {};\r\n\r\n  on(event: string, listener: (...args: unknown[]) => void) {\r\n    if (!this.events[event]) {\r\n      this.events[event] = [];\r\n    }\r\n    this.events[event].push(listener);\r\n  }\r\n\r\n  off(event: string, listener: (...args: unknown[]) => void) {\r\n    if (!this.events[event]) return;\r\n    this.events[event] = this.events[event].filter(l => l !== listener);\r\n  }\r\n\r\n  emit(event: string, ...args: unknown[]) {\r\n    if (!this.events[event]) return;\r\n    this.events[event].forEach(listener => listener(...args));\r\n  }\r\n}\r\n\r\nexport interface ServiceError {\r\n  code: string;\r\n  source: string;\r\n  details?: unknown;\r\n}\r\n\r\nexport abstract class BaseService extends EventEmitter {\r\n  protected config: UnifiedConfig;\r\n  protected logger: UnifiedLogger;\r\n  protected api: AxiosInstance;\r\n  protected cache: UnifiedCache;\r\n\r\n  constructor(\r\n    protected readonly name: string,\r\n    // Keep the registry loosely typed to avoid tight coupling during incremental fixes\r\n    protected readonly serviceRegistry: any\r\n  ) {\r\n    super();\r\n    this.config = UnifiedConfig.getInstance();\r\n    this.logger = new UnifiedLogger(this.name);\r\n    this.cache = UnifiedCache.getInstance();\r\n\r\n    // Initialize API client;\r\n    this.api = axios.create({\r\n      baseURL: this.config.getApiUrl(),\r\n      timeout: 10000,\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n\r\n    this.setupInterceptors();\r\n  }\r\n\r\n  private setupInterceptors(): void {\r\n    this.api.interceptors.request.use(\r\n      (config: any) => {\r\n        // If you want to add an Authorization header, pass the token as a parameter or get it from config\r\n        // Example: if (config.headers && config.headers.AuthorizationToken)\r\n        return config;\r\n      },\r\n      (error: AxiosError) => {\r\n        this.logger.error('Request error:', error);\r\n        return Promise.reject(error);\r\n      }\r\n    );\r\n\r\n    this.api.interceptors.response.use(\r\n      (response: AxiosResponse) => {\r\n        return response;\r\n      },\r\n      (error: AxiosError) => {\r\n        this.logger.error('Response error:', error);\r\n        return Promise.reject(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  protected handleError(error: unknown, serviceError: ServiceError): void {\r\n    let errorMsg = '';\r\n    if (typeof error === 'object' && error !== null && 'message' in error) {\r\n      errorMsg = (error as any).message;\r\n    } else {\r\n      errorMsg = String(error);\r\n    }\r\n    this.logger.error(`Error in ${serviceError.source}: ${errorMsg}`);\r\n\r\n    // Emit error event;\r\n    this.serviceRegistry.emit('error', {\r\n      ...serviceError,\r\n      error: errorMsg,\r\n      timestamp: Date.now(),\r\n    });\r\n  }\r\n\r\n  protected async retry<T>(\r\n    operation: () => Promise<T>,\r\n    maxRetries: number = 3,\r\n    delay: number = 1000\r\n  ): Promise<T> {\r\n    let _lastError: unknown;\r\n    let lastError: unknown;\r\n    for (let i = 0; i < maxRetries; i++) {\r\n      try {\r\n        return await operation();\r\n      } catch (error) {\r\n        lastError = error;\r\n        if (i < maxRetries - 1) {\r\n          await new Promise(resolve => setTimeout(resolve, delay * (i + 1)));\r\n        }\r\n      }\r\n    }\r\n    throw lastError;\r\n  }\r\n\r\n  protected getCacheKey(...parts: (string | number)[]): string {\r\n    return `${this.name}:${parts.join(':')}`;\r\n  }\r\n\r\n  protected async withCache<T>(key: string, operation: () => Promise<T>, ttl?: number): Promise<T> {\r\n    const cached = this.cache.get(key);\r\n    if (typeof cached !== 'undefined' && cached !== null) return cached as T;\r\n\r\n    const result = await operation();\r\n    this.cache.set(key, result, ttl);\r\n    return result;\r\n  }\r\n\r\n  // Lifecycle methods;\r\n  async initialize(): Promise<void> {\r\n    this.logger.info(`Initializing ${this.name} service`, this.name);\r\n    // Override in derived classes if needed;\r\n  }\r\n\r\n  async cleanup(): Promise<void> {\r\n    this.logger.info(`Cleaning up ${this.name} service`, this.name);\r\n    // Override in derived classes if needed;\r\n  }\r\n\r\n  protected async handleRequest<T>(request: () => Promise<T>): Promise<T> {\r\n    try {\r\n      return await request();\r\n    } catch (error) {\r\n      this.logger.error('Request failed:', error);\r\n      throw error;\r\n    }\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]}