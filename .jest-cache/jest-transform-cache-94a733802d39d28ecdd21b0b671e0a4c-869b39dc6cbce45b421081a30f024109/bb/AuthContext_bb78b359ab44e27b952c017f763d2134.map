{"version":3,"names":["_react","_interopRequireWildcard","require","_authService","_logger","_jsxRuntime","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","register","_email","_password","Promise","resolve","_AuthContext","exports","createContext","undefined","useAuthState","user","setUser","useState","loading","setLoading","error","setError","isAdmin","setIsAdmin","isAuthenticated","setIsAuthenticated","requiresPasswordChange","setRequiresPasswordChange","useEffect","globalState","window","__A1_AUTH_RESTORED","_initializeAuth","authService","_storedUser","getUser","logger","info","email","role","userId","id","process","env","NODE_ENV","setTimeout","login","password","_response","success","permissions","includes","Error","message","logout","changePassword","data","_updatedUser","clearError","AuthProvider","children","contextValue","jsx","Provider","value","_AuthProvider","useAuth","ctx","useContext"],"sources":["AuthContext.tsx"],"sourcesContent":["/**\r\n * Authentication context and provider for managing user authentication state and actions.\r\n *\r\n * Provides login, logout, registration, and password management for the app.\r\n *\r\n * @module contexts/AuthContext\r\n */\r\nimport React, { createContext, ReactNode, useContext, useEffect, useState } from 'react';\r\nimport {\r\n  AuthResponse,\r\n  _authService as authService,\r\n  PasswordChangeRequest,\r\n  User,\r\n} from '../services/authService';\r\nimport { logger } from '../utils/logger';\r\n\r\n/**\r\n * AuthContextType\r\n * Provides authentication state and actions for the app.\r\n */\r\nexport interface AuthContextType {\r\n  user: User | null;\r\n  loading: boolean;\r\n  error: string | null;\r\n  isAdmin: boolean;\r\n  isAuthenticated: boolean;\r\n  requiresPasswordChange: boolean;\r\n  login: (email: string, password: string) => Promise<void>;\r\n  logout: () => Promise<void>;\r\n  changePassword: (data: PasswordChangeRequest) => Promise<void>;\r\n  clearError: () => void;\r\n  register: (email: string, password: string) => Promise<void>;\r\n}\r\n// Stub register method for test compatibility\r\nconst register = async (_email: string, _password: string) => {\r\n  // In a real implementation, this would call an API endpoint\r\n  return Promise.resolve();\r\n};\r\n\r\n/**\r\n * React context for authentication state and actions.\r\n */\r\nexport const _AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\n/**\r\n * AuthProvider component.\r\n * Wrap your app with this provider to enable authentication state and actions.\r\n * @param {object} props - React children.\r\n * @returns {JSX.Element} The provider component.\r\n */\r\n/**\r\n * useAuthState\r\n * Custom hook to encapsulate authentication state logic for modularity and testability.\r\n */\r\nfunction useAuthState(): AuthContextType {\r\n  const [user, setUser] = useState<User | null>(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [requiresPasswordChange, setRequiresPasswordChange] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Skip auth restoration if bootstrap already handled it\r\n    const globalState = window as typeof window & { __A1_AUTH_RESTORED?: boolean };\r\n    if (typeof window !== 'undefined' && globalState.__A1_AUTH_RESTORED) {\r\n      return;\r\n    }\r\n\r\n    const _initializeAuth = () => {\r\n      if (authService.isAuthenticated()) {\r\n        const _storedUser = authService.getUser();\r\n        if (_storedUser) {\r\n          setUser(_storedUser);\r\n          setIsAdmin(authService.isAdmin());\r\n          setIsAuthenticated(true);\r\n          setRequiresPasswordChange(authService.requiresPasswordChange());\r\n          \r\n          // Mark as restored to prevent duplicate logs\r\n          if (typeof window !== 'undefined') {\r\n            globalState.__A1_AUTH_RESTORED = true;\r\n          }\r\n          \r\n          // Structured logging for audit (only if not already restored by bootstrap)\r\n          logger.info(\r\n            '🔐 Authentication restored',\r\n            {\r\n              email: _storedUser.email,\r\n              role: _storedUser.role,\r\n              userId: _storedUser.id,\r\n            },\r\n            'Auth'\r\n          );\r\n        }\r\n      }\r\n    };\r\n    // In tests we want immediate auth restoration to avoid timing flakiness\r\n    if (process.env.NODE_ENV === 'test') {\r\n      _initializeAuth();\r\n    } else {\r\n      setTimeout(_initializeAuth, 100);\r\n    }\r\n  }, []);\r\n\r\n  const login = async (email: string, password: string) => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const _response: AuthResponse = await authService.login(email, password);\r\n      if (_response.success && _response.user) {\r\n        setUser(_response.user);\r\n        setIsAdmin(\r\n          _response.user.role === 'admin' || _response.user.permissions?.includes('admin') || false\r\n        );\r\n        setIsAuthenticated(true);\r\n        setRequiresPasswordChange(_response.requiresPasswordChange || false);\r\n      } else {\r\n        throw new Error(_response.message || 'Login failed');\r\n      }\r\n    } catch (e: unknown) {\r\n      setError((e as Error).message || 'Login failed');\r\n      throw e;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const logout = async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      await authService.logout();\r\n      setUser(null);\r\n      setIsAdmin(false);\r\n      setIsAuthenticated(false);\r\n      setRequiresPasswordChange(false);\r\n    } catch (e: unknown) {\r\n      setError((e as Error).message || 'Logout failed');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const changePassword = async (data: PasswordChangeRequest) => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const _response: AuthResponse = await authService.changePassword(data);\r\n      if (_response.success) {\r\n        const _updatedUser = authService.getUser();\r\n        if (_updatedUser) {\r\n          setUser(_updatedUser);\r\n          setRequiresPasswordChange(false);\r\n        }\r\n      } else {\r\n        throw new Error(_response.message || 'Password change failed');\r\n      }\r\n    } catch (e: unknown) {\r\n      setError((e as Error).message || 'Password change failed');\r\n      throw e;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const clearError = () => {\r\n    setError(null);\r\n  };\r\n\r\n  return {\r\n    user,\r\n    loading,\r\n    error,\r\n    isAdmin,\r\n    isAuthenticated,\r\n    requiresPasswordChange,\r\n    login,\r\n    logout,\r\n    changePassword,\r\n    clearError,\r\n    register,\r\n  };\r\n}\r\n\r\n/**\r\n * AuthProvider component.\r\n * Wrap your app with this provider to enable authentication state and actions.\r\n * Uses useAuthState for modularity and testability.\r\n * @param {object} props - React children.\r\n * @returns {JSX.Element} The provider component.\r\n */\r\nconst AuthProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\r\n  const contextValue = useAuthState();\r\n  return <_AuthContext.Provider value={contextValue}>{children}</_AuthContext.Provider>;\r\n};\r\n\r\nexport const _AuthProvider = AuthProvider;\r\n\r\n/**\r\n * useAuth\r\n * Access the authentication context in any component.\r\n */\r\nexport const useAuth = () => {\r\n  const ctx = useContext(_AuthContext);\r\n  if (!ctx) throw new Error('useAuth must be used within AuthProvider');\r\n  return ctx;\r\n};\r\n"],"mappings":"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","ignoreList":[]}