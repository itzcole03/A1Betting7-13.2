a98e72049475d317e88a971b92058204
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.WS_URL = exports.WS_BASE_URL = exports.DEV_CONFIG = exports.API_BASE_URL = void 0;
var _getEnv = require("../bootstrap/getEnv");
/**
 * Unified API Configuration
 * Centralizes API base URL and WebSocket URL configuration with environment variable support
 */

// API Base URL configuration
const API_BASE_URL = exports.API_BASE_URL = (0, _getEnv.getEnvVar)('VITE_API_BASE_URL', 'http://localhost:8000');

// WebSocket URL configuration with protocol derivation
const deriveWSUrl = apiBaseUrl => {
  const wsUrl = (0, _getEnv.getEnvVar)('VITE_WS_URL');
  if (wsUrl) return wsUrl;

  // Derive WebSocket URL from API base URL
  const protocol = window.location.protocol === "https:" ? "wss" : "ws";
  return apiBaseUrl.replace(/^https?/, protocol) + "/ws";
};
const WS_URL = exports.WS_URL = deriveWSUrl(API_BASE_URL);

// Export individual components for backward compatibility
const WS_BASE_URL = exports.WS_BASE_URL = WS_URL.replace("/ws", "");

// Development configuration
const DEV_CONFIG = exports.DEV_CONFIG = {
  API_BASE_URL,
  WS_URL,
  WS_BASE_URL,
  IS_DEVELOPMENT: Boolean((0, _getEnv.getEnvVar)('DEV') || (0, _getEnv.getEnvVar)('VITE_DEV') || false),
  IS_PRODUCTION: Boolean((0, _getEnv.getEnvVar)('PROD') || (0, _getEnv.getEnvVar)('VITE_PROD') || false)
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfZ2V0RW52IiwicmVxdWlyZSIsIkFQSV9CQVNFX1VSTCIsImV4cG9ydHMiLCJnZXRFbnZWYXIiLCJkZXJpdmVXU1VybCIsImFwaUJhc2VVcmwiLCJ3c1VybCIsInByb3RvY29sIiwid2luZG93IiwibG9jYXRpb24iLCJyZXBsYWNlIiwiV1NfVVJMIiwiV1NfQkFTRV9VUkwiLCJERVZfQ09ORklHIiwiSVNfREVWRUxPUE1FTlQiLCJCb29sZWFuIiwiSVNfUFJPRFVDVElPTiJdLCJzb3VyY2VzIjpbImFwaUNvbmZpZy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogVW5pZmllZCBBUEkgQ29uZmlndXJhdGlvblxyXG4gKiBDZW50cmFsaXplcyBBUEkgYmFzZSBVUkwgYW5kIFdlYlNvY2tldCBVUkwgY29uZmlndXJhdGlvbiB3aXRoIGVudmlyb25tZW50IHZhcmlhYmxlIHN1cHBvcnRcclxuICovXHJcblxyXG5pbXBvcnQgeyBnZXRFbnZWYXIgfSBmcm9tICcuLi9ib290c3RyYXAvZ2V0RW52JztcclxuXHJcbi8vIEFQSSBCYXNlIFVSTCBjb25maWd1cmF0aW9uXHJcbmV4cG9ydCBjb25zdCBBUElfQkFTRV9VUkwgPSBnZXRFbnZWYXIoJ1ZJVEVfQVBJX0JBU0VfVVJMJywgJ2h0dHA6Ly9sb2NhbGhvc3Q6ODAwMCcpIGFzIHN0cmluZztcclxuXHJcbi8vIFdlYlNvY2tldCBVUkwgY29uZmlndXJhdGlvbiB3aXRoIHByb3RvY29sIGRlcml2YXRpb25cclxuY29uc3QgZGVyaXZlV1NVcmwgPSAoYXBpQmFzZVVybDogc3RyaW5nKTogc3RyaW5nID0+IHtcclxuICBjb25zdCB3c1VybCA9IGdldEVudlZhcignVklURV9XU19VUkwnKTtcclxuICBpZiAod3NVcmwpIHJldHVybiB3c1VybDtcclxuICBcclxuICAvLyBEZXJpdmUgV2ViU29ja2V0IFVSTCBmcm9tIEFQSSBiYXNlIFVSTFxyXG4gIGNvbnN0IHByb3RvY29sID0gd2luZG93LmxvY2F0aW9uLnByb3RvY29sID09PSBcImh0dHBzOlwiID8gXCJ3c3NcIiA6IFwid3NcIjtcclxuICByZXR1cm4gYXBpQmFzZVVybC5yZXBsYWNlKC9eaHR0cHM/LywgcHJvdG9jb2wpICsgXCIvd3NcIjtcclxufTtcclxuXHJcbmV4cG9ydCBjb25zdCBXU19VUkwgPSBkZXJpdmVXU1VybChBUElfQkFTRV9VUkwpO1xyXG5cclxuLy8gRXhwb3J0IGluZGl2aWR1YWwgY29tcG9uZW50cyBmb3IgYmFja3dhcmQgY29tcGF0aWJpbGl0eVxyXG5leHBvcnQgY29uc3QgV1NfQkFTRV9VUkwgPSBXU19VUkwucmVwbGFjZShcIi93c1wiLCBcIlwiKTtcclxuXHJcbi8vIERldmVsb3BtZW50IGNvbmZpZ3VyYXRpb25cclxuZXhwb3J0IGNvbnN0IERFVl9DT05GSUcgPSB7XHJcbiAgQVBJX0JBU0VfVVJMLFxyXG4gIFdTX1VSTCxcclxuICBXU19CQVNFX1VSTCxcclxuICBJU19ERVZFTE9QTUVOVDogQm9vbGVhbihnZXRFbnZWYXIoJ0RFVicpIHx8IGdldEVudlZhcignVklURV9ERVYnKSB8fCBmYWxzZSksXHJcbiAgSVNfUFJPRFVDVElPTjogQm9vbGVhbihnZXRFbnZWYXIoJ1BST0QnKSB8fCBnZXRFbnZWYXIoJ1ZJVEVfUFJPRCcpIHx8IGZhbHNlKSxcclxufSBhcyBjb25zdDsiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUtBLElBQUFBLE9BQUEsR0FBQUMsT0FBQTtBQUxBO0FBQ0E7QUFDQTtBQUNBOztBQUlBO0FBQ08sTUFBTUMsWUFBWSxHQUFBQyxPQUFBLENBQUFELFlBQUEsR0FBRyxJQUFBRSxpQkFBUyxFQUFDLG1CQUFtQixFQUFFLHVCQUF1QixDQUFXOztBQUU3RjtBQUNBLE1BQU1DLFdBQVcsR0FBSUMsVUFBa0IsSUFBYTtFQUNsRCxNQUFNQyxLQUFLLEdBQUcsSUFBQUgsaUJBQVMsRUFBQyxhQUFhLENBQUM7RUFDdEMsSUFBSUcsS0FBSyxFQUFFLE9BQU9BLEtBQUs7O0VBRXZCO0VBQ0EsTUFBTUMsUUFBUSxHQUFHQyxNQUFNLENBQUNDLFFBQVEsQ0FBQ0YsUUFBUSxLQUFLLFFBQVEsR0FBRyxLQUFLLEdBQUcsSUFBSTtFQUNyRSxPQUFPRixVQUFVLENBQUNLLE9BQU8sQ0FBQyxTQUFTLEVBQUVILFFBQVEsQ0FBQyxHQUFHLEtBQUs7QUFDeEQsQ0FBQztBQUVNLE1BQU1JLE1BQU0sR0FBQVQsT0FBQSxDQUFBUyxNQUFBLEdBQUdQLFdBQVcsQ0FBQ0gsWUFBWSxDQUFDOztBQUUvQztBQUNPLE1BQU1XLFdBQVcsR0FBQVYsT0FBQSxDQUFBVSxXQUFBLEdBQUdELE1BQU0sQ0FBQ0QsT0FBTyxDQUFDLEtBQUssRUFBRSxFQUFFLENBQUM7O0FBRXBEO0FBQ08sTUFBTUcsVUFBVSxHQUFBWCxPQUFBLENBQUFXLFVBQUEsR0FBRztFQUN4QlosWUFBWTtFQUNaVSxNQUFNO0VBQ05DLFdBQVc7RUFDWEUsY0FBYyxFQUFFQyxPQUFPLENBQUMsSUFBQVosaUJBQVMsRUFBQyxLQUFLLENBQUMsSUFBSSxJQUFBQSxpQkFBUyxFQUFDLFVBQVUsQ0FBQyxJQUFJLEtBQUssQ0FBQztFQUMzRWEsYUFBYSxFQUFFRCxPQUFPLENBQUMsSUFBQVosaUJBQVMsRUFBQyxNQUFNLENBQUMsSUFBSSxJQUFBQSxpQkFBUyxFQUFDLFdBQVcsQ0FBQyxJQUFJLEtBQUs7QUFDN0UsQ0FBVSIsImlnbm9yZUxpc3QiOltdfQ==