ae6b037b1c149627be58bf8f01160a12
"use strict";
// Centralized environment variable access with Jest compatibility
// This file provides a safe way to access Vite environment variables in both Vite and Jest environments
Object.defineProperty(exports, "__esModule", { value: true });
exports.VITE_SOCIAL_API_ENDPOINT = exports.VITE_ESPN_API_ENDPOINT = exports.VITE_ODDS_API_ENDPOINT = exports.VITE_SPORTRADAR_API_ENDPOINT = exports.VITE_DISABLE_SOCIAL_SENTIMENT = exports.VITE_ENABLE_SENTIMENT = exports.VITE_SENTIMENT_API_KEY = exports.VITE_SENTIMENT_API_URL = exports.VITE_PRIZEPICKS_API_URL = exports.VITE_PRIZEPICKS_API_KEY = exports.VITE_DAILYFANTASY_API_KEY = exports.VITE_SPORTRADAR_API_KEY = exports.VITE_THEODDS_API_KEY = exports.VITE_WS_URL = exports.VITE_WS_ENDPOINT = exports.VITE_API_URL = void 0;
// Environment variable defaults for testing
const defaultValues = {
    VITE_API_URL: 'http://localhost:8000',
    VITE_WS_ENDPOINT: 'ws://localhost:8000/ws',
    VITE_WS_URL: 'ws://localhost:8000/ws',
    VITE_THEODDS_API_KEY: undefined,
    VITE_SPORTRADAR_API_KEY: undefined,
    VITE_DAILYFANTASY_API_KEY: undefined,
    VITE_PRIZEPICKS_API_KEY: undefined,
    VITE_PRIZEPICKS_API_URL: undefined,
    VITE_SENTIMENT_API_URL: undefined,
    VITE_SENTIMENT_API_KEY: undefined,
    VITE_ENABLE_SENTIMENT: undefined,
    VITE_DISABLE_SOCIAL_SENTIMENT: undefined,
    VITE_SPORTRADAR_API_ENDPOINT: undefined,
    VITE_ODDS_API_ENDPOINT: undefined,
    VITE_ESPN_API_ENDPOINT: undefined,
    VITE_SOCIAL_API_ENDPOINT: undefined,
};
// Function to get environment variables safely
const getEnvVar = (key) => {
    // Check if we're in a test environment (Jest)
    if (typeof process !== 'undefined' && process.env.NODE_ENV === 'test') {
        return defaultValues[key];
    }
    // Use import.meta.env for Vite environments, fallback to defaults
    if (process.env.NODE_ENV === 'test') {
        // In Jest test environment, use process.env
        return process.env[key] || defaultValues[key];
    }
    // In Vite environment, try to access import.meta.env
    try {
        // Use dynamic evaluation to avoid Jest parsing issues
        const importMeta = new Function('return import.meta')();
        if (importMeta && importMeta.env) {
            return importMeta.env[key] || defaultValues[key];
        }
    }
    catch (e) {
        // Fallback if import.meta is not available
    }
    // Fallback for environments where import.meta might not be available
    return defaultValues[key];
};
exports.VITE_API_URL = getEnvVar('VITE_API_URL');
exports.VITE_WS_ENDPOINT = getEnvVar('VITE_WS_ENDPOINT');
exports.VITE_WS_URL = getEnvVar('VITE_WS_URL');
exports.VITE_THEODDS_API_KEY = getEnvVar('VITE_THEODDS_API_KEY');
exports.VITE_SPORTRADAR_API_KEY = getEnvVar('VITE_SPORTRADAR_API_KEY');
exports.VITE_DAILYFANTASY_API_KEY = getEnvVar('VITE_DAILYFANTASY_API_KEY');
exports.VITE_PRIZEPICKS_API_KEY = getEnvVar('VITE_PRIZEPICKS_API_KEY');
exports.VITE_PRIZEPICKS_API_URL = getEnvVar('VITE_PRIZEPICKS_API_URL');
exports.VITE_SENTIMENT_API_URL = getEnvVar('VITE_SENTIMENT_API_URL');
exports.VITE_SENTIMENT_API_KEY = getEnvVar('VITE_SENTIMENT_API_KEY');
exports.VITE_ENABLE_SENTIMENT = getEnvVar('VITE_ENABLE_SENTIMENT');
exports.VITE_DISABLE_SOCIAL_SENTIMENT = getEnvVar('VITE_DISABLE_SOCIAL_SENTIMENT');
exports.VITE_SPORTRADAR_API_ENDPOINT = getEnvVar('VITE_SPORTRADAR_API_ENDPOINT');
exports.VITE_ODDS_API_ENDPOINT = getEnvVar('VITE_ODDS_API_ENDPOINT');
exports.VITE_ESPN_API_ENDPOINT = getEnvVar('VITE_ESPN_API_ENDPOINT');
exports.VITE_SOCIAL_API_ENDPOINT = getEnvVar('VITE_SOCIAL_API_ENDPOINT');
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiQzpcXFVzZXJzXFxiY21hZFxcRG93bmxvYWRzXFxBMUJldHRpbmc3LTEzLjJcXGZyb250ZW5kXFxzcmNcXGNvbnN0YW50cy50cyIsIm1hcHBpbmdzIjoiO0FBQUEsa0VBQWtFO0FBQ2xFLHdHQUF3Rzs7O0FBRXhHLDRDQUE0QztBQUM1QyxNQUFNLGFBQWEsR0FBRztJQUNwQixZQUFZLEVBQUUsdUJBQXVCO0lBQ3JDLGdCQUFnQixFQUFFLHdCQUF3QjtJQUMxQyxXQUFXLEVBQUUsd0JBQXdCO0lBQ3JDLG9CQUFvQixFQUFFLFNBQVM7SUFDL0IsdUJBQXVCLEVBQUUsU0FBUztJQUNsQyx5QkFBeUIsRUFBRSxTQUFTO0lBQ3BDLHVCQUF1QixFQUFFLFNBQVM7SUFDbEMsdUJBQXVCLEVBQUUsU0FBUztJQUNsQyxzQkFBc0IsRUFBRSxTQUFTO0lBQ2pDLHNCQUFzQixFQUFFLFNBQVM7SUFDakMscUJBQXFCLEVBQUUsU0FBUztJQUNoQyw2QkFBNkIsRUFBRSxTQUFTO0lBQ3hDLDRCQUE0QixFQUFFLFNBQVM7SUFDdkMsc0JBQXNCLEVBQUUsU0FBUztJQUNqQyxzQkFBc0IsRUFBRSxTQUFTO0lBQ2pDLHdCQUF3QixFQUFFLFNBQVM7Q0FDM0IsQ0FBQztBQUVYLCtDQUErQztBQUMvQyxNQUFNLFNBQVMsR0FBRyxDQUFDLEdBQStCLEVBQXNCLEVBQUU7SUFDeEUsOENBQThDO0lBQzlDLElBQUksT0FBTyxPQUFPLEtBQUssV0FBVyxJQUFJLE9BQU8sQ0FBQyxHQUFHLENBQUMsUUFBUSxLQUFLLE1BQU0sRUFBRSxDQUFDO1FBQ3RFLE9BQU8sYUFBYSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQzVCLENBQUM7SUFFRCxrRUFBa0U7SUFDbEUsSUFBSSxPQUFPLENBQUMsR0FBRyxDQUFDLFFBQVEsS0FBSyxNQUFNLEVBQUUsQ0FBQztRQUNwQyw0Q0FBNEM7UUFDNUMsT0FBTyxPQUFPLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxJQUFJLGFBQWEsQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUNoRCxDQUFDO0lBRUQscURBQXFEO0lBQ3JELElBQUksQ0FBQztRQUNILHNEQUFzRDtRQUN0RCxNQUFNLFVBQVUsR0FBRyxJQUFJLFFBQVEsQ0FBQyxvQkFBb0IsQ0FBQyxFQUFFLENBQUM7UUFDeEQsSUFBSSxVQUFVLElBQUksVUFBVSxDQUFDLEdBQUcsRUFBRSxDQUFDO1lBQ2pDLE9BQU8sVUFBVSxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsSUFBSSxhQUFhLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDbkQsQ0FBQztJQUNILENBQUM7SUFBQyxPQUFPLENBQUMsRUFBRSxDQUFDO1FBQ1gsMkNBQTJDO0lBQzdDLENBQUM7SUFFRCxxRUFBcUU7SUFDckUsT0FBTyxhQUFhLENBQUMsR0FBRyxDQUFDLENBQUM7QUFDNUIsQ0FBQyxDQUFDO0FBRVcsUUFBQSxZQUFZLEdBQUcsU0FBUyxDQUFDLGNBQWMsQ0FBRSxDQUFDO0FBQzFDLFFBQUEsZ0JBQWdCLEdBQUcsU0FBUyxDQUFDLGtCQUFrQixDQUFFLENBQUM7QUFDbEQsUUFBQSxXQUFXLEdBQUcsU0FBUyxDQUFDLGFBQWEsQ0FBRSxDQUFDO0FBQ3hDLFFBQUEsb0JBQW9CLEdBQUcsU0FBUyxDQUFDLHNCQUFzQixDQUFDLENBQUM7QUFDekQsUUFBQSx1QkFBdUIsR0FBRyxTQUFTLENBQUMseUJBQXlCLENBQUMsQ0FBQztBQUMvRCxRQUFBLHlCQUF5QixHQUFHLFNBQVMsQ0FBQywyQkFBMkIsQ0FBQyxDQUFDO0FBQ25FLFFBQUEsdUJBQXVCLEdBQUcsU0FBUyxDQUFDLHlCQUF5QixDQUFDLENBQUM7QUFDL0QsUUFBQSx1QkFBdUIsR0FBRyxTQUFTLENBQUMseUJBQXlCLENBQUMsQ0FBQztBQUMvRCxRQUFBLHNCQUFzQixHQUFHLFNBQVMsQ0FBQyx3QkFBd0IsQ0FBQyxDQUFDO0FBQzdELFFBQUEsc0JBQXNCLEdBQUcsU0FBUyxDQUFDLHdCQUF3QixDQUFDLENBQUM7QUFDN0QsUUFBQSxxQkFBcUIsR0FBRyxTQUFTLENBQUMsdUJBQXVCLENBQUMsQ0FBQztBQUMzRCxRQUFBLDZCQUE2QixHQUFHLFNBQVMsQ0FBQywrQkFBK0IsQ0FBQyxDQUFDO0FBQzNFLFFBQUEsNEJBQTRCLEdBQUcsU0FBUyxDQUFDLDhCQUE4QixDQUFDLENBQUM7QUFDekUsUUFBQSxzQkFBc0IsR0FBRyxTQUFTLENBQUMsd0JBQXdCLENBQUMsQ0FBQztBQUM3RCxRQUFBLHNCQUFzQixHQUFHLFNBQVMsQ0FBQyx3QkFBd0IsQ0FBQyxDQUFDO0FBQzdELFFBQUEsd0JBQXdCLEdBQUcsU0FBUyxDQUFDLDBCQUEwQixDQUFDLENBQUMiLCJuYW1lcyI6W10sInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxiY21hZFxcRG93bmxvYWRzXFxBMUJldHRpbmc3LTEzLjJcXGZyb250ZW5kXFxzcmNcXGNvbnN0YW50cy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDZW50cmFsaXplZCBlbnZpcm9ubWVudCB2YXJpYWJsZSBhY2Nlc3Mgd2l0aCBKZXN0IGNvbXBhdGliaWxpdHlcclxuLy8gVGhpcyBmaWxlIHByb3ZpZGVzIGEgc2FmZSB3YXkgdG8gYWNjZXNzIFZpdGUgZW52aXJvbm1lbnQgdmFyaWFibGVzIGluIGJvdGggVml0ZSBhbmQgSmVzdCBlbnZpcm9ubWVudHNcclxuXHJcbi8vIEVudmlyb25tZW50IHZhcmlhYmxlIGRlZmF1bHRzIGZvciB0ZXN0aW5nXHJcbmNvbnN0IGRlZmF1bHRWYWx1ZXMgPSB7XHJcbiAgVklURV9BUElfVVJMOiAnaHR0cDovL2xvY2FsaG9zdDo4MDAwJyxcclxuICBWSVRFX1dTX0VORFBPSU5UOiAnd3M6Ly9sb2NhbGhvc3Q6ODAwMC93cycsXHJcbiAgVklURV9XU19VUkw6ICd3czovL2xvY2FsaG9zdDo4MDAwL3dzJyxcclxuICBWSVRFX1RIRU9ERFNfQVBJX0tFWTogdW5kZWZpbmVkLFxyXG4gIFZJVEVfU1BPUlRSQURBUl9BUElfS0VZOiB1bmRlZmluZWQsXHJcbiAgVklURV9EQUlMWUZBTlRBU1lfQVBJX0tFWTogdW5kZWZpbmVkLFxyXG4gIFZJVEVfUFJJWkVQSUNLU19BUElfS0VZOiB1bmRlZmluZWQsXHJcbiAgVklURV9QUklaRVBJQ0tTX0FQSV9VUkw6IHVuZGVmaW5lZCxcclxuICBWSVRFX1NFTlRJTUVOVF9BUElfVVJMOiB1bmRlZmluZWQsXHJcbiAgVklURV9TRU5USU1FTlRfQVBJX0tFWTogdW5kZWZpbmVkLFxyXG4gIFZJVEVfRU5BQkxFX1NFTlRJTUVOVDogdW5kZWZpbmVkLFxyXG4gIFZJVEVfRElTQUJMRV9TT0NJQUxfU0VOVElNRU5UOiB1bmRlZmluZWQsXHJcbiAgVklURV9TUE9SVFJBREFSX0FQSV9FTkRQT0lOVDogdW5kZWZpbmVkLFxyXG4gIFZJVEVfT0REU19BUElfRU5EUE9JTlQ6IHVuZGVmaW5lZCxcclxuICBWSVRFX0VTUE5fQVBJX0VORFBPSU5UOiB1bmRlZmluZWQsXHJcbiAgVklURV9TT0NJQUxfQVBJX0VORFBPSU5UOiB1bmRlZmluZWQsXHJcbn0gYXMgY29uc3Q7XHJcblxyXG4vLyBGdW5jdGlvbiB0byBnZXQgZW52aXJvbm1lbnQgdmFyaWFibGVzIHNhZmVseVxyXG5jb25zdCBnZXRFbnZWYXIgPSAoa2V5OiBrZXlvZiB0eXBlb2YgZGVmYXVsdFZhbHVlcyk6IHN0cmluZyB8IHVuZGVmaW5lZCA9PiB7XHJcbiAgLy8gQ2hlY2sgaWYgd2UncmUgaW4gYSB0ZXN0IGVudmlyb25tZW50IChKZXN0KVxyXG4gIGlmICh0eXBlb2YgcHJvY2VzcyAhPT0gJ3VuZGVmaW5lZCcgJiYgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICd0ZXN0Jykge1xyXG4gICAgcmV0dXJuIGRlZmF1bHRWYWx1ZXNba2V5XTtcclxuICB9XHJcblxyXG4gIC8vIFVzZSBpbXBvcnQubWV0YS5lbnYgZm9yIFZpdGUgZW52aXJvbm1lbnRzLCBmYWxsYmFjayB0byBkZWZhdWx0c1xyXG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Rlc3QnKSB7XHJcbiAgICAvLyBJbiBKZXN0IHRlc3QgZW52aXJvbm1lbnQsIHVzZSBwcm9jZXNzLmVudlxyXG4gICAgcmV0dXJuIHByb2Nlc3MuZW52W2tleV0gfHwgZGVmYXVsdFZhbHVlc1trZXldO1xyXG4gIH1cclxuXHJcbiAgLy8gSW4gVml0ZSBlbnZpcm9ubWVudCwgdHJ5IHRvIGFjY2VzcyBpbXBvcnQubWV0YS5lbnZcclxuICB0cnkge1xyXG4gICAgLy8gVXNlIGR5bmFtaWMgZXZhbHVhdGlvbiB0byBhdm9pZCBKZXN0IHBhcnNpbmcgaXNzdWVzXHJcbiAgICBjb25zdCBpbXBvcnRNZXRhID0gbmV3IEZ1bmN0aW9uKCdyZXR1cm4gaW1wb3J0Lm1ldGEnKSgpO1xyXG4gICAgaWYgKGltcG9ydE1ldGEgJiYgaW1wb3J0TWV0YS5lbnYpIHtcclxuICAgICAgcmV0dXJuIGltcG9ydE1ldGEuZW52W2tleV0gfHwgZGVmYXVsdFZhbHVlc1trZXldO1xyXG4gICAgfVxyXG4gIH0gY2F0Y2ggKGUpIHtcclxuICAgIC8vIEZhbGxiYWNrIGlmIGltcG9ydC5tZXRhIGlzIG5vdCBhdmFpbGFibGVcclxuICB9XHJcblxyXG4gIC8vIEZhbGxiYWNrIGZvciBlbnZpcm9ubWVudHMgd2hlcmUgaW1wb3J0Lm1ldGEgbWlnaHQgbm90IGJlIGF2YWlsYWJsZVxyXG4gIHJldHVybiBkZWZhdWx0VmFsdWVzW2tleV07XHJcbn07XHJcblxyXG5leHBvcnQgY29uc3QgVklURV9BUElfVVJMID0gZ2V0RW52VmFyKCdWSVRFX0FQSV9VUkwnKSE7XHJcbmV4cG9ydCBjb25zdCBWSVRFX1dTX0VORFBPSU5UID0gZ2V0RW52VmFyKCdWSVRFX1dTX0VORFBPSU5UJykhO1xyXG5leHBvcnQgY29uc3QgVklURV9XU19VUkwgPSBnZXRFbnZWYXIoJ1ZJVEVfV1NfVVJMJykhO1xyXG5leHBvcnQgY29uc3QgVklURV9USEVPRERTX0FQSV9LRVkgPSBnZXRFbnZWYXIoJ1ZJVEVfVEhFT0REU19BUElfS0VZJyk7XHJcbmV4cG9ydCBjb25zdCBWSVRFX1NQT1JUUkFEQVJfQVBJX0tFWSA9IGdldEVudlZhcignVklURV9TUE9SVFJBREFSX0FQSV9LRVknKTtcclxuZXhwb3J0IGNvbnN0IFZJVEVfREFJTFlGQU5UQVNZX0FQSV9LRVkgPSBnZXRFbnZWYXIoJ1ZJVEVfREFJTFlGQU5UQVNZX0FQSV9LRVknKTtcclxuZXhwb3J0IGNvbnN0IFZJVEVfUFJJWkVQSUNLU19BUElfS0VZID0gZ2V0RW52VmFyKCdWSVRFX1BSSVpFUElDS1NfQVBJX0tFWScpO1xyXG5leHBvcnQgY29uc3QgVklURV9QUklaRVBJQ0tTX0FQSV9VUkwgPSBnZXRFbnZWYXIoJ1ZJVEVfUFJJWkVQSUNLU19BUElfVVJMJyk7XHJcbmV4cG9ydCBjb25zdCBWSVRFX1NFTlRJTUVOVF9BUElfVVJMID0gZ2V0RW52VmFyKCdWSVRFX1NFTlRJTUVOVF9BUElfVVJMJyk7XHJcbmV4cG9ydCBjb25zdCBWSVRFX1NFTlRJTUVOVF9BUElfS0VZID0gZ2V0RW52VmFyKCdWSVRFX1NFTlRJTUVOVF9BUElfS0VZJyk7XHJcbmV4cG9ydCBjb25zdCBWSVRFX0VOQUJMRV9TRU5USU1FTlQgPSBnZXRFbnZWYXIoJ1ZJVEVfRU5BQkxFX1NFTlRJTUVOVCcpO1xyXG5leHBvcnQgY29uc3QgVklURV9ESVNBQkxFX1NPQ0lBTF9TRU5USU1FTlQgPSBnZXRFbnZWYXIoJ1ZJVEVfRElTQUJMRV9TT0NJQUxfU0VOVElNRU5UJyk7XHJcbmV4cG9ydCBjb25zdCBWSVRFX1NQT1JUUkFEQVJfQVBJX0VORFBPSU5UID0gZ2V0RW52VmFyKCdWSVRFX1NQT1JUUkFEQVJfQVBJX0VORFBPSU5UJyk7XHJcbmV4cG9ydCBjb25zdCBWSVRFX09ERFNfQVBJX0VORFBPSU5UID0gZ2V0RW52VmFyKCdWSVRFX09ERFNfQVBJX0VORFBPSU5UJyk7XHJcbmV4cG9ydCBjb25zdCBWSVRFX0VTUE5fQVBJX0VORFBPSU5UID0gZ2V0RW52VmFyKCdWSVRFX0VTUE5fQVBJX0VORFBPSU5UJyk7XHJcbmV4cG9ydCBjb25zdCBWSVRFX1NPQ0lBTF9BUElfRU5EUE9JTlQgPSBnZXRFbnZWYXIoJ1ZJVEVfU09DSUFMX0FQSV9FTkRQT0lOVCcpO1xyXG4iXSwidmVyc2lvbiI6M30=