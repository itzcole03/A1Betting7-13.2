eade7245df7693f7de3f4ffbb4dffde5
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = _interopRequireDefault(require("react"));
var _leanMode = require("../utils/leanMode");
var _jsxRuntime = require("react/jsx-runtime");
/**
 * Lean Mode Banner Component
 * Displays a small fixed ribbon when lean mode is active (development only)
 */

const LeanModeBanner = () => {
  // Only show in development and when lean mode is active
  // Avoid direct `import.meta` usage to keep Jest/Babel parsing stable in test envs
  const isProd = typeof global.importMeta !== 'undefined' && global.importMeta.env && global.importMeta.env.PROD || process.env.NODE_ENV === 'production';
  if (isProd || !(0, _leanMode.isLeanMode)()) {
    return null;
  }
  return /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
    style: {
      position: 'fixed',
      top: 0,
      right: 0,
      backgroundColor: '#ff6b35',
      color: 'white',
      padding: '4px 12px',
      fontSize: '12px',
      fontWeight: 'bold',
      fontFamily: 'monospace',
      zIndex: 9999,
      borderBottomLeftRadius: '4px',
      boxShadow: '0 2px 4px rgba(0,0,0,0.2)',
      userSelect: 'none',
      transform: 'translateY(0)',
      transition: 'transform 0.3s ease'
    },
    title: "Lean Mode Active - Monitoring and heavy features are suppressed for cleaner development experience",
    children: "LEAN MODE ACTIVE \u2013 monitoring suppressed"
  });
};
var _default = exports.default = LeanModeBanner;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9sZWFuTW9kZSIsIl9qc3hSdW50aW1lIiwiTGVhbk1vZGVCYW5uZXIiLCJpc1Byb2QiLCJnbG9iYWwiLCJpbXBvcnRNZXRhIiwiZW52IiwiUFJPRCIsInByb2Nlc3MiLCJOT0RFX0VOViIsImlzTGVhbk1vZGUiLCJqc3giLCJzdHlsZSIsInBvc2l0aW9uIiwidG9wIiwicmlnaHQiLCJiYWNrZ3JvdW5kQ29sb3IiLCJjb2xvciIsInBhZGRpbmciLCJmb250U2l6ZSIsImZvbnRXZWlnaHQiLCJmb250RmFtaWx5IiwiekluZGV4IiwiYm9yZGVyQm90dG9tTGVmdFJhZGl1cyIsImJveFNoYWRvdyIsInVzZXJTZWxlY3QiLCJ0cmFuc2Zvcm0iLCJ0cmFuc2l0aW9uIiwidGl0bGUiLCJjaGlsZHJlbiIsIl9kZWZhdWx0IiwiZXhwb3J0cyIsImRlZmF1bHQiXSwic291cmNlcyI6WyJMZWFuTW9kZUJhbm5lci50c3giXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIExlYW4gTW9kZSBCYW5uZXIgQ29tcG9uZW50XHJcbiAqIERpc3BsYXlzIGEgc21hbGwgZml4ZWQgcmliYm9uIHdoZW4gbGVhbiBtb2RlIGlzIGFjdGl2ZSAoZGV2ZWxvcG1lbnQgb25seSlcclxuICovXHJcblxyXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgeyBpc0xlYW5Nb2RlIH0gZnJvbSAnLi4vdXRpbHMvbGVhbk1vZGUnO1xyXG5cclxuY29uc3QgTGVhbk1vZGVCYW5uZXI6IFJlYWN0LkZDID0gKCkgPT4ge1xyXG4gIC8vIE9ubHkgc2hvdyBpbiBkZXZlbG9wbWVudCBhbmQgd2hlbiBsZWFuIG1vZGUgaXMgYWN0aXZlXHJcbiAgLy8gQXZvaWQgZGlyZWN0IGBpbXBvcnQubWV0YWAgdXNhZ2UgdG8ga2VlcCBKZXN0L0JhYmVsIHBhcnNpbmcgc3RhYmxlIGluIHRlc3QgZW52c1xyXG4gIGNvbnN0IGlzUHJvZCA9XHJcbiAgICAodHlwZW9mIChnbG9iYWwgYXMgYW55KS5pbXBvcnRNZXRhICE9PSAndW5kZWZpbmVkJyAmJiAoZ2xvYmFsIGFzIGFueSkuaW1wb3J0TWV0YS5lbnYgJiYgKGdsb2JhbCBhcyBhbnkpLmltcG9ydE1ldGEuZW52LlBST0QpIHx8XHJcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nO1xyXG5cclxuICBpZiAoaXNQcm9kIHx8ICFpc0xlYW5Nb2RlKCkpIHtcclxuICAgIHJldHVybiBudWxsO1xyXG4gIH1cclxuXHJcbiAgcmV0dXJuIChcclxuICAgIDxkaXZcclxuICAgICAgc3R5bGU9e3tcclxuICAgICAgICBwb3NpdGlvbjogJ2ZpeGVkJyxcclxuICAgICAgICB0b3A6IDAsXHJcbiAgICAgICAgcmlnaHQ6IDAsXHJcbiAgICAgICAgYmFja2dyb3VuZENvbG9yOiAnI2ZmNmIzNScsXHJcbiAgICAgICAgY29sb3I6ICd3aGl0ZScsXHJcbiAgICAgICAgcGFkZGluZzogJzRweCAxMnB4JyxcclxuICAgICAgICBmb250U2l6ZTogJzEycHgnLFxyXG4gICAgICAgIGZvbnRXZWlnaHQ6ICdib2xkJyxcclxuICAgICAgICBmb250RmFtaWx5OiAnbW9ub3NwYWNlJyxcclxuICAgICAgICB6SW5kZXg6IDk5OTksXHJcbiAgICAgICAgYm9yZGVyQm90dG9tTGVmdFJhZGl1czogJzRweCcsXHJcbiAgICAgICAgYm94U2hhZG93OiAnMCAycHggNHB4IHJnYmEoMCwwLDAsMC4yKScsXHJcbiAgICAgICAgdXNlclNlbGVjdDogJ25vbmUnLFxyXG4gICAgICAgIHRyYW5zZm9ybTogJ3RyYW5zbGF0ZVkoMCknLFxyXG4gICAgICAgIHRyYW5zaXRpb246ICd0cmFuc2Zvcm0gMC4zcyBlYXNlJyxcclxuICAgICAgfX1cclxuICAgICAgdGl0bGU9XCJMZWFuIE1vZGUgQWN0aXZlIC0gTW9uaXRvcmluZyBhbmQgaGVhdnkgZmVhdHVyZXMgYXJlIHN1cHByZXNzZWQgZm9yIGNsZWFuZXIgZGV2ZWxvcG1lbnQgZXhwZXJpZW5jZVwiXHJcbiAgICA+XHJcbiAgICAgIExFQU4gTU9ERSBBQ1RJVkUg4oCTIG1vbml0b3Jpbmcgc3VwcHJlc3NlZFxyXG4gICAgPC9kaXY+XHJcbiAgKTtcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IExlYW5Nb2RlQmFubmVyO1xyXG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFLQSxJQUFBQSxNQUFBLEdBQUFDLHNCQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFBQyxTQUFBLEdBQUFELE9BQUE7QUFBK0MsSUFBQUUsV0FBQSxHQUFBRixPQUFBO0FBTi9DO0FBQ0E7QUFDQTtBQUNBOztBQUtBLE1BQU1HLGNBQXdCLEdBQUdBLENBQUEsS0FBTTtFQUNyQztFQUNBO0VBQ0EsTUFBTUMsTUFBTSxHQUNULE9BQVFDLE1BQU0sQ0FBU0MsVUFBVSxLQUFLLFdBQVcsSUFBS0QsTUFBTSxDQUFTQyxVQUFVLENBQUNDLEdBQUcsSUFBS0YsTUFBTSxDQUFTQyxVQUFVLENBQUNDLEdBQUcsQ0FBQ0MsSUFBSSxJQUMzSEMsT0FBTyxDQUFDRixHQUFHLENBQUNHLFFBQVEsS0FBSyxZQUFZO0VBRXZDLElBQUlOLE1BQU0sSUFBSSxDQUFDLElBQUFPLG9CQUFVLEVBQUMsQ0FBQyxFQUFFO0lBQzNCLE9BQU8sSUFBSTtFQUNiO0VBRUEsb0JBQ0UsSUFBQVQsV0FBQSxDQUFBVSxHQUFBO0lBQ0VDLEtBQUssRUFBRTtNQUNMQyxRQUFRLEVBQUUsT0FBTztNQUNqQkMsR0FBRyxFQUFFLENBQUM7TUFDTkMsS0FBSyxFQUFFLENBQUM7TUFDUkMsZUFBZSxFQUFFLFNBQVM7TUFDMUJDLEtBQUssRUFBRSxPQUFPO01BQ2RDLE9BQU8sRUFBRSxVQUFVO01BQ25CQyxRQUFRLEVBQUUsTUFBTTtNQUNoQkMsVUFBVSxFQUFFLE1BQU07TUFDbEJDLFVBQVUsRUFBRSxXQUFXO01BQ3ZCQyxNQUFNLEVBQUUsSUFBSTtNQUNaQyxzQkFBc0IsRUFBRSxLQUFLO01BQzdCQyxTQUFTLEVBQUUsMkJBQTJCO01BQ3RDQyxVQUFVLEVBQUUsTUFBTTtNQUNsQkMsU0FBUyxFQUFFLGVBQWU7TUFDMUJDLFVBQVUsRUFBRTtJQUNkLENBQUU7SUFDRkMsS0FBSyxFQUFDLG9HQUFvRztJQUFBQyxRQUFBLEVBQzNHO0VBRUQsQ0FBSyxDQUFDO0FBRVYsQ0FBQztBQUFDLElBQUFDLFFBQUEsR0FBQUMsT0FBQSxDQUFBQyxPQUFBLEdBRWE5QixjQUFjIiwiaWdub3JlTGlzdCI6W119