{"version":3,"names":["hasLoggedMissingFields","safeStringify","obj","JSON","stringify","String","coerceToNumber","value","fallback","isFinite","parsed","parseFloat","isNaN","coerceToString","aggregateApiStats","apiPerformance","totalRequests","totalErrors","totalLatency","endpointCount","Object","values","forEach","stats","statsObj","total_calls","total_requests","errors","error_requests","avg_time_ms","avg_latency_ms","avgLatency","Math","round","successRequests","max","success_requests","ensureMetricsShape","raw","originFlags","rawObj","legacyCacheObj","cache_performance","canonicalCacheObj","cache","legacyApiObj","api_performance","canonicalApiObj","api","legacySystemObj","system_info","canonicalSystemObj","system","hasLegacyCache","keys","length","hasLegacyApi","hasCanonicalCache","hasCanonicalApi","hasLegacySystem","_hasCanonicalSystem","mappedLegacy","systemMetrics","optimization_level","undefined","optimizationLevel","opt_level","caching_strategy","cachingStrategy","monitoring","cacheMetrics","hits","cache_hits","misses","cache_misses","hit_rate","apiMetrics","missingFields","push","process","env","NODE_ENV","console","warn","join","substring","normalized","timestamps","updated_at","Date","toISOString"],"sources":["ensureMetricsShape.ts"],"sourcesContent":["/**\r\n * Metrics normalization to prevent \"Cannot read properties of undefined (reading 'total_requests')\" errors\r\n * Provides shape normalization and legacy field mapping similar to ensureHealthShape\r\n * \r\n * @module ensureMetricsShape\r\n */\r\n\r\n// Guard to prevent multiple logging\r\nlet hasLoggedMissingFields = false;\r\n\r\nexport interface MetricsShape {\r\n  api: {\r\n    total_requests: number;\r\n    success_requests: number;\r\n    error_requests: number;\r\n    avg_latency_ms: number;\r\n  };\r\n  cache: {\r\n    hits: number;\r\n    misses: number;\r\n    total_requests: number;\r\n    hit_rate: number;\r\n    errors: number;\r\n  };\r\n  system_info: {\r\n    optimization_level: string;\r\n    caching_strategy: string;\r\n    monitoring: string;\r\n  };\r\n  timestamps?: {\r\n    updated_at?: string;\r\n  };\r\n  originFlags?: {\r\n    mappedLegacy?: boolean;\r\n  };\r\n}\r\n\r\n/**\r\n * Safe stringify for logging\r\n */\r\nconst safeStringify = (obj: unknown): string => {\r\n  try {\r\n    return JSON.stringify(obj, null, 2);\r\n  } catch {\r\n    return String(obj);\r\n  }\r\n};\r\n\r\n/**\r\n * Safely coerce value to number with fallback\r\n */\r\nconst coerceToNumber = (value: unknown, fallback: number = 0): number => {\r\n  if (typeof value === 'number') {\r\n    // Handle Infinity and NaN\r\n    if (!isFinite(value)) {\r\n      return fallback;\r\n    }\r\n    return value;\r\n  }\r\n  if (typeof value === 'boolean') {\r\n    return value ? 1 : 0;\r\n  }\r\n  if (typeof value === 'string') {\r\n    const parsed = parseFloat(value);\r\n    if (!isNaN(parsed)) {\r\n      return parsed;\r\n    }\r\n  }\r\n  return fallback;\r\n};\r\n\r\n/**\r\n * Safely coerce value to string with fallback\r\n */\r\nconst coerceToString = (value: unknown, fallback: string = ''): string => {\r\n  if (typeof value === 'string') {\r\n    return value;\r\n  }\r\n  if (typeof value === 'number' || typeof value === 'boolean') {\r\n    return String(value);\r\n  }\r\n  return fallback;\r\n};\r\n\r\n/**\r\n * Aggregate API endpoint stats into totals\r\n */\r\nconst aggregateApiStats = (apiPerformance: Record<string, unknown>): MetricsShape['api'] => {\r\n  let totalRequests = 0;\r\n  let totalErrors = 0;\r\n  let totalLatency = 0;\r\n  let endpointCount = 0;\r\n\r\n  Object.values(apiPerformance).forEach(stats => {\r\n    if (stats && typeof stats === 'object') {\r\n      const statsObj = stats as Record<string, unknown>;\r\n      totalRequests += coerceToNumber(statsObj.total_calls || statsObj.total_requests, 0);\r\n      totalErrors += coerceToNumber(statsObj.errors || statsObj.error_requests, 0);\r\n      totalLatency += coerceToNumber(statsObj.avg_time_ms || statsObj.avg_latency_ms, 0);\r\n      endpointCount++;\r\n    }\r\n  });\r\n\r\n  const avgLatency = endpointCount > 0 ? Math.round((totalLatency / endpointCount) * 100) / 100 : 0;\r\n  const successRequests = Math.max(0, totalRequests - totalErrors);\r\n\r\n  return {\r\n    total_requests: totalRequests,\r\n    success_requests: successRequests,\r\n    error_requests: totalErrors,\r\n    avg_latency_ms: avgLatency,\r\n  };\r\n};\r\n\r\n/**\r\n * Ensures metrics data conforms to MetricsShape with safe defaults\r\n * \r\n * Features:\r\n * - Normalizes missing nested objects to safe defaults (all zeros)\r\n * - Maps legacy cache_performance.* to cache.*\r\n * - Maps legacy api_performance.* to aggregated api.*\r\n * - Coerces numeric fields to numbers\r\n * - Adds development metadata in originFlags\r\n * - One-time logging for missing fields and legacy usage\r\n */\r\nexport function ensureMetricsShape(raw: unknown): MetricsShape {\r\n  const originFlags: MetricsShape['originFlags'] = {};\r\n  \r\n  // Type guard for raw data\r\n  const rawObj = raw && typeof raw === 'object' ? raw as Record<string, unknown> : {};\r\n\r\n  // Check for legacy cache_performance structure\r\n  const legacyCacheObj = rawObj.cache_performance && typeof rawObj.cache_performance === 'object' \r\n    ? rawObj.cache_performance as Record<string, unknown> \r\n    : {};\r\n\r\n  // Check for canonical cache structure\r\n  const canonicalCacheObj = rawObj.cache && typeof rawObj.cache === 'object'\r\n    ? rawObj.cache as Record<string, unknown>\r\n    : {};\r\n\r\n  // Check for legacy api_performance structure\r\n  const legacyApiObj = rawObj.api_performance && typeof rawObj.api_performance === 'object'\r\n    ? rawObj.api_performance as Record<string, unknown>\r\n    : {};\r\n\r\n  // Check for canonical api structure\r\n  const canonicalApiObj = rawObj.api && typeof rawObj.api === 'object'\r\n    ? rawObj.api as Record<string, unknown>\r\n    : {};\r\n\r\n  // Check for legacy system_info structure\r\n  const legacySystemObj = rawObj.system_info && typeof rawObj.system_info === 'object'\r\n    ? rawObj.system_info as Record<string, unknown>\r\n    : {};\r\n\r\n  // Check for canonical system_info structure  \r\n  const canonicalSystemObj = rawObj.system && typeof rawObj.system === 'object'\r\n    ? rawObj.system as Record<string, unknown>\r\n    : {};\r\n\r\n  const hasLegacyCache = Object.keys(legacyCacheObj).length > 0;\r\n  const hasLegacyApi = Object.keys(legacyApiObj).length > 0;\r\n  const hasCanonicalCache = Object.keys(canonicalCacheObj).length > 0;\r\n  const hasCanonicalApi = Object.keys(canonicalApiObj).length > 0;\r\n\r\n  const hasLegacySystem = Object.keys(legacySystemObj).length > 0;\r\n  const _hasCanonicalSystem = Object.keys(canonicalSystemObj).length > 0;\r\n\r\n  if (hasLegacyCache || hasLegacyApi || hasLegacySystem) {\r\n    originFlags.mappedLegacy = true;\r\n  }\r\n\r\n  // Build system_info metrics (canonical first, then legacy fallback)\r\n  const systemMetrics = {\r\n    optimization_level: canonicalSystemObj.optimization_level !== undefined\r\n      ? coerceToString(canonicalSystemObj.optimization_level, 'Basic')\r\n      : coerceToString(\r\n          legacySystemObj.optimization_level || \r\n          legacySystemObj.optimizationLevel || \r\n          legacySystemObj.opt_level, \r\n          'Basic'\r\n        ),\r\n    caching_strategy: canonicalSystemObj.caching_strategy !== undefined\r\n      ? coerceToString(canonicalSystemObj.caching_strategy, 'Memory')\r\n      : coerceToString(\r\n          legacySystemObj.caching_strategy || \r\n          legacySystemObj.cachingStrategy,\r\n          'Memory'\r\n        ),\r\n    monitoring: canonicalSystemObj.monitoring !== undefined\r\n      ? coerceToString(canonicalSystemObj.monitoring, 'Standard')\r\n      : coerceToString(\r\n          legacySystemObj.monitoring,\r\n          'Standard'\r\n        )\r\n  };\r\n\r\n  // Build cache metrics (canonical first, then legacy fallback with multiple field name patterns)\r\n  const cacheMetrics = {\r\n    hits: canonicalCacheObj.hits !== undefined \r\n      ? coerceToNumber(canonicalCacheObj.hits, 0) \r\n      : coerceToNumber(legacyCacheObj.hits || legacyCacheObj.cache_hits, 0),\r\n    misses: canonicalCacheObj.misses !== undefined \r\n      ? coerceToNumber(canonicalCacheObj.misses, 0) \r\n      : coerceToNumber(legacyCacheObj.misses || legacyCacheObj.cache_misses, 0),\r\n    total_requests: canonicalCacheObj.total_requests !== undefined \r\n      ? coerceToNumber(canonicalCacheObj.total_requests, 0) \r\n      : coerceToNumber(legacyCacheObj.total_requests, 0),\r\n    hit_rate: canonicalCacheObj.hit_rate !== undefined \r\n      ? coerceToNumber(canonicalCacheObj.hit_rate, 0) \r\n      : coerceToNumber(legacyCacheObj.hit_rate, 0),\r\n    errors: canonicalCacheObj.errors !== undefined \r\n      ? coerceToNumber(canonicalCacheObj.errors, 0) \r\n      : coerceToNumber(legacyCacheObj.errors, 0)\r\n  };\r\n\r\n  // Build API metrics (canonical first, then aggregate legacy)\r\n  let apiMetrics: MetricsShape['api'];\r\n  if (hasCanonicalApi) {\r\n    apiMetrics = {\r\n      total_requests: coerceToNumber(canonicalApiObj.total_requests, 0),\r\n      success_requests: coerceToNumber(canonicalApiObj.success_requests, 0),\r\n      error_requests: coerceToNumber(canonicalApiObj.error_requests, 0),\r\n      avg_latency_ms: coerceToNumber(canonicalApiObj.avg_latency_ms, 0),\r\n    };\r\n  } else if (hasLegacyApi) {\r\n    apiMetrics = aggregateApiStats(legacyApiObj);\r\n  } else {\r\n    apiMetrics = {\r\n      total_requests: 0,\r\n      success_requests: 0,\r\n      error_requests: 0,\r\n      avg_latency_ms: 0,\r\n    };\r\n  }\r\n\r\n  // One-time logging for missing critical fields and legacy usage\r\n  const missingFields: string[] = [];\r\n  if (!raw) missingFields.push('entire metrics object');\r\n  if (!hasCanonicalCache && !hasLegacyCache) missingFields.push('cache or cache_performance');\r\n  if (!hasCanonicalApi && !hasLegacyApi) missingFields.push('api or api_performance');\r\n  \r\n  if ((missingFields.length > 0 || originFlags.mappedLegacy) && !hasLoggedMissingFields && process.env.NODE_ENV === 'development') {\r\n    hasLoggedMissingFields = true;\r\n    \r\n    if (missingFields.length > 0) {\r\n      // eslint-disable-next-line no-console\r\n      console.warn(\r\n        '[MetricsGuard] Missing metrics fields detected:',\r\n        missingFields.join(', '),\r\n        '\\nRaw data sample:',\r\n        safeStringify(rawObj)?.substring(0, 500) + '...'\r\n      );\r\n    }\r\n    \r\n    if (originFlags.mappedLegacy) {\r\n      // eslint-disable-next-line no-console\r\n      console.warn(\r\n        '[MetricsGuard] Using legacy metrics structure (cache_performance/api_performance)',\r\n        'Consider migrating to canonical structure (cache/api)'\r\n      );\r\n    }\r\n  }\r\n\r\n  // Build normalized metrics object\r\n  const normalized: MetricsShape = {\r\n    api: apiMetrics,\r\n    cache: cacheMetrics,\r\n    system_info: systemMetrics,\r\n    timestamps: {\r\n      updated_at: rawObj.updated_at ? String(rawObj.updated_at) : new Date().toISOString(),\r\n    },\r\n    originFlags,\r\n  };\r\n\r\n  return normalized;\r\n}"],"mappings":"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","ignoreList":[]}