79e56d7cd8ee21290273c271bfb1170a
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = _interopRequireDefault(require("react"));
var _jsxRuntime = require("react/jsx-runtime");
const _Message = ({
  message,
  variant,
  onSuggestionClick
}) => {
  return /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
    className: `flex ${message.type === 'user' ? 'justify-end' : 'justify-start'}`,
    role: "listitem",
    "aria-label": message.type === 'user' ? 'User message' : 'AI message',
    children: /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
      className: `max-w-4xl rounded-lg p-4 ${message.type === 'user' ? variant === 'cyber' ? 'bg-cyan-400/10 border border-cyan-400/30' : 'bg-blue-50 border border-blue-200' : variant === 'cyber' ? 'bg-gray-900/50 border border-cyan-400/20' : 'bg-gray-50 border border-gray-200 dark:bg-gray-800 dark:border-gray-700'}`,
      children: /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
        className: "flex items-start space-x-3",
        children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
          className: `text-lg ${message.type === 'user' ? variant === 'cyber' ? 'text-cyan-400' : 'text-blue-600' : variant === 'cyber' ? 'text-green-400' : 'text-green-600'}`,
          children: message.type === 'user' ? 'ðŸ‘¤' : 'ðŸ¤–'
        }), /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
          className: "flex-1",
          children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
            className: `prose prose-sm max-w-none ${variant === 'cyber' ? 'prose-invert' : ''}`,
            children: /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
              className: "whitespace-pre-wrap",
              children: message.content
            })
          }), message.type === 'ai' && /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
            className: "mt-4 space-y-3",
            children: [message.confidence && /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
              className: "flex items-center space-x-2",
              children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("span", {
                className: `text-xs font-medium ${variant === 'cyber' ? 'text-cyan-400' : 'text-gray-600'}`,
                children: "Confidence:"
              }), /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
                className: `px-2 py-1 rounded-full text-xs font-bold ${message.confidence >= 80 ? variant === 'cyber' ? 'bg-green-400/20 text-green-400' : 'bg-green-100 text-green-700' : message.confidence >= 65 ? variant === 'cyber' ? 'bg-yellow-400/20 text-yellow-400' : 'bg-yellow-100 text-yellow-700' : variant === 'cyber' ? 'bg-red-400/20 text-red-400' : 'bg-red-100 text-red-700'}`,
                children: [message.confidence, "%"]
              })]
            }), message.suggestions && message.suggestions.length > 0 && /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
              children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("span", {
                className: `text-xs font-medium ${variant === 'cyber' ? 'text-cyan-400' : 'text-gray-600'}`,
                children: "Quick Actions:"
              }), /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
                className: "flex flex-wrap gap-2 mt-2",
                children: message.suggestions.map((suggestion, idx) => /*#__PURE__*/(0, _jsxRuntime.jsx)("button", {
                  onClick: () => onSuggestionClick && onSuggestionClick(suggestion),
                  className: `px-3 py-1 rounded-full text-xs font-medium transition-all hover:scale-105 ${variant === 'cyber' ? 'bg-cyan-400/10 text-cyan-400 border border-cyan-400/30 hover:bg-cyan-400/20' : 'bg-blue-50 text-blue-700 border border-blue-200 hover:bg-blue-100'}`,
                  "aria-label": `Send suggestion: ${suggestion}`,
                  children: suggestion
                }, idx))
              })]
            })]
          }), /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
            className: `text-xs mt-2 ${variant === 'cyber' ? 'text-gray-500' : 'text-gray-400'}`,
            children: message.timestamp.toLocaleTimeString()
          })]
        })]
      })
    })
  });
};
var _default = exports.default = _Message;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,