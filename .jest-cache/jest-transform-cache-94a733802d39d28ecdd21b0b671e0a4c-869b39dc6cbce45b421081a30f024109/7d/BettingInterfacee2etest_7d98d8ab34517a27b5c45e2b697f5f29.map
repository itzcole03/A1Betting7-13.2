{"version":3,"names":["_react","require","_react2","_interopRequireDefault","_UnifiedBettingInterface","_reactRouterDom","_AuthContext2","_jsxRuntime","describe","beforeEach","localStorage","setItem","JSON","stringify","id","email","role","permissions","jest","spyOn","global","mockImplementation","url","includes","Promise","resolve","ok","json","sport","market","selection","odds","edge","confidence","recommended_stake","max_stake","expected_value","bookmaker","game_time","afterEach","restoreAllMocks","it","mockAuthContext","user","loading","error","isAdmin","isAuthenticated","requiresPasswordChange","login","logout","changePassword","clearError","register","TestWrapper","betSlip","setBetSlip","React","useState","activeTab","setActiveTab","addToBetSlip","opp","prev","opportunityId","opportunity","removeFromBetSlip","filter","p","jsx","MemoryRouter","initialEntries","children","_AuthContext","Provider","value","default","filteredOpportunities","render","expect","screen","findByTestId","toBeInTheDocument","queryByTestId","not","addBetButton","act","click","betSlipTabButton","findByRole","name"],"sources":["BettingInterface.e2e.test.tsx"],"sourcesContent":["import { act, render, screen } from '@testing-library/react';\r\nimport React from 'react';\r\nimport UnifiedBettingInterface from '../components/betting/UnifiedBettingInterface';\r\nimport { MemoryRouter } from 'react-router-dom';\r\nimport { _AuthContext, AuthContextType } from '../contexts/AuthContext';\r\n\r\ndescribe('Betting Interface E2E', () => {\r\n  beforeEach(() => {\r\n    // Bypass onboarding and set authenticated user context\r\n    localStorage.setItem('onboardingComplete', 'true');\r\n    localStorage.setItem('lastSeenVersion', '1.0.0');\r\n    localStorage.setItem('token', 'test-token');\r\n    localStorage.setItem(\r\n      'user',\r\n      JSON.stringify({\r\n        id: 'test-user',\r\n        email: 'test@example.com',\r\n        role: 'admin',\r\n        permissions: ['admin'],\r\n      })\r\n    );\r\n    // Mock fetch for props API\r\n    jest.spyOn(global, 'fetch').mockImplementation(url => {\r\n      if (typeof url === 'string' && url.includes('/mlb/odds-comparison/')) {\r\n        return Promise.resolve({\r\n          ok: true,\r\n          json: async () => [\r\n            {\r\n              id: 'opp-1',\r\n              sport: 'MLB',\r\n              market: 'Player Hits',\r\n              selection: 'Mookie Betts Over 1.5 Hits',\r\n              odds: 2.1,\r\n              edge: 8.5,\r\n              confidence: 82,\r\n              recommended_stake: 150,\r\n              max_stake: 500,\r\n              expected_value: 12.75,\r\n              bookmaker: 'DraftKings',\r\n              game_time: '2025-01-05T19:00:00Z',\r\n            },\r\n          ],\r\n        } as Response);\r\n      }\r\n      // Default fallback for other fetches\r\n      return Promise.resolve({ ok: true, json: async () => ({}) } as Response);\r\n    });\r\n  });\r\n  afterEach(() => {\r\n    jest.restoreAllMocks();\r\n  });\r\n  it('renders bet slip, Kelly Criterion, and arbitrage opportunities', async () => {\r\n    // Custom AuthContext provider to force isAuthenticated=true\r\n  const mockAuthContext: AuthContextType = {\r\n      user: { id: 'test-user', email: 'test@example.com', role: 'admin', permissions: ['admin'] },\r\n      loading: false,\r\n      error: null,\r\n      isAdmin: true,\r\n      isAuthenticated: true,\r\n      requiresPasswordChange: false,\r\n      login: async () => {},\r\n      logout: async () => {},\r\n      changePassword: async () => {},\r\n      clearError: () => {},\r\n      register: async () => {},\r\n    };\r\n    const TestWrapper: React.FC = () => {\r\n      const [betSlip, setBetSlip] = React.useState<any[]>([]);\r\n      const [activeTab, setActiveTab] = React.useState<string>('opportunities');\r\n\r\n      const addToBetSlip = (opp: any) => {\r\n        setBetSlip(prev => [...prev, { opportunityId: opp.id, opportunity: opp }]);\r\n        // After adding, switch to bet slip tab to simulate user flow\r\n        setActiveTab('betslip');\r\n      };\r\n\r\n      const removeFromBetSlip = (id: string) => setBetSlip(prev => prev.filter(p => p.opportunityId !== id));\r\n\r\n      return (\r\n        <MemoryRouter initialEntries={['/betting']}>\r\n          <_AuthContext.Provider value={mockAuthContext}>\r\n            <UnifiedBettingInterface\r\n              filteredOpportunities={[{\r\n                id: 'opp-1',\r\n                sport: 'MLB',\r\n                market: 'Player Hits',\r\n                selection: 'Mookie Betts Over 1.5 Hits',\r\n                odds: 2.1,\r\n                edge: 8.5,\r\n                confidence: 82,\r\n                recommended_stake: 150,\r\n                max_stake: 500,\r\n                expected_value: 12.75,\r\n                bookmaker: 'DraftKings',\r\n                game_time: '2025-01-05T19:00:00Z',\r\n              }]}\r\n              betSlip={betSlip}\r\n              addToBetSlip={addToBetSlip}\r\n              removeFromBetSlip={removeFromBetSlip}\r\n              activeTab={activeTab}\r\n              setActiveTab={setActiveTab}\r\n            />\r\n          </_AuthContext.Provider>\r\n        </MemoryRouter>\r\n      );\r\n    };\r\n\r\n    render(<TestWrapper />);\r\n    // Wait for betting interface heading\r\n    expect(await screen.findByTestId('betting-interface-heading')).toBeInTheDocument();\r\n\r\n    // Wait for bet slip section in Opportunities tab (should not be present yet)\r\n    expect(screen.queryByTestId('bet-slip-section')).not.toBeInTheDocument();\r\n\r\n    // Simulate adding a bet in Opportunities tab\r\n    // Use testid for 'Add to Bet Slip' button\r\n    const addBetButton = await screen.findByTestId('add-to-bet-slip-btn-opp-1');\r\n    act(() => {\r\n      addBetButton.click();\r\n    });\r\n\r\n    // Switch to Bet Slip tab - click the button labeled 'Bet Slip'\r\n    const betSlipTabButton = await screen.findByRole('button', { name: /Bet Slip/i });\r\n    act(() => {\r\n      betSlipTabButton.click();\r\n    });\r\n\r\n    // Wait for bet slip section\r\n    expect(await screen.findByTestId('bet-slip-section')).toBeInTheDocument();\r\n    // Wait for bet slip item\r\n    expect(await screen.findByTestId('bet-slip-item')).toBeInTheDocument();\r\n    // Optionally check for Kelly Criterion and arbitrage opportunities if present\r\n    // expect(await screen.findByText(/Kelly Criterion/i)).toBeInTheDocument();\r\n    // expect(await screen.findByText(/Arbitrage Opportunities/i)).toBeInTheDocument();\r\n  });\r\n});\r\n"],"mappings":";;;AAAA,IAAAA,MAAA,GAAAC,OAAA;AACA,IAAAC,OAAA,GAAAC,sBAAA,CAAAF,OAAA;AACA,IAAAG,wBAAA,GAAAD,sBAAA,CAAAF,OAAA;AACA,IAAAI,eAAA,GAAAJ,OAAA;AACA,IAAAK,aAAA,GAAAL,OAAA;AAAwE,IAAAM,WAAA,GAAAN,OAAA;AAExEO,QAAQ,CAAC,uBAAuB,EAAE,MAAM;EACtCC,UAAU,CAAC,MAAM;IACf;IACAC,YAAY,CAACC,OAAO,CAAC,oBAAoB,EAAE,MAAM,CAAC;IAClDD,YAAY,CAACC,OAAO,CAAC,iBAAiB,EAAE,OAAO,CAAC;IAChDD,YAAY,CAACC,OAAO,CAAC,OAAO,EAAE,YAAY,CAAC;IAC3CD,YAAY,CAACC,OAAO,CAClB,MAAM,EACNC,IAAI,CAACC,SAAS,CAAC;MACbC,EAAE,EAAE,WAAW;MACfC,KAAK,EAAE,kBAAkB;MACzBC,IAAI,EAAE,OAAO;MACbC,WAAW,EAAE,CAAC,OAAO;IACvB,CAAC,CACH,CAAC;IACD;IACAC,IAAI,CAACC,KAAK,CAACC,MAAM,EAAE,OAAO,CAAC,CAACC,kBAAkB,CAACC,GAAG,IAAI;MACpD,IAAI,OAAOA,GAAG,KAAK,QAAQ,IAAIA,GAAG,CAACC,QAAQ,CAAC,uBAAuB,CAAC,EAAE;QACpE,OAAOC,OAAO,CAACC,OAAO,CAAC;UACrBC,EAAE,EAAE,IAAI;UACRC,IAAI,EAAE,MAAAA,CAAA,KAAY,CAChB;YACEb,EAAE,EAAE,OAAO;YACXc,KAAK,EAAE,KAAK;YACZC,MAAM,EAAE,aAAa;YACrBC,SAAS,EAAE,4BAA4B;YACvCC,IAAI,EAAE,GAAG;YACTC,IAAI,EAAE,GAAG;YACTC,UAAU,EAAE,EAAE;YACdC,iBAAiB,EAAE,GAAG;YACtBC,SAAS,EAAE,GAAG;YACdC,cAAc,EAAE,KAAK;YACrBC,SAAS,EAAE,YAAY;YACvBC,SAAS,EAAE;UACb,CAAC;QAEL,CAAa,CAAC;MAChB;MACA;MACA,OAAOd,OAAO,CAACC,OAAO,CAAC;QAAEC,EAAE,EAAE,IAAI;QAAEC,IAAI,EAAE,MAAAA,CAAA,MAAa,CAAC,CAAC;MAAE,CAAa,CAAC;IAC1E,CAAC,CAAC;EACJ,CAAC,CAAC;EACFY,SAAS,CAAC,MAAM;IACdrB,IAAI,CAACsB,eAAe,CAAC,CAAC;EACxB,CAAC,CAAC;EACFC,EAAE,CAAC,gEAAgE,EAAE,YAAY;IAC/E;IACF,MAAMC,eAAgC,GAAG;MACrCC,IAAI,EAAE;QAAE7B,EAAE,EAAE,WAAW;QAAEC,KAAK,EAAE,kBAAkB;QAAEC,IAAI,EAAE,OAAO;QAAEC,WAAW,EAAE,CAAC,OAAO;MAAE,CAAC;MAC3F2B,OAAO,EAAE,KAAK;MACdC,KAAK,EAAE,IAAI;MACXC,OAAO,EAAE,IAAI;MACbC,eAAe,EAAE,IAAI;MACrBC,sBAAsB,EAAE,KAAK;MAC7BC,KAAK,EAAE,MAAAA,CAAA,KAAY,CAAC,CAAC;MACrBC,MAAM,EAAE,MAAAA,CAAA,KAAY,CAAC,CAAC;MACtBC,cAAc,EAAE,MAAAA,CAAA,KAAY,CAAC,CAAC;MAC9BC,UAAU,EAAEA,CAAA,KAAM,CAAC,CAAC;MACpBC,QAAQ,EAAE,MAAAA,CAAA,KAAY,CAAC;IACzB,CAAC;IACD,MAAMC,WAAqB,GAAGA,CAAA,KAAM;MAClC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGC,eAAK,CAACC,QAAQ,CAAQ,EAAE,CAAC;MACvD,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGH,eAAK,CAACC,QAAQ,CAAS,eAAe,CAAC;MAEzE,MAAMG,YAAY,GAAIC,GAAQ,IAAK;QACjCN,UAAU,CAACO,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAE;UAAEC,aAAa,EAAEF,GAAG,CAAChD,EAAE;UAAEmD,WAAW,EAAEH;QAAI,CAAC,CAAC,CAAC;QAC1E;QACAF,YAAY,CAAC,SAAS,CAAC;MACzB,CAAC;MAED,MAAMM,iBAAiB,GAAIpD,EAAU,IAAK0C,UAAU,CAACO,IAAI,IAAIA,IAAI,CAACI,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACJ,aAAa,KAAKlD,EAAE,CAAC,CAAC;MAEtG,oBACE,IAAAP,WAAA,CAAA8D,GAAA,EAAChE,eAAA,CAAAiE,YAAY;QAACC,cAAc,EAAE,CAAC,UAAU,CAAE;QAAAC,QAAA,eACzC,IAAAjE,WAAA,CAAA8D,GAAA,EAAC/D,aAAA,CAAAmE,YAAY,CAACC,QAAQ;UAACC,KAAK,EAAEjC,eAAgB;UAAA8B,QAAA,eAC5C,IAAAjE,WAAA,CAAA8D,GAAA,EAACjE,wBAAA,CAAAwE,OAAuB;YACtBC,qBAAqB,EAAE,CAAC;cACtB/D,EAAE,EAAE,OAAO;cACXc,KAAK,EAAE,KAAK;cACZC,MAAM,EAAE,aAAa;cACrBC,SAAS,EAAE,4BAA4B;cACvCC,IAAI,EAAE,GAAG;cACTC,IAAI,EAAE,GAAG;cACTC,UAAU,EAAE,EAAE;cACdC,iBAAiB,EAAE,GAAG;cACtBC,SAAS,EAAE,GAAG;cACdC,cAAc,EAAE,KAAK;cACrBC,SAAS,EAAE,YAAY;cACvBC,SAAS,EAAE;YACb,CAAC,CAAE;YACHiB,OAAO,EAAEA,OAAQ;YACjBM,YAAY,EAAEA,YAAa;YAC3BK,iBAAiB,EAAEA,iBAAkB;YACrCP,SAAS,EAAEA,SAAU;YACrBC,YAAY,EAAEA;UAAa,CAC5B;QAAC,CACmB;MAAC,CACZ,CAAC;IAEnB,CAAC;IAED,IAAAkB,aAAM,eAAC,IAAAvE,WAAA,CAAA8D,GAAA,EAACf,WAAW,IAAE,CAAC,CAAC;IACvB;IACAyB,MAAM,CAAC,MAAMC,aAAM,CAACC,YAAY,CAAC,2BAA2B,CAAC,CAAC,CAACC,iBAAiB,CAAC,CAAC;;IAElF;IACAH,MAAM,CAACC,aAAM,CAACG,aAAa,CAAC,kBAAkB,CAAC,CAAC,CAACC,GAAG,CAACF,iBAAiB,CAAC,CAAC;;IAExE;IACA;IACA,MAAMG,YAAY,GAAG,MAAML,aAAM,CAACC,YAAY,CAAC,2BAA2B,CAAC;IAC3E,IAAAK,UAAG,EAAC,MAAM;MACRD,YAAY,CAACE,KAAK,CAAC,CAAC;IACtB,CAAC,CAAC;;IAEF;IACA,MAAMC,gBAAgB,GAAG,MAAMR,aAAM,CAACS,UAAU,CAAC,QAAQ,EAAE;MAAEC,IAAI,EAAE;IAAY,CAAC,CAAC;IACjF,IAAAJ,UAAG,EAAC,MAAM;MACRE,gBAAgB,CAACD,KAAK,CAAC,CAAC;IAC1B,CAAC,CAAC;;IAEF;IACAR,MAAM,CAAC,MAAMC,aAAM,CAACC,YAAY,CAAC,kBAAkB,CAAC,CAAC,CAACC,iBAAiB,CAAC,CAAC;IACzE;IACAH,MAAM,CAAC,MAAMC,aAAM,CAACC,YAAY,CAAC,eAAe,CAAC,CAAC,CAACC,iBAAiB,CAAC,CAAC;IACtE;IACA;IACA;EACF,CAAC,CAAC;AACJ,CAAC,CAAC","ignoreList":[]}