a66fd74dd899cf24b494200433b923a1
"use strict";

// Ensure axios is the manual mock for this test
_getJestObj().mock('axios');
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _react = _interopRequireDefault(require("react"));
var _react2 = require("@testing-library/react");
var _axios = _interopRequireDefault(require("axios"));
var _reactRouterDom = require("react-router-dom");
var _UserFriendlyApp = _interopRequireDefault(require("../components/user-friendly/UserFriendlyApp"));
var _jsxRuntime = require("react/jsx-runtime");
function _getJestObj() {
  const {
    jest
  } = require("@jest/globals");
  _getJestObj = () => jest;
  return jest;
}
describe('User Context Switching E2E', () => {
  beforeEach(() => {
    localStorage.setItem('onboardingComplete', 'true');
    localStorage.setItem('token', 'test-token');
    localStorage.setItem('user', JSON.stringify({
      id: 'test-user',
      email: 'test@example.com',
      role: 'admin',
      permissions: ['admin']
    }));
  });
  it('switches user context and updates permissions', async () => {
    // Ensure health endpoint resolves so ApiHealthIndicator transitions to 'ok'
    _axios.default.get?.mockImplementation(url => {
      if (typeof url === 'string' && url.includes('/api/v2/health')) {
        return Promise.resolve({
          data: {
            status: 'ok'
          },
          status: 200
        });
      }
      return Promise.resolve({
        data: {}
      });
    });
    (0, _react2.render)(/*#__PURE__*/(0, _jsxRuntime.jsx)(_reactRouterDom.MemoryRouter, {
      children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_UserFriendlyApp.default, {})
    }));
    // Wait for admin button to appear
    const adminButton = await _react2.screen.findByRole('button', {
      name: /Admin/i
    });
    expect(adminButton).toBeDefined();
    // Simulate switching to user role
    const switchUserButton = await _react2.screen.findByRole('button', {
      name: /Switch to User/i,
      hidden: true
    });
    (0, _react2.act)(() => {
      switchUserButton.click();
    });
    await (0, _react2.waitFor)(() => {
      expect(_react2.screen.getByText(/User Dashboard|Betting Interface/i)).toBeDefined();
    });
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfZ2V0SmVzdE9iaiIsIm1vY2siLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9yZWFjdCIsIl9yZWFjdDIiLCJfYXhpb3MiLCJfcmVhY3RSb3V0ZXJEb20iLCJfVXNlckZyaWVuZGx5QXBwIiwiX2pzeFJ1bnRpbWUiLCJqZXN0IiwiZGVzY3JpYmUiLCJiZWZvcmVFYWNoIiwibG9jYWxTdG9yYWdlIiwic2V0SXRlbSIsIkpTT04iLCJzdHJpbmdpZnkiLCJpZCIsImVtYWlsIiwicm9sZSIsInBlcm1pc3Npb25zIiwiaXQiLCJheGlvcyIsImdldCIsIm1vY2tJbXBsZW1lbnRhdGlvbiIsInVybCIsImluY2x1ZGVzIiwiUHJvbWlzZSIsInJlc29sdmUiLCJkYXRhIiwic3RhdHVzIiwicmVuZGVyIiwianN4IiwiTWVtb3J5Um91dGVyIiwiY2hpbGRyZW4iLCJkZWZhdWx0IiwiYWRtaW5CdXR0b24iLCJzY3JlZW4iLCJmaW5kQnlSb2xlIiwibmFtZSIsImV4cGVjdCIsInRvQmVEZWZpbmVkIiwic3dpdGNoVXNlckJ1dHRvbiIsImhpZGRlbiIsImFjdCIsImNsaWNrIiwid2FpdEZvciIsImdldEJ5VGV4dCJdLCJzb3VyY2VzIjpbIlVzZXJDb250ZXh0U3dpdGNoaW5nLmUyZS50ZXN0LnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgeyBhY3QsIHJlbmRlciwgc2NyZWVuLCB3YWl0Rm9yIH0gZnJvbSAnQHRlc3RpbmctbGlicmFyeS9yZWFjdCc7XHJcbi8vIEVuc3VyZSBheGlvcyBpcyB0aGUgbWFudWFsIG1vY2sgZm9yIHRoaXMgdGVzdFxyXG5qZXN0Lm1vY2soJ2F4aW9zJyk7XHJcbmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7XHJcbmltcG9ydCB7IE1lbW9yeVJvdXRlciB9IGZyb20gJ3JlYWN0LXJvdXRlci1kb20nO1xyXG5pbXBvcnQgVXNlckZyaWVuZGx5QXBwIGZyb20gJy4uL2NvbXBvbmVudHMvdXNlci1mcmllbmRseS9Vc2VyRnJpZW5kbHlBcHAnO1xyXG5cclxuZGVzY3JpYmUoJ1VzZXIgQ29udGV4dCBTd2l0Y2hpbmcgRTJFJywgKCkgPT4ge1xyXG4gIGJlZm9yZUVhY2goKCkgPT4ge1xyXG4gICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ29uYm9hcmRpbmdDb21wbGV0ZScsICd0cnVlJyk7XHJcbiAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgndG9rZW4nLCAndGVzdC10b2tlbicpO1xyXG4gICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oXHJcbiAgICAgICd1c2VyJyxcclxuICAgICAgSlNPTi5zdHJpbmdpZnkoe1xyXG4gICAgICAgIGlkOiAndGVzdC11c2VyJyxcclxuICAgICAgICBlbWFpbDogJ3Rlc3RAZXhhbXBsZS5jb20nLFxyXG4gICAgICAgIHJvbGU6ICdhZG1pbicsXHJcbiAgICAgICAgcGVybWlzc2lvbnM6IFsnYWRtaW4nXSxcclxuICAgICAgfSlcclxuICAgICk7XHJcbiAgfSk7XHJcblxyXG4gIGl0KCdzd2l0Y2hlcyB1c2VyIGNvbnRleHQgYW5kIHVwZGF0ZXMgcGVybWlzc2lvbnMnLCBhc3luYyAoKSA9PiB7XHJcbiAgICAvLyBFbnN1cmUgaGVhbHRoIGVuZHBvaW50IHJlc29sdmVzIHNvIEFwaUhlYWx0aEluZGljYXRvciB0cmFuc2l0aW9ucyB0byAnb2snXHJcbiAgICAoYXhpb3MgYXMgYW55KS5nZXQ/Lm1vY2tJbXBsZW1lbnRhdGlvbigodXJsOiBzdHJpbmcpID0+IHtcclxuICAgICAgaWYgKHR5cGVvZiB1cmwgPT09ICdzdHJpbmcnICYmIHVybC5pbmNsdWRlcygnL2FwaS92Mi9oZWFsdGgnKSkge1xyXG4gICAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUoeyBkYXRhOiB7IHN0YXR1czogJ29rJyB9LCBzdGF0dXM6IDIwMCB9KTtcclxuICAgICAgfVxyXG4gICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHsgZGF0YToge30gfSk7XHJcbiAgICB9KTtcclxuICAgIHJlbmRlcihcclxuICAgICAgPE1lbW9yeVJvdXRlcj5cclxuICAgICAgICA8VXNlckZyaWVuZGx5QXBwIC8+XHJcbiAgICAgIDwvTWVtb3J5Um91dGVyPlxyXG4gICAgKTtcclxuICAgIC8vIFdhaXQgZm9yIGFkbWluIGJ1dHRvbiB0byBhcHBlYXJcclxuICBjb25zdCBhZG1pbkJ1dHRvbiA9IGF3YWl0IHNjcmVlbi5maW5kQnlSb2xlKCdidXR0b24nLCB7IG5hbWU6IC9BZG1pbi9pIH0pO1xyXG4gIGV4cGVjdChhZG1pbkJ1dHRvbikudG9CZURlZmluZWQoKTtcclxuICAgIC8vIFNpbXVsYXRlIHN3aXRjaGluZyB0byB1c2VyIHJvbGVcclxuICAgIGNvbnN0IHN3aXRjaFVzZXJCdXR0b24gPSBhd2FpdCBzY3JlZW4uZmluZEJ5Um9sZSgnYnV0dG9uJywgeyBuYW1lOiAvU3dpdGNoIHRvIFVzZXIvaSwgaGlkZGVuOiB0cnVlIH0pO1xyXG4gICAgYWN0KCgpID0+IHtcclxuICAgICAgc3dpdGNoVXNlckJ1dHRvbi5jbGljaygpO1xyXG4gICAgfSk7XHJcbiAgICBhd2FpdCB3YWl0Rm9yKCgpID0+IHtcclxuICAgICAgZXhwZWN0KHNjcmVlbi5nZXRCeVRleHQoL1VzZXIgRGFzaGJvYXJkfEJldHRpbmcgSW50ZXJmYWNlL2kpKS50b0JlRGVmaW5lZCgpO1xyXG4gICAgfSk7XHJcbiAgfSk7XHJcbn0pO1xyXG4iXSwibWFwcGluZ3MiOiI7O0FBRUE7QUFDQUEsV0FBQSxHQUFLQyxJQUFJLENBQUMsT0FBTyxDQUFDO0FBQUMsSUFBQUMsc0JBQUEsR0FBQUMsT0FBQTtBQUhuQixJQUFBQyxNQUFBLEdBQUFGLHNCQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFBRSxPQUFBLEdBQUFGLE9BQUE7QUFHQSxJQUFBRyxNQUFBLEdBQUFKLHNCQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFBSSxlQUFBLEdBQUFKLE9BQUE7QUFDQSxJQUFBSyxnQkFBQSxHQUFBTixzQkFBQSxDQUFBQyxPQUFBO0FBQTBFLElBQUFNLFdBQUEsR0FBQU4sT0FBQTtBQUFBLFNBQUFILFlBQUE7RUFBQTtJQUFBVTtFQUFBLElBQUFQLE9BQUE7RUFBQUgsV0FBQSxHQUFBQSxDQUFBLEtBQUFVLElBQUE7RUFBQSxPQUFBQSxJQUFBO0FBQUE7QUFFMUVDLFFBQVEsQ0FBQyw0QkFBNEIsRUFBRSxNQUFNO0VBQzNDQyxVQUFVLENBQUMsTUFBTTtJQUNmQyxZQUFZLENBQUNDLE9BQU8sQ0FBQyxvQkFBb0IsRUFBRSxNQUFNLENBQUM7SUFDbERELFlBQVksQ0FBQ0MsT0FBTyxDQUFDLE9BQU8sRUFBRSxZQUFZLENBQUM7SUFDM0NELFlBQVksQ0FBQ0MsT0FBTyxDQUNsQixNQUFNLEVBQ05DLElBQUksQ0FBQ0MsU0FBUyxDQUFDO01BQ2JDLEVBQUUsRUFBRSxXQUFXO01BQ2ZDLEtBQUssRUFBRSxrQkFBa0I7TUFDekJDLElBQUksRUFBRSxPQUFPO01BQ2JDLFdBQVcsRUFBRSxDQUFDLE9BQU87SUFDdkIsQ0FBQyxDQUNILENBQUM7RUFDSCxDQUFDLENBQUM7RUFFRkMsRUFBRSxDQUFDLCtDQUErQyxFQUFFLFlBQVk7SUFDOUQ7SUFDQ0MsY0FBSyxDQUFTQyxHQUFHLEVBQUVDLGtCQUFrQixDQUFFQyxHQUFXLElBQUs7TUFDdEQsSUFBSSxPQUFPQSxHQUFHLEtBQUssUUFBUSxJQUFJQSxHQUFHLENBQUNDLFFBQVEsQ0FBQyxnQkFBZ0IsQ0FBQyxFQUFFO1FBQzdELE9BQU9DLE9BQU8sQ0FBQ0MsT0FBTyxDQUFDO1VBQUVDLElBQUksRUFBRTtZQUFFQyxNQUFNLEVBQUU7VUFBSyxDQUFDO1VBQUVBLE1BQU0sRUFBRTtRQUFJLENBQUMsQ0FBQztNQUNqRTtNQUNBLE9BQU9ILE9BQU8sQ0FBQ0MsT0FBTyxDQUFDO1FBQUVDLElBQUksRUFBRSxDQUFDO01BQUUsQ0FBQyxDQUFDO0lBQ3RDLENBQUMsQ0FBQztJQUNGLElBQUFFLGNBQU0sZUFDSixJQUFBdEIsV0FBQSxDQUFBdUIsR0FBQSxFQUFDekIsZUFBQSxDQUFBMEIsWUFBWTtNQUFBQyxRQUFBLGVBQ1gsSUFBQXpCLFdBQUEsQ0FBQXVCLEdBQUEsRUFBQ3hCLGdCQUFBLENBQUEyQixPQUFlLElBQUU7SUFBQyxDQUNQLENBQ2hCLENBQUM7SUFDRDtJQUNGLE1BQU1DLFdBQVcsR0FBRyxNQUFNQyxjQUFNLENBQUNDLFVBQVUsQ0FBQyxRQUFRLEVBQUU7TUFBRUMsSUFBSSxFQUFFO0lBQVMsQ0FBQyxDQUFDO0lBQ3pFQyxNQUFNLENBQUNKLFdBQVcsQ0FBQyxDQUFDSyxXQUFXLENBQUMsQ0FBQztJQUMvQjtJQUNBLE1BQU1DLGdCQUFnQixHQUFHLE1BQU1MLGNBQU0sQ0FBQ0MsVUFBVSxDQUFDLFFBQVEsRUFBRTtNQUFFQyxJQUFJLEVBQUUsaUJBQWlCO01BQUVJLE1BQU0sRUFBRTtJQUFLLENBQUMsQ0FBQztJQUNyRyxJQUFBQyxXQUFHLEVBQUMsTUFBTTtNQUNSRixnQkFBZ0IsQ0FBQ0csS0FBSyxDQUFDLENBQUM7SUFDMUIsQ0FBQyxDQUFDO0lBQ0YsTUFBTSxJQUFBQyxlQUFPLEVBQUMsTUFBTTtNQUNsQk4sTUFBTSxDQUFDSCxjQUFNLENBQUNVLFNBQVMsQ0FBQyxtQ0FBbUMsQ0FBQyxDQUFDLENBQUNOLFdBQVcsQ0FBQyxDQUFDO0lBQzdFLENBQUMsQ0FBQztFQUNKLENBQUMsQ0FBQztBQUNKLENBQUMsQ0FBQyIsImlnbm9yZUxpc3QiOltdfQ==