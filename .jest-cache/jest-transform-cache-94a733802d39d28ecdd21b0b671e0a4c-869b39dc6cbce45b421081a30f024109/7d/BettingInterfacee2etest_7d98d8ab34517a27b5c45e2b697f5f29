cfa1ea41abe8c46b241827ff5fdfe44f
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _react = require("@testing-library/react");
var _react2 = _interopRequireDefault(require("react"));
var _UnifiedBettingInterface = _interopRequireDefault(require("../components/betting/UnifiedBettingInterface"));
var _reactRouterDom = require("react-router-dom");
var _AuthContext2 = require("../contexts/AuthContext");
var _jsxRuntime = require("react/jsx-runtime");
describe('Betting Interface E2E', () => {
  beforeEach(() => {
    // Bypass onboarding and set authenticated user context
    localStorage.setItem('onboardingComplete', 'true');
    localStorage.setItem('lastSeenVersion', '1.0.0');
    localStorage.setItem('token', 'test-token');
    localStorage.setItem('user', JSON.stringify({
      id: 'test-user',
      email: 'test@example.com',
      role: 'admin',
      permissions: ['admin']
    }));
    // Mock fetch for props API
    jest.spyOn(global, 'fetch').mockImplementation(url => {
      if (typeof url === 'string' && url.includes('/mlb/odds-comparison/')) {
        return Promise.resolve({
          ok: true,
          json: async () => [{
            id: 'opp-1',
            sport: 'MLB',
            market: 'Player Hits',
            selection: 'Mookie Betts Over 1.5 Hits',
            odds: 2.1,
            edge: 8.5,
            confidence: 82,
            recommended_stake: 150,
            max_stake: 500,
            expected_value: 12.75,
            bookmaker: 'DraftKings',
            game_time: '2025-01-05T19:00:00Z'
          }]
        });
      }
      // Default fallback for other fetches
      return Promise.resolve({
        ok: true,
        json: async () => ({})
      });
    });
  });
  afterEach(() => {
    jest.restoreAllMocks();
  });
  it('renders bet slip, Kelly Criterion, and arbitrage opportunities', async () => {
    // Custom AuthContext provider to force isAuthenticated=true
    const mockAuthContext = {
      user: {
        id: 'test-user',
        email: 'test@example.com',
        role: 'admin',
        permissions: ['admin']
      },
      loading: false,
      error: null,
      isAdmin: true,
      isAuthenticated: true,
      requiresPasswordChange: false,
      login: async () => {},
      logout: async () => {},
      changePassword: async () => {},
      clearError: () => {},
      register: async () => {}
    };
    const TestWrapper = () => {
      const [betSlip, setBetSlip] = _react2.default.useState([]);
      const [activeTab, setActiveTab] = _react2.default.useState('opportunities');
      const addToBetSlip = opp => {
        setBetSlip(prev => [...prev, {
          opportunityId: opp.id,
          opportunity: opp
        }]);
        // After adding, switch to bet slip tab to simulate user flow
        setActiveTab('betslip');
      };
      const removeFromBetSlip = id => setBetSlip(prev => prev.filter(p => p.opportunityId !== id));
      return /*#__PURE__*/(0, _jsxRuntime.jsx)(_reactRouterDom.MemoryRouter, {
        initialEntries: ['/betting'],
        children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_AuthContext2._AuthContext.Provider, {
          value: mockAuthContext,
          children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_UnifiedBettingInterface.default, {
            filteredOpportunities: [{
              id: 'opp-1',
              sport: 'MLB',
              market: 'Player Hits',
              selection: 'Mookie Betts Over 1.5 Hits',
              odds: 2.1,
              edge: 8.5,
              confidence: 82,
              recommended_stake: 150,
              max_stake: 500,
              expected_value: 12.75,
              bookmaker: 'DraftKings',
              game_time: '2025-01-05T19:00:00Z'
            }],
            betSlip: betSlip,
            addToBetSlip: addToBetSlip,
            removeFromBetSlip: removeFromBetSlip,
            activeTab: activeTab,
            setActiveTab: setActiveTab
          })
        })
      });
    };
    (0, _react.render)(/*#__PURE__*/(0, _jsxRuntime.jsx)(TestWrapper, {}));
    // Wait for betting interface heading
    expect(await _react.screen.findByTestId('betting-interface-heading')).toBeInTheDocument();

    // Wait for bet slip section in Opportunities tab (should not be present yet)
    expect(_react.screen.queryByTestId('bet-slip-section')).not.toBeInTheDocument();

    // Simulate adding a bet in Opportunities tab
    // Use testid for 'Add to Bet Slip' button
    const addBetButton = await _react.screen.findByTestId('add-to-bet-slip-btn-opp-1');
    (0, _react.act)(() => {
      addBetButton.click();
    });

    // Switch to Bet Slip tab - click the button labeled 'Bet Slip'
    const betSlipTabButton = await _react.screen.findByRole('button', {
      name: /Bet Slip/i
    });
    (0, _react.act)(() => {
      betSlipTabButton.click();
    });

    // Wait for bet slip section
    expect(await _react.screen.findByTestId('bet-slip-section')).toBeInTheDocument();
    // Wait for bet slip item
    expect(await _react.screen.findByTestId('bet-slip-item')).toBeInTheDocument();
    // Optionally check for Kelly Criterion and arbitrage opportunities if present
    // expect(await screen.findByText(/Kelly Criterion/i)).toBeInTheDocument();
    // expect(await screen.findByText(/Arbitrage Opportunities/i)).toBeInTheDocument();
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJyZXF1aXJlIiwiX3JlYWN0MiIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJfVW5pZmllZEJldHRpbmdJbnRlcmZhY2UiLCJfcmVhY3RSb3V0ZXJEb20iLCJfQXV0aENvbnRleHQyIiwiX2pzeFJ1bnRpbWUiLCJkZXNjcmliZSIsImJlZm9yZUVhY2giLCJsb2NhbFN0b3JhZ2UiLCJzZXRJdGVtIiwiSlNPTiIsInN0cmluZ2lmeSIsImlkIiwiZW1haWwiLCJyb2xlIiwicGVybWlzc2lvbnMiLCJqZXN0Iiwic3B5T24iLCJnbG9iYWwiLCJtb2NrSW1wbGVtZW50YXRpb24iLCJ1cmwiLCJpbmNsdWRlcyIsIlByb21pc2UiLCJyZXNvbHZlIiwib2siLCJqc29uIiwic3BvcnQiLCJtYXJrZXQiLCJzZWxlY3Rpb24iLCJvZGRzIiwiZWRnZSIsImNvbmZpZGVuY2UiLCJyZWNvbW1lbmRlZF9zdGFrZSIsIm1heF9zdGFrZSIsImV4cGVjdGVkX3ZhbHVlIiwiYm9va21ha2VyIiwiZ2FtZV90aW1lIiwiYWZ0ZXJFYWNoIiwicmVzdG9yZUFsbE1vY2tzIiwiaXQiLCJtb2NrQXV0aENvbnRleHQiLCJ1c2VyIiwibG9hZGluZyIsImVycm9yIiwiaXNBZG1pbiIsImlzQXV0aGVudGljYXRlZCIsInJlcXVpcmVzUGFzc3dvcmRDaGFuZ2UiLCJsb2dpbiIsImxvZ291dCIsImNoYW5nZVBhc3N3b3JkIiwiY2xlYXJFcnJvciIsInJlZ2lzdGVyIiwiVGVzdFdyYXBwZXIiLCJiZXRTbGlwIiwic2V0QmV0U2xpcCIsIlJlYWN0IiwidXNlU3RhdGUiLCJhY3RpdmVUYWIiLCJzZXRBY3RpdmVUYWIiLCJhZGRUb0JldFNsaXAiLCJvcHAiLCJwcmV2Iiwib3Bwb3J0dW5pdHlJZCIsIm9wcG9ydHVuaXR5IiwicmVtb3ZlRnJvbUJldFNsaXAiLCJmaWx0ZXIiLCJwIiwianN4IiwiTWVtb3J5Um91dGVyIiwiaW5pdGlhbEVudHJpZXMiLCJjaGlsZHJlbiIsIl9BdXRoQ29udGV4dCIsIlByb3ZpZGVyIiwidmFsdWUiLCJkZWZhdWx0IiwiZmlsdGVyZWRPcHBvcnR1bml0aWVzIiwicmVuZGVyIiwiZXhwZWN0Iiwic2NyZWVuIiwiZmluZEJ5VGVzdElkIiwidG9CZUluVGhlRG9jdW1lbnQiLCJxdWVyeUJ5VGVzdElkIiwibm90IiwiYWRkQmV0QnV0dG9uIiwiYWN0IiwiY2xpY2siLCJiZXRTbGlwVGFiQnV0dG9uIiwiZmluZEJ5Um9sZSIsIm5hbWUiXSwic291cmNlcyI6WyJCZXR0aW5nSW50ZXJmYWNlLmUyZS50ZXN0LnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBhY3QsIHJlbmRlciwgc2NyZWVuIH0gZnJvbSAnQHRlc3RpbmctbGlicmFyeS9yZWFjdCc7XHJcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCBVbmlmaWVkQmV0dGluZ0ludGVyZmFjZSBmcm9tICcuLi9jb21wb25lbnRzL2JldHRpbmcvVW5pZmllZEJldHRpbmdJbnRlcmZhY2UnO1xyXG5pbXBvcnQgeyBNZW1vcnlSb3V0ZXIgfSBmcm9tICdyZWFjdC1yb3V0ZXItZG9tJztcclxuaW1wb3J0IHsgX0F1dGhDb250ZXh0LCBBdXRoQ29udGV4dFR5cGUgfSBmcm9tICcuLi9jb250ZXh0cy9BdXRoQ29udGV4dCc7XHJcblxyXG5kZXNjcmliZSgnQmV0dGluZyBJbnRlcmZhY2UgRTJFJywgKCkgPT4ge1xyXG4gIGJlZm9yZUVhY2goKCkgPT4ge1xyXG4gICAgLy8gQnlwYXNzIG9uYm9hcmRpbmcgYW5kIHNldCBhdXRoZW50aWNhdGVkIHVzZXIgY29udGV4dFxyXG4gICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ29uYm9hcmRpbmdDb21wbGV0ZScsICd0cnVlJyk7XHJcbiAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgnbGFzdFNlZW5WZXJzaW9uJywgJzEuMC4wJyk7XHJcbiAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgndG9rZW4nLCAndGVzdC10b2tlbicpO1xyXG4gICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oXHJcbiAgICAgICd1c2VyJyxcclxuICAgICAgSlNPTi5zdHJpbmdpZnkoe1xyXG4gICAgICAgIGlkOiAndGVzdC11c2VyJyxcclxuICAgICAgICBlbWFpbDogJ3Rlc3RAZXhhbXBsZS5jb20nLFxyXG4gICAgICAgIHJvbGU6ICdhZG1pbicsXHJcbiAgICAgICAgcGVybWlzc2lvbnM6IFsnYWRtaW4nXSxcclxuICAgICAgfSlcclxuICAgICk7XHJcbiAgICAvLyBNb2NrIGZldGNoIGZvciBwcm9wcyBBUElcclxuICAgIGplc3Quc3B5T24oZ2xvYmFsLCAnZmV0Y2gnKS5tb2NrSW1wbGVtZW50YXRpb24odXJsID0+IHtcclxuICAgICAgaWYgKHR5cGVvZiB1cmwgPT09ICdzdHJpbmcnICYmIHVybC5pbmNsdWRlcygnL21sYi9vZGRzLWNvbXBhcmlzb24vJykpIHtcclxuICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHtcclxuICAgICAgICAgIG9rOiB0cnVlLFxyXG4gICAgICAgICAganNvbjogYXN5bmMgKCkgPT4gW1xyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgaWQ6ICdvcHAtMScsXHJcbiAgICAgICAgICAgICAgc3BvcnQ6ICdNTEInLFxyXG4gICAgICAgICAgICAgIG1hcmtldDogJ1BsYXllciBIaXRzJyxcclxuICAgICAgICAgICAgICBzZWxlY3Rpb246ICdNb29raWUgQmV0dHMgT3ZlciAxLjUgSGl0cycsXHJcbiAgICAgICAgICAgICAgb2RkczogMi4xLFxyXG4gICAgICAgICAgICAgIGVkZ2U6IDguNSxcclxuICAgICAgICAgICAgICBjb25maWRlbmNlOiA4MixcclxuICAgICAgICAgICAgICByZWNvbW1lbmRlZF9zdGFrZTogMTUwLFxyXG4gICAgICAgICAgICAgIG1heF9zdGFrZTogNTAwLFxyXG4gICAgICAgICAgICAgIGV4cGVjdGVkX3ZhbHVlOiAxMi43NSxcclxuICAgICAgICAgICAgICBib29rbWFrZXI6ICdEcmFmdEtpbmdzJyxcclxuICAgICAgICAgICAgICBnYW1lX3RpbWU6ICcyMDI1LTAxLTA1VDE5OjAwOjAwWicsXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICBdLFxyXG4gICAgICAgIH0gYXMgUmVzcG9uc2UpO1xyXG4gICAgICB9XHJcbiAgICAgIC8vIERlZmF1bHQgZmFsbGJhY2sgZm9yIG90aGVyIGZldGNoZXNcclxuICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZSh7IG9rOiB0cnVlLCBqc29uOiBhc3luYyAoKSA9PiAoe30pIH0gYXMgUmVzcG9uc2UpO1xyXG4gICAgfSk7XHJcbiAgfSk7XHJcbiAgYWZ0ZXJFYWNoKCgpID0+IHtcclxuICAgIGplc3QucmVzdG9yZUFsbE1vY2tzKCk7XHJcbiAgfSk7XHJcbiAgaXQoJ3JlbmRlcnMgYmV0IHNsaXAsIEtlbGx5IENyaXRlcmlvbiwgYW5kIGFyYml0cmFnZSBvcHBvcnR1bml0aWVzJywgYXN5bmMgKCkgPT4ge1xyXG4gICAgLy8gQ3VzdG9tIEF1dGhDb250ZXh0IHByb3ZpZGVyIHRvIGZvcmNlIGlzQXV0aGVudGljYXRlZD10cnVlXHJcbiAgY29uc3QgbW9ja0F1dGhDb250ZXh0OiBBdXRoQ29udGV4dFR5cGUgPSB7XHJcbiAgICAgIHVzZXI6IHsgaWQ6ICd0ZXN0LXVzZXInLCBlbWFpbDogJ3Rlc3RAZXhhbXBsZS5jb20nLCByb2xlOiAnYWRtaW4nLCBwZXJtaXNzaW9uczogWydhZG1pbiddIH0sXHJcbiAgICAgIGxvYWRpbmc6IGZhbHNlLFxyXG4gICAgICBlcnJvcjogbnVsbCxcclxuICAgICAgaXNBZG1pbjogdHJ1ZSxcclxuICAgICAgaXNBdXRoZW50aWNhdGVkOiB0cnVlLFxyXG4gICAgICByZXF1aXJlc1Bhc3N3b3JkQ2hhbmdlOiBmYWxzZSxcclxuICAgICAgbG9naW46IGFzeW5jICgpID0+IHt9LFxyXG4gICAgICBsb2dvdXQ6IGFzeW5jICgpID0+IHt9LFxyXG4gICAgICBjaGFuZ2VQYXNzd29yZDogYXN5bmMgKCkgPT4ge30sXHJcbiAgICAgIGNsZWFyRXJyb3I6ICgpID0+IHt9LFxyXG4gICAgICByZWdpc3RlcjogYXN5bmMgKCkgPT4ge30sXHJcbiAgICB9O1xyXG4gICAgY29uc3QgVGVzdFdyYXBwZXI6IFJlYWN0LkZDID0gKCkgPT4ge1xyXG4gICAgICBjb25zdCBbYmV0U2xpcCwgc2V0QmV0U2xpcF0gPSBSZWFjdC51c2VTdGF0ZTxhbnlbXT4oW10pO1xyXG4gICAgICBjb25zdCBbYWN0aXZlVGFiLCBzZXRBY3RpdmVUYWJdID0gUmVhY3QudXNlU3RhdGU8c3RyaW5nPignb3Bwb3J0dW5pdGllcycpO1xyXG5cclxuICAgICAgY29uc3QgYWRkVG9CZXRTbGlwID0gKG9wcDogYW55KSA9PiB7XHJcbiAgICAgICAgc2V0QmV0U2xpcChwcmV2ID0+IFsuLi5wcmV2LCB7IG9wcG9ydHVuaXR5SWQ6IG9wcC5pZCwgb3Bwb3J0dW5pdHk6IG9wcCB9XSk7XHJcbiAgICAgICAgLy8gQWZ0ZXIgYWRkaW5nLCBzd2l0Y2ggdG8gYmV0IHNsaXAgdGFiIHRvIHNpbXVsYXRlIHVzZXIgZmxvd1xyXG4gICAgICAgIHNldEFjdGl2ZVRhYignYmV0c2xpcCcpO1xyXG4gICAgICB9O1xyXG5cclxuICAgICAgY29uc3QgcmVtb3ZlRnJvbUJldFNsaXAgPSAoaWQ6IHN0cmluZykgPT4gc2V0QmV0U2xpcChwcmV2ID0+IHByZXYuZmlsdGVyKHAgPT4gcC5vcHBvcnR1bml0eUlkICE9PSBpZCkpO1xyXG5cclxuICAgICAgcmV0dXJuIChcclxuICAgICAgICA8TWVtb3J5Um91dGVyIGluaXRpYWxFbnRyaWVzPXtbJy9iZXR0aW5nJ119PlxyXG4gICAgICAgICAgPF9BdXRoQ29udGV4dC5Qcm92aWRlciB2YWx1ZT17bW9ja0F1dGhDb250ZXh0fT5cclxuICAgICAgICAgICAgPFVuaWZpZWRCZXR0aW5nSW50ZXJmYWNlXHJcbiAgICAgICAgICAgICAgZmlsdGVyZWRPcHBvcnR1bml0aWVzPXtbe1xyXG4gICAgICAgICAgICAgICAgaWQ6ICdvcHAtMScsXHJcbiAgICAgICAgICAgICAgICBzcG9ydDogJ01MQicsXHJcbiAgICAgICAgICAgICAgICBtYXJrZXQ6ICdQbGF5ZXIgSGl0cycsXHJcbiAgICAgICAgICAgICAgICBzZWxlY3Rpb246ICdNb29raWUgQmV0dHMgT3ZlciAxLjUgSGl0cycsXHJcbiAgICAgICAgICAgICAgICBvZGRzOiAyLjEsXHJcbiAgICAgICAgICAgICAgICBlZGdlOiA4LjUsXHJcbiAgICAgICAgICAgICAgICBjb25maWRlbmNlOiA4MixcclxuICAgICAgICAgICAgICAgIHJlY29tbWVuZGVkX3N0YWtlOiAxNTAsXHJcbiAgICAgICAgICAgICAgICBtYXhfc3Rha2U6IDUwMCxcclxuICAgICAgICAgICAgICAgIGV4cGVjdGVkX3ZhbHVlOiAxMi43NSxcclxuICAgICAgICAgICAgICAgIGJvb2ttYWtlcjogJ0RyYWZ0S2luZ3MnLFxyXG4gICAgICAgICAgICAgICAgZ2FtZV90aW1lOiAnMjAyNS0wMS0wNVQxOTowMDowMFonLFxyXG4gICAgICAgICAgICAgIH1dfVxyXG4gICAgICAgICAgICAgIGJldFNsaXA9e2JldFNsaXB9XHJcbiAgICAgICAgICAgICAgYWRkVG9CZXRTbGlwPXthZGRUb0JldFNsaXB9XHJcbiAgICAgICAgICAgICAgcmVtb3ZlRnJvbUJldFNsaXA9e3JlbW92ZUZyb21CZXRTbGlwfVxyXG4gICAgICAgICAgICAgIGFjdGl2ZVRhYj17YWN0aXZlVGFifVxyXG4gICAgICAgICAgICAgIHNldEFjdGl2ZVRhYj17c2V0QWN0aXZlVGFifVxyXG4gICAgICAgICAgICAvPlxyXG4gICAgICAgICAgPC9fQXV0aENvbnRleHQuUHJvdmlkZXI+XHJcbiAgICAgICAgPC9NZW1vcnlSb3V0ZXI+XHJcbiAgICAgICk7XHJcbiAgICB9O1xyXG5cclxuICAgIHJlbmRlcig8VGVzdFdyYXBwZXIgLz4pO1xyXG4gICAgLy8gV2FpdCBmb3IgYmV0dGluZyBpbnRlcmZhY2UgaGVhZGluZ1xyXG4gICAgZXhwZWN0KGF3YWl0IHNjcmVlbi5maW5kQnlUZXN0SWQoJ2JldHRpbmctaW50ZXJmYWNlLWhlYWRpbmcnKSkudG9CZUluVGhlRG9jdW1lbnQoKTtcclxuXHJcbiAgICAvLyBXYWl0IGZvciBiZXQgc2xpcCBzZWN0aW9uIGluIE9wcG9ydHVuaXRpZXMgdGFiIChzaG91bGQgbm90IGJlIHByZXNlbnQgeWV0KVxyXG4gICAgZXhwZWN0KHNjcmVlbi5xdWVyeUJ5VGVzdElkKCdiZXQtc2xpcC1zZWN0aW9uJykpLm5vdC50b0JlSW5UaGVEb2N1bWVudCgpO1xyXG5cclxuICAgIC8vIFNpbXVsYXRlIGFkZGluZyBhIGJldCBpbiBPcHBvcnR1bml0aWVzIHRhYlxyXG4gICAgLy8gVXNlIHRlc3RpZCBmb3IgJ0FkZCB0byBCZXQgU2xpcCcgYnV0dG9uXHJcbiAgICBjb25zdCBhZGRCZXRCdXR0b24gPSBhd2FpdCBzY3JlZW4uZmluZEJ5VGVzdElkKCdhZGQtdG8tYmV0LXNsaXAtYnRuLW9wcC0xJyk7XHJcbiAgICBhY3QoKCkgPT4ge1xyXG4gICAgICBhZGRCZXRCdXR0b24uY2xpY2soKTtcclxuICAgIH0pO1xyXG5cclxuICAgIC8vIFN3aXRjaCB0byBCZXQgU2xpcCB0YWIgLSBjbGljayB0aGUgYnV0dG9uIGxhYmVsZWQgJ0JldCBTbGlwJ1xyXG4gICAgY29uc3QgYmV0U2xpcFRhYkJ1dHRvbiA9IGF3YWl0IHNjcmVlbi5maW5kQnlSb2xlKCdidXR0b24nLCB7IG5hbWU6IC9CZXQgU2xpcC9pIH0pO1xyXG4gICAgYWN0KCgpID0+IHtcclxuICAgICAgYmV0U2xpcFRhYkJ1dHRvbi5jbGljaygpO1xyXG4gICAgfSk7XHJcblxyXG4gICAgLy8gV2FpdCBmb3IgYmV0IHNsaXAgc2VjdGlvblxyXG4gICAgZXhwZWN0KGF3YWl0IHNjcmVlbi5maW5kQnlUZXN0SWQoJ2JldC1zbGlwLXNlY3Rpb24nKSkudG9CZUluVGhlRG9jdW1lbnQoKTtcclxuICAgIC8vIFdhaXQgZm9yIGJldCBzbGlwIGl0ZW1cclxuICAgIGV4cGVjdChhd2FpdCBzY3JlZW4uZmluZEJ5VGVzdElkKCdiZXQtc2xpcC1pdGVtJykpLnRvQmVJblRoZURvY3VtZW50KCk7XHJcbiAgICAvLyBPcHRpb25hbGx5IGNoZWNrIGZvciBLZWxseSBDcml0ZXJpb24gYW5kIGFyYml0cmFnZSBvcHBvcnR1bml0aWVzIGlmIHByZXNlbnRcclxuICAgIC8vIGV4cGVjdChhd2FpdCBzY3JlZW4uZmluZEJ5VGV4dCgvS2VsbHkgQ3JpdGVyaW9uL2kpKS50b0JlSW5UaGVEb2N1bWVudCgpO1xyXG4gICAgLy8gZXhwZWN0KGF3YWl0IHNjcmVlbi5maW5kQnlUZXh0KC9BcmJpdHJhZ2UgT3Bwb3J0dW5pdGllcy9pKSkudG9CZUluVGhlRG9jdW1lbnQoKTtcclxuICB9KTtcclxufSk7XHJcbiJdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsSUFBQUEsTUFBQSxHQUFBQyxPQUFBO0FBQ0EsSUFBQUMsT0FBQSxHQUFBQyxzQkFBQSxDQUFBRixPQUFBO0FBQ0EsSUFBQUcsd0JBQUEsR0FBQUQsc0JBQUEsQ0FBQUYsT0FBQTtBQUNBLElBQUFJLGVBQUEsR0FBQUosT0FBQTtBQUNBLElBQUFLLGFBQUEsR0FBQUwsT0FBQTtBQUF3RSxJQUFBTSxXQUFBLEdBQUFOLE9BQUE7QUFFeEVPLFFBQVEsQ0FBQyx1QkFBdUIsRUFBRSxNQUFNO0VBQ3RDQyxVQUFVLENBQUMsTUFBTTtJQUNmO0lBQ0FDLFlBQVksQ0FBQ0MsT0FBTyxDQUFDLG9CQUFvQixFQUFFLE1BQU0sQ0FBQztJQUNsREQsWUFBWSxDQUFDQyxPQUFPLENBQUMsaUJBQWlCLEVBQUUsT0FBTyxDQUFDO0lBQ2hERCxZQUFZLENBQUNDLE9BQU8sQ0FBQyxPQUFPLEVBQUUsWUFBWSxDQUFDO0lBQzNDRCxZQUFZLENBQUNDLE9BQU8sQ0FDbEIsTUFBTSxFQUNOQyxJQUFJLENBQUNDLFNBQVMsQ0FBQztNQUNiQyxFQUFFLEVBQUUsV0FBVztNQUNmQyxLQUFLLEVBQUUsa0JBQWtCO01BQ3pCQyxJQUFJLEVBQUUsT0FBTztNQUNiQyxXQUFXLEVBQUUsQ0FBQyxPQUFPO0lBQ3ZCLENBQUMsQ0FD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