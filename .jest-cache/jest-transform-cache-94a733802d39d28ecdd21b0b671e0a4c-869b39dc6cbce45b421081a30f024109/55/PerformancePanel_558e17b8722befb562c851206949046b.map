{"version":3,"names":["_react","_interopRequireDefault","require","_jsxRuntime","PerformancePanel","connectionHealth","performanceMetrics","getStatusColor","status","formatLatency","latency","toFixed","jsx","className","children","jsxs","toUpperCase","Object","keys","length","entries","map","key","value","lastCheck","toLocaleTimeString","exports"],"sources":["PerformancePanel.tsx"],"sourcesContent":["import React from 'react';\r\n\r\nexport interface PerformancePanelProps {\r\n  connectionHealth: {\r\n    status: 'healthy' | 'degraded' | 'error';\r\n    latency: number;\r\n    lastCheck: Date;\r\n  };\r\n  performanceMetrics?: {\r\n    [key: string]: number;\r\n  };\r\n}\r\n\r\n/**\r\n * PerformancePanel Component - Displays system performance and connection health\r\n */\r\nexport const PerformancePanel: React.FC<PerformancePanelProps> = ({\r\n  connectionHealth,\r\n  performanceMetrics = {},\r\n}) => {\r\n  const getStatusColor = (status: string) => {\r\n    switch (status) {\r\n      case 'healthy':\r\n        return 'text-green-600 bg-green-100';\r\n      case 'degraded':\r\n        return 'text-yellow-600 bg-yellow-100';\r\n      case 'error':\r\n        return 'text-red-600 bg-red-100';\r\n      default:\r\n        return 'text-gray-600 bg-gray-100';\r\n    }\r\n  };\r\n\r\n  const formatLatency = (latency: number) => {\r\n    return latency > 0 ? `${latency.toFixed(0)}ms` : 'N/A';\r\n  };\r\n\r\n  return (\r\n    <div className='performance-panel bg-white rounded-lg shadow-sm border p-4 mb-6'>\r\n      <div className='flex items-center justify-between'>\r\n        {/* Connection Status */}\r\n        <div className='flex items-center space-x-4'>\r\n          <div className='flex items-center space-x-2'>\r\n            <span className='text-sm font-medium text-gray-700'>Status:</span>\r\n            <span\r\n              className={`px-2 py-1 rounded-full text-xs font-medium ${getStatusColor(\r\n                connectionHealth.status\r\n              )}`}\r\n            >\r\n              {connectionHealth.status.toUpperCase()}\r\n            </span>\r\n          </div>\r\n\r\n          <div className='flex items-center space-x-2'>\r\n            <span className='text-sm font-medium text-gray-700'>Latency:</span>\r\n            <span className='text-sm text-gray-600'>{formatLatency(connectionHealth.latency)}</span>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Performance Metrics */}\r\n        {Object.keys(performanceMetrics).length > 0 && (\r\n          <div className='flex items-center space-x-4'>\r\n            {Object.entries(performanceMetrics).map(([key, value]) => (\r\n              <div key={key} className='flex items-center space-x-1'>\r\n                <span className='text-xs text-gray-500'>{key}:</span>\r\n                <span className='text-xs font-medium text-gray-700'>\r\n                  {typeof value === 'number' ? value.toFixed(1) : value}\r\n                </span>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n\r\n        {/* Last Check Time */}\r\n        <div className='text-xs text-gray-500'>\r\n          Last check: {connectionHealth.lastCheck.toLocaleTimeString()}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]}