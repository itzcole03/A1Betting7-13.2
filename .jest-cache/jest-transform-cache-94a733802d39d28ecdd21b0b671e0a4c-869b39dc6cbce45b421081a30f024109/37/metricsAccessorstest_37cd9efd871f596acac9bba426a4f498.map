{"version":3,"names":["_metricsAccessors","require","describe","beforeEach","jest","clearAllMocks","afterEach","restoreAllMocks","it","data","cache","total_requests","cache_performance","expect","getTotalRequests","toBe","consoleSpy","spyOn","console","mockImplementation","process","env","NODE_ENV","toHaveBeenCalledWith","mockRestore","undefined","api","getApiTotalRequests","api_performance","total_calls","error_requests","getErrorRequests","errors","getApiErrorRate","toBeCloseTo","success_requests","getSuccessRequests","avg_latency_ms","getAverageLatencyMs","avg_time_ms","hits","getCacheHits","misses","getCacheMisses","getCacheErrors","originalEnv","mock","calls","length","toBeLessThanOrEqual"],"sources":["metricsAccessors.test.ts"],"sourcesContent":["/**\r\n * @jest-environment jsdom\r\n */\r\n\r\nimport {\r\n  getTotalRequests,\r\n  getSuccessRequests,\r\n  getErrorRequests,\r\n  getApiErrorRate,\r\n  getApiTotalRequests,\r\n  getAverageLatencyMs,\r\n  getCacheHits,\r\n  getCacheMisses,\r\n  getCacheErrors,\r\n} from '../metricsAccessors';\r\n\r\ndescribe('metricsAccessors', () => {\r\n  beforeEach(() => {\r\n    jest.clearAllMocks();\r\n  });\r\n\r\n  afterEach(() => {\r\n    jest.restoreAllMocks();\r\n  });\r\n\r\n  describe('getTotalRequests', () => {\r\n    it('should return canonical cache.total_requests', () => {\r\n      const data = {\r\n        cache: { total_requests: 500 },\r\n        cache_performance: { total_requests: 300 }, // should not be used\r\n      };\r\n      expect(getTotalRequests(data)).toBe(500);\r\n    });\r\n\r\n    it('should fallback to legacy cache_performance.total_requests', () => {\r\n      const consoleSpy = jest.spyOn(console, 'debug').mockImplementation(() => {});\r\n      process.env.NODE_ENV = 'development';\r\n\r\n      const data = {\r\n        cache_performance: { total_requests: 300 },\r\n      };\r\n      expect(getTotalRequests(data)).toBe(300);\r\n      expect(consoleSpy).toHaveBeenCalledWith(\r\n        '[MetricsCompat] Using legacy cache_performance.total_requests, consider migrating to cache.total_requests'\r\n      );\r\n\r\n      consoleSpy.mockRestore();\r\n      delete process.env.NODE_ENV;\r\n    });\r\n\r\n    it('should fallback to flat total_requests', () => {\r\n      const data = {\r\n        total_requests: 200,\r\n      };\r\n      expect(getTotalRequests(data)).toBe(200);\r\n    });\r\n\r\n    it('should return 0 for null/undefined input', () => {\r\n      expect(getTotalRequests(null)).toBe(0);\r\n      expect(getTotalRequests(undefined)).toBe(0);\r\n      expect(getTotalRequests({})).toBe(0);\r\n    });\r\n  });\r\n\r\n  describe('getApiTotalRequests', () => {\r\n    it('should return canonical api.total_requests', () => {\r\n      const data = {\r\n        api: { total_requests: 1000 },\r\n      };\r\n      expect(getApiTotalRequests(data)).toBe(1000);\r\n    });\r\n\r\n    it('should aggregate from legacy api_performance', () => {\r\n      const data = {\r\n        api_performance: {\r\n          '/health': { total_calls: 100 },\r\n          '/mlb/games': { total_calls: 200, total_requests: 50 }, // total_calls takes precedence\r\n          '/ml/predict': { total_requests: 150 },\r\n        },\r\n      };\r\n      expect(getApiTotalRequests(data)).toBe(450); // 100 + 200 + 150\r\n    });\r\n\r\n    it('should return 0 when no API data available', () => {\r\n      expect(getApiTotalRequests({})).toBe(0);\r\n    });\r\n  });\r\n\r\n  describe('getErrorRequests', () => {\r\n    it('should return canonical api.error_requests', () => {\r\n      const data = {\r\n        api: { error_requests: 25 },\r\n      };\r\n      expect(getErrorRequests(data)).toBe(25);\r\n    });\r\n\r\n    it('should aggregate errors from legacy api_performance', () => {\r\n      const data = {\r\n        api_performance: {\r\n          '/health': { errors: 2 },\r\n          '/mlb/games': { errors: 1 },\r\n          '/ml/predict': { errors: 0 },\r\n        },\r\n      };\r\n      expect(getErrorRequests(data)).toBe(3);\r\n    });\r\n  });\r\n\r\n  describe('getApiErrorRate', () => {\r\n    it('should calculate error rate correctly', () => {\r\n      const data = {\r\n        api: {\r\n          total_requests: 1000,\r\n          error_requests: 50,\r\n        },\r\n      };\r\n      expect(getApiErrorRate(data)).toBe(5.0); // 50/1000 * 100\r\n    });\r\n\r\n    it('should return 0 when no total requests', () => {\r\n      const data = {\r\n        api: {\r\n          total_requests: 0,\r\n          error_requests: 5,\r\n        },\r\n      };\r\n      expect(getApiErrorRate(data)).toBe(0);\r\n    });\r\n\r\n    it('should work with aggregated legacy data', () => {\r\n      const data = {\r\n        api_performance: {\r\n          '/health': { total_calls: 100, errors: 2 },\r\n          '/mlb/games': { total_calls: 200, errors: 3 },\r\n        },\r\n      };\r\n      expect(getApiErrorRate(data)).toBeCloseTo(1.67, 2); // 5/300 * 100\r\n    });\r\n  });\r\n\r\n  describe('getSuccessRequests', () => {\r\n    it('should return canonical api.success_requests', () => {\r\n      const data = {\r\n        api: { success_requests: 950 },\r\n      };\r\n      expect(getSuccessRequests(data)).toBe(950);\r\n    });\r\n\r\n    it('should calculate from total - errors when success not available', () => {\r\n      const data = {\r\n        api: {\r\n          total_requests: 1000,\r\n          error_requests: 50,\r\n        },\r\n      };\r\n      expect(getSuccessRequests(data)).toBe(950);\r\n    });\r\n\r\n    it('should return 0 when no API data', () => {\r\n      expect(getSuccessRequests({})).toBe(0);\r\n    });\r\n  });\r\n\r\n  describe('getAverageLatencyMs', () => {\r\n    it('should return canonical api.avg_latency_ms', () => {\r\n      const data = {\r\n        api: { avg_latency_ms: 125.5 },\r\n      };\r\n      expect(getAverageLatencyMs(data)).toBe(125.5);\r\n    });\r\n\r\n    it('should average from legacy api_performance', () => {\r\n      const data = {\r\n        api_performance: {\r\n          '/health': { avg_time_ms: 100 },\r\n          '/mlb/games': { avg_time_ms: 200 },\r\n          '/ml/predict': { avg_latency_ms: 300 }, // different field name\r\n        },\r\n      };\r\n      expect(getAverageLatencyMs(data)).toBe(200); // (100 + 200 + 300) / 3\r\n    });\r\n\r\n    it('should return 0 when no latency data', () => {\r\n      expect(getAverageLatencyMs({})).toBe(0);\r\n    });\r\n  });\r\n\r\n  describe('getCacheHits', () => {\r\n    it('should return canonical cache.hits', () => {\r\n      const data = {\r\n        cache: { hits: 800 },\r\n        cache_performance: { hits: 600 }, // should not be used\r\n      };\r\n      expect(getCacheHits(data)).toBe(800);\r\n    });\r\n\r\n    it('should fallback to legacy cache_performance.hits with warning', () => {\r\n      const consoleSpy = jest.spyOn(console, 'debug').mockImplementation(() => {});\r\n      process.env.NODE_ENV = 'development';\r\n\r\n      const data = {\r\n        cache_performance: { hits: 600 },\r\n      };\r\n      expect(getCacheHits(data)).toBe(600);\r\n      expect(consoleSpy).toHaveBeenCalledWith(\r\n        '[MetricsCompat] Using legacy cache_performance.hits, consider migrating to cache.hits'\r\n      );\r\n\r\n      consoleSpy.mockRestore();\r\n      delete process.env.NODE_ENV;\r\n    });\r\n  });\r\n\r\n  describe('getCacheMisses', () => {\r\n    it('should return canonical cache.misses', () => {\r\n      const data = {\r\n        cache: { misses: 100 },\r\n      };\r\n      expect(getCacheMisses(data)).toBe(100);\r\n    });\r\n\r\n    it('should fallback to legacy cache_performance.misses', () => {\r\n      const data = {\r\n        cache_performance: { misses: 150 },\r\n      };\r\n      expect(getCacheMisses(data)).toBe(150);\r\n    });\r\n  });\r\n\r\n  describe('getCacheErrors', () => {\r\n    it('should return canonical cache.errors', () => {\r\n      const data = {\r\n        cache: { errors: 5 },\r\n      };\r\n      expect(getCacheErrors(data)).toBe(5);\r\n    });\r\n\r\n    it('should fallback to legacy cache_performance.errors with warning', () => {\r\n      const consoleSpy = jest.spyOn(console, 'debug').mockImplementation(() => {});\r\n      process.env.NODE_ENV = 'development';\r\n\r\n      const data = {\r\n        cache_performance: { errors: 8 },\r\n      };\r\n      expect(getCacheErrors(data)).toBe(8);\r\n      expect(consoleSpy).toHaveBeenCalledWith(\r\n        '[MetricsCompat] Using legacy cache_performance.errors, consider migrating to cache.errors'\r\n      );\r\n\r\n      consoleSpy.mockRestore();\r\n      delete process.env.NODE_ENV;\r\n    });\r\n  });\r\n\r\n  describe('one-time warning behavior', () => {\r\n    it('should only warn once per accessor type across multiple calls', () => {\r\n      // Note: This test may not work reliably due to module-level state\r\n      // The warning flags are module-scoped and may have been set by previous tests\r\n      const consoleSpy = jest.spyOn(console, 'debug').mockImplementation(() => {});\r\n      const originalEnv = process.env.NODE_ENV;\r\n      process.env.NODE_ENV = 'development';\r\n\r\n      const data = { cache_performance: { total_requests: 100 } };\r\n\r\n      // Call multiple times\r\n      getTotalRequests(data);\r\n      getTotalRequests(data);\r\n      getTotalRequests(data);\r\n\r\n      // Warning should be called at most once (may be 0 if already warned in other tests)\r\n      expect(consoleSpy.mock.calls.length).toBeLessThanOrEqual(1);\r\n\r\n      consoleSpy.mockRestore();\r\n      process.env.NODE_ENV = originalEnv;\r\n    });\r\n  });\r\n});"],"mappings":"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","ignoreList":[]}