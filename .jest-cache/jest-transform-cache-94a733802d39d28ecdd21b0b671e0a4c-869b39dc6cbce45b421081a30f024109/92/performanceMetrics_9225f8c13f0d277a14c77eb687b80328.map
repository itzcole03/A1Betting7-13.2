{"version":3,"names":["_webVitals","require","webVitalsInitialized","lcpRecorded","clampNonNegative","value","undefined","Number","isFinite","getNavigationTiming","navEntries","performance","getEntriesByType","length","nav","totalLoadTime","duration","metrics","startTime","domContentLoaded","domContentLoadedEventEnd","firstPaint","firstContentfulPaint","type","timestamp","Date","now","source","perfObj","t","timing","navigationStart","loadEventEnd","initWebVitals","options","force","emit","metric","onMetric","navigationType","entries","Array","isArray","e","record","name","rating","delta","id","onCLS","onINP","onLCP","onFCP","onTTFB","includeNavigationMetrics","__resetPerformanceGuardsForTests"],"sources":["performanceMetrics.ts"],"sourcesContent":["/*\r\n * Normalized performance metrics utilities (PR1 Performance Metrics Correction)\r\n * Provides:\r\n *  - Stable navigation timing (PerformanceNavigationTiming preferred)\r\n *  - Legacy fallback (performance.timing) with clamped non-negative values\r\n *  - Single initialization guard for Web Vitals collection\r\n *  - Consistent totalLoadTime calculation (duration) avoiding mixed time origins\r\n *  - Safe numeric coercion & validation helpers\r\n */\r\n\r\nimport { onCLS, onINP, onLCP, onFCP, onTTFB } from 'web-vitals';\r\n\r\nexport interface NavigationTimingMetrics {\r\n  startTime: number;          // navigationStart\r\n  domContentLoaded: number;   // DOMContentLoadedEventEnd - navigationStart\r\n  firstPaint?: number;        // First Paint if available\r\n  firstContentfulPaint?: number; // FCP if available (captured separately too)\r\n  totalLoadTime: number;      // duration or loadEventEnd - navigationStart\r\n  type: string;               // navigation type (reload, navigate, etc.)\r\n  timestamp: number;          // epoch ms captured time\r\n  source: 'navigation-timing' | 'legacy-timing';\r\n}\r\n\r\nexport interface WebVitalMetricRecord {\r\n  name: string;\r\n  value: number;\r\n  rating?: string;\r\n  delta?: number;\r\n  id?: string;\r\n  navigationType?: string;\r\n  timestamp: number;\r\n}\r\n\r\n// Internal guard flags\r\nlet webVitalsInitialized = false;\r\nlet lcpRecorded = false; // ensure only first LCP forwarded\r\n\r\n// Clamp helper ensuring non-negative finite numbers\r\nfunction clampNonNegative(value: number | undefined | null): number | undefined {\r\n  if (value == null) return undefined;\r\n  if (!Number.isFinite(value)) return undefined;\r\n  return value < 0 ? 0 : value;\r\n}\r\n\r\nexport function getNavigationTiming(): NavigationTimingMetrics | null {\r\n  try {\r\n    // Prefer modern PerformanceNavigationTiming entries\r\n    const navEntries = performance.getEntriesByType('navigation') as PerformanceNavigationTiming[];\r\n    if (navEntries && navEntries.length > 0) {\r\n      const nav = navEntries[0];\r\n      const totalLoadTime = clampNonNegative(nav.duration) ?? 0;\r\n      const metrics: NavigationTimingMetrics = {\r\n        startTime: nav.startTime, // should be 0 for navigation entries\r\n        domContentLoaded: clampNonNegative(nav.domContentLoadedEventEnd - nav.startTime) ?? 0,\r\n        firstPaint: undefined, // can be populated if paint entries queried outside\r\n        firstContentfulPaint: undefined,\r\n        totalLoadTime,\r\n        type: nav.type,\r\n        timestamp: Date.now(),\r\n        source: 'navigation-timing'\r\n      };\r\n      return metrics;\r\n    }\r\n\r\n    // Legacy fallback using performance.timing (deprecated but still in some browsers)\r\n  // Use indexed access to avoid any cast while acknowledging legacy API\r\n  const perfObj: Performance & { timing?: PerformanceTiming } = performance as Performance & { timing?: PerformanceTiming };\r\n  const t = perfObj.timing;\r\n    if (t) {\r\n      const navigationStart = t.navigationStart || 0;\r\n      const domContentLoaded = clampNonNegative(t.domContentLoadedEventEnd - navigationStart) ?? 0;\r\n      const loadEventEnd = clampNonNegative(t.loadEventEnd - navigationStart) ?? 0;\r\n      const metrics: NavigationTimingMetrics = {\r\n        startTime: 0,\r\n        domContentLoaded,\r\n        firstPaint: undefined,\r\n        firstContentfulPaint: undefined,\r\n        totalLoadTime: loadEventEnd,\r\n        type: 'navigate',\r\n        timestamp: Date.now(),\r\n        source: 'legacy-timing'\r\n      };\r\n      return metrics;\r\n    }\r\n\r\n    return null;\r\n  } catch {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport interface InitWebVitalsOptions {\r\n  onMetric?: (metric: WebVitalMetricRecord) => void;\r\n  includeNavigationMetrics?: boolean;\r\n  // Optionally force re-init (for tests) but default is false in prod\r\n  force?: boolean;\r\n}\r\n\r\n// Initialize web vitals a single time; returns true on first init, false otherwise\r\nexport function initWebVitals(options: InitWebVitalsOptions = {}): boolean {\r\n  if (webVitalsInitialized && !options.force) return false;\r\n  webVitalsInitialized = true;\r\n  if (options.force) {\r\n    // allow tests to reset recording state\r\n    lcpRecorded = false;\r\n  }\r\n\r\n  interface CoreWebVitalMetric {\r\n    name: string;\r\n    value: number;\r\n    rating?: string;\r\n    delta?: number;\r\n    id?: string;\r\n  }\r\n  const emit = (metric: CoreWebVitalMetric) => {\r\n    if (!options.onMetric) return;\r\n    // Safely read navigation entries: mocked getEntriesByType may return undefined\r\n    let navigationType: string | undefined = undefined;\r\n    try {\r\n      const entries = (typeof performance.getEntriesByType === 'function' && performance.getEntriesByType('navigation')) || [];\r\n      if (Array.isArray(entries) && entries.length > 0 && entries[0] && (entries[0] as any).type) {\r\n        navigationType = (entries[0] as any).type;\r\n      }\r\n    } catch (e) {\r\n      // ignore and leave navigationType undefined\r\n    }\r\n\r\n    const record: WebVitalMetricRecord = {\r\n      name: metric.name,\r\n      value: clampNonNegative(metric.value) ?? 0,\r\n      rating: metric.rating,\r\n      delta: metric.delta,\r\n      id: metric.id,\r\n      navigationType,\r\n      timestamp: Date.now()\r\n    };\r\n\r\n    if (record.name === 'LCP') {\r\n      if (lcpRecorded) return; // swallow duplicates\r\n      lcpRecorded = true;\r\n    }\r\n\r\n    options.onMetric(record);\r\n  };\r\n\r\n  // Register web-vitals listeners\r\n  onCLS(emit);\r\n  onINP(emit);\r\n  onLCP(emit);\r\n  onFCP(emit);\r\n  onTTFB(emit);\r\n\r\n  // Optional navigation metrics emission\r\n  if (options.includeNavigationMetrics) {\r\n    const nav = getNavigationTiming();\r\n    if (nav && options.onMetric) {\r\n      options.onMetric({\r\n        name: 'navigation-total-load-time',\r\n        value: nav.totalLoadTime,\r\n        timestamp: nav.timestamp\r\n      });\r\n      options.onMetric({\r\n        name: 'navigation-dom-content-loaded',\r\n        value: nav.domContentLoaded,\r\n        timestamp: nav.timestamp\r\n      });\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\n// Exposed for tests to reset state safely\r\nexport function __resetPerformanceGuardsForTests(): void {\r\n  webVitalsInitialized = false;\r\n  lcpRecorded = false;\r\n}\r\n"],"mappings":"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","ignoreList":[]}