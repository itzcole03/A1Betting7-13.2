0e94b16487b33f65bdb4d5cad40260f6
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = require("react");
const react_router_dom_1 = require("react-router-dom");
const AuthContext_1 = require("../contexts/AuthContext");
const _Register = () => {
    const [formData, setFormData] = (0, react_1.useState)({
        username: '',
        email: '',
        password: '',
        confirmPassword: '',
        first_name: '',
        last_name: '',
    });
    const [error, setError] = (0, react_1.useState)('');
    const [loading, setLoading] = (0, react_1.useState)(false);
    const { register } = (0, AuthContext_1.useAuth)();
    const _navigate = (0, react_router_dom_1.useNavigate)();
    const _handleChange = (e) => {
        setFormData({
            ...formData,
            [e.target.name]: e.target.value,
        });
    };
    const _handleSubmit = async (e) => {
        e.preventDefault();
        setLoading(true);
        setError('');
        // Validation
        if (!formData.username.trim()) {
            setError('Username is required');
            setLoading(false);
            return;
        }
        if (!formData.email.trim() || !/^[^@\s]+@[^@\s]+\.[^@\s]+$/.test(formData.email)) {
            setLoading(false);
            return;
        }
        if (formData.password.length < 8) {
            setError('Password must be at least 8 characters');
            setLoading(false);
            return;
        }
        if (!/[a-zA-Z]/.test(formData.password) || !/\d/.test(formData.password)) {
            setError('Password must contain both letters and numbers');
            setLoading(false);
            return;
        }
        if (formData.password !== formData.confirmPassword) {
            setError('Passwords do not match');
            setLoading(false);
            return;
        }
        setError('');
        try {
            await register(formData.email, formData.password);
            _navigate('/dashboard');
        }
        catch (err) {
            setError(err?.message || 'Registration failed');
        }
        setLoading(false);
    };
    return ((0, jsx_runtime_1.jsx)("div", { className: 'min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8', children: (0, jsx_runtime_1.jsxs)("div", { className: 'max-w-md w-full space-y-8', children: [(0, jsx_runtime_1.jsx)("div", { children: (0, jsx_runtime_1.jsx)("h2", { className: 'mt-6 text-center text-3xl font-extrabold text-gray-900', children: "Create your A1Betting account" }) }), (0, jsx_runtime_1.jsxs)("form", { className: 'mt-8 space-y-6', onSubmit: _handleSubmit, children: [error && ((0, jsx_runtime_1.jsx)("div", { className: 'bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded', children: error })), (0, jsx_runtime_1.jsxs)("div", { className: 'grid grid-cols-2 gap-4', children: [(0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("label", { htmlFor: 'first_name', className: 'sr-only', children: "First Name" }), (0, jsx_runtime_1.jsx)("input", { id: 'first_name', name: 'first_name', type: 'text', className: 'appearance-none rounded-md relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm', placeholder: 'First Name', value: formData.first_name, onChange: _handleChange })] }), (0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("label", { htmlFor: 'last_name', className: 'sr-only', children: "Last Name" }), (0, jsx_runtime_1.jsx)("input", { id: 'last_name', name: 'last_name', type: 'text', className: 'appearance-none rounded-md relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm', placeholder: 'Last Name', value: formData.last_name, onChange: _handleChange })] })] }), (0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("label", { htmlFor: 'username', className: 'sr-only', children: "Username" }), (0, jsx_runtime_1.jsx)("input", { id: 'username', name: 'username', type: 'text', required: true, className: 'appearance-none rounded-md relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm', placeholder: 'Username', value: formData.username, onChange: _handleChange })] }), (0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("label", { htmlFor: 'email', className: 'sr-only', children: "Email" }), (0, jsx_runtime_1.jsx)("input", { id: 'email', name: 'email', type: 'email', required: true, className: 'appearance-none rounded-md relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm', placeholder: 'Email address', value: formData.email, onChange: _handleChange })] }), (0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("label", { htmlFor: 'password', className: 'sr-only', children: "Password" }), (0, jsx_runtime_1.jsx)("input", { id: 'password', name: 'password', type: 'password', required: true, className: 'appearance-none rounded-md relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm', placeholder: 'Password', value: formData.password, onChange: _handleChange })] }), (0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("label", { htmlFor: 'confirmPassword', className: 'sr-only', children: "Confirm Password" }), (0, jsx_runtime_1.jsx)("input", { id: 'confirmPassword', name: 'confirmPassword', type: 'password', required: true, className: 'appearance-none rounded-md relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm', placeholder: 'Confirm Password', value: formData.confirmPassword, onChange: _handleChange })] }), (0, jsx_runtime_1.jsx)("div", { children: (0, jsx_runtime_1.jsx)("button", { type: 'submit', disabled: loading, className: 'group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50', children: loading ? 'Creating account...' : 'Create account' }) }), (0, jsx_runtime_1.jsx)("div", { className: 'text-center', children: (0, jsx_runtime_1.jsxs)("span", { className: 'text-sm text-gray-600', children: ["Already have an account?", ' ', (0, jsx_runtime_1.jsx)("button", { type: 'button', className: 'font-medium text-indigo-600 hover:text-indigo-500', onClick: () => _navigate('/login'), children: "Sign in" })] }) })] })] }) }));
};
exports.default = _Register;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiQzpcXFVzZXJzXFxiY21hZFxcRG93bmxvYWRzXFxBMUJldHRpbmc3LTEzLjJcXGZyb250ZW5kXFxzcmNcXGNvbXBvbmVudHNcXFJlZ2lzdGVyLnRzeCIsIm1hcHBpbmdzIjoiOzs7QUFBQSxpQ0FBaUM7QUFDakMsdURBQStDO0FBQy9DLHlEQUFrRDtBQUNsRCxNQUFNLFNBQVMsR0FBRyxHQUFHLEVBQUU7SUFDckIsTUFBTSxDQUFDLFFBQVEsRUFBRSxXQUFXLENBQUMsR0FBRyxJQUFBLGdCQUFRLEVBQUM7UUFDdkMsUUFBUSxFQUFFLEVBQUU7UUFDWixLQUFLLEVBQUUsRUFBRTtRQUNULFFBQVEsRUFBRSxFQUFFO1FBQ1osZUFBZSxFQUFFLEVBQUU7UUFDbkIsVUFBVSxFQUFFLEVBQUU7UUFDZCxTQUFTLEVBQUUsRUFBRTtLQUNkLENBQUMsQ0FBQztJQUNILE1BQU0sQ0FBQyxLQUFLLEVBQUUsUUFBUSxDQUFDLEdBQUcsSUFBQSxnQkFBUSxFQUFDLEVBQUUsQ0FBQyxDQUFDO0lBQ3ZDLE1BQU0sQ0FBQyxPQUFPLEVBQUUsVUFBVSxDQUFDLEdBQUcsSUFBQSxnQkFBUSxFQUFDLEtBQUssQ0FBQyxDQUFDO0lBRTlDLE1BQU0sRUFBRSxRQUFRLEVBQUUsR0FBRyxJQUFBLHFCQUFPLEdBQUUsQ0FBQztJQUMvQixNQUFNLFNBQVMsR0FBRyxJQUFBLDhCQUFXLEdBQUUsQ0FBQztJQUVoQyxNQUFNLGFBQWEsR0FBRyxDQUFDLENBQU0sRUFBRSxFQUFFO1FBQy9CLFdBQVcsQ0FBQztZQUNWLEdBQUcsUUFBUTtZQUNYLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUMsTUFBTSxDQUFDLEtBQUs7U0FDaEMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQyxDQUFDO0lBRUYsTUFBTSxhQUFhLEdBQUcsS0FBSyxFQUFFLENBQU0sRUFBRSxFQUFFO1FBQ3JDLENBQUMsQ0FBQyxjQUFjLEVBQUUsQ0FBQztRQUNuQixVQUFVLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDakIsUUFB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QUFDLGtNQUFrTSxFQUM1TSxXQUFXLEVBQUMsa0JBQWtCLEVBQzlCLEtBQUssRUFBRSxRQUFRLENBQUMsZUFBZSxFQUMvQixRQUFRLEVBQUUsYUFBYSxHQUN2QixJQUNFLEVBRU4sMENBQ0UsbUNBQ0UsSUFBSSxFQUFDLFFBQVEsRUFDYixRQUFRLEVBQUUsT0FBTyxFQUNqQixTQUFTLEVBQUMseVBBQXlQLFlBRWxRLE9BQU8sQ0FBQyxDQUFDLENBQUMscUJBQXFCLENBQUMsQ0FBQyxDQUFDLGdCQUFnQixHQUM1QyxHQUNMLEVBRU4sZ0NBQUssU0FBUyxFQUFDLGFBQWEsWUFDMUIsa0NBQU0sU0FBUyxFQUFDLHVCQUF1Qix5Q0FDWixHQUFHLEVBQzVCLG1DQUNFLElBQUksRUFBQyxRQUFRLEVBQ2IsU0FBUyxFQUFDLG1EQUFtRCxFQUM3RCxPQUFPLEVBQUUsR0FBRyxFQUFFLENBQUMsU0FBUyxDQUFDLFFBQVEsQ0FBQyx3QkFHM0IsSUFDSixHQUNILElBQ0QsSUFDSCxHQUNGLENBQ1AsQ0FBQztBQUNKLENBQUMsQ0FBQztBQUVGLGtCQUFlLFNBQVMsQ0FBQyIsIm5hbWVzIjpbXSwic291cmNlcyI6WyJDOlxcVXNlcnNcXGJjbWFkXFxEb3dubG9hZHNcXEExQmV0dGluZzctMTMuMlxcZnJvbnRlbmRcXHNyY1xcY29tcG9uZW50c1xcUmVnaXN0ZXIudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHVzZVN0YXRlIH0gZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgeyB1c2VOYXZpZ2F0ZSB9IGZyb20gJ3JlYWN0LXJvdXRlci1kb20nO1xyXG5pbXBvcnQgeyB1c2VBdXRoIH0gZnJvbSAnLi4vY29udGV4dHMvQXV0aENvbnRleHQnO1xyXG5jb25zdCBfUmVnaXN0ZXIgPSAoKSA9PiB7XHJcbiAgY29uc3QgW2Zvcm1EYXRhLCBzZXRGb3JtRGF0YV0gPSB1c2VTdGF0ZSh7XHJcbiAgICB1c2VybmFtZTogJycsXHJcbiAgICBlbWFpbDogJycsXHJcbiAgICBwYXNzd29yZDogJycsXHJcbiAgICBjb25maXJtUGFzc3dvcmQ6ICcnLFxyXG4gICAgZmlyc3RfbmFtZTogJycsXHJcbiAgICBsYXN0X25hbWU6ICcnLFxyXG4gIH0pO1xyXG4gIGNvbnN0IFtlcnJvciwgc2V0RXJyb3JdID0gdXNlU3RhdGUoJycpO1xyXG4gIGNvbnN0IFtsb2FkaW5nLCBzZXRMb2FkaW5nXSA9IHVzZVN0YXRlKGZhbHNlKTtcclxuXHJcbiAgY29uc3QgeyByZWdpc3RlciB9ID0gdXNlQXV0aCgpO1xyXG4gIGNvbnN0IF9uYXZpZ2F0ZSA9IHVzZU5hdmlnYXRlKCk7XHJcblxyXG4gIGNvbnN0IF9oYW5kbGVDaGFuZ2UgPSAoZTogYW55KSA9PiB7XHJcbiAgICBzZXRGb3JtRGF0YSh7XHJcbiAgICAgIC4uLmZvcm1EYXRhLFxyXG4gICAgICBbZS50YXJnZXQubmFtZV06IGUudGFyZ2V0LnZhbHVlLFxyXG4gICAgfSk7XHJcbiAgfTtcclxuXHJcbiAgY29uc3QgX2hhbmRsZVN1Ym1pdCA9IGFzeW5jIChlOiBhbnkpID0+IHtcclxuICAgIGUucHJldmVudERlZmF1bHQoKTtcclxuICAgIHNldExvYWRpbmcodHJ1ZSk7XHJcbiAgICBzZXRFcnJvcignJyk7XHJcblxyXG4gICAgLy8gVmFsaWRhdGlvblxyXG4gICAgaWYgKCFmb3JtRGF0YS51c2VybmFtZS50cmltKCkpIHtcclxuICAgICAgc2V0RXJyb3IoJ1VzZXJuYW1lIGlzIHJlcXVpcmVkJyk7XHJcbiAgICAgIHNldExvYWRpbmcoZmFsc2UpO1xyXG4gICAgICByZXR1cm47XHJcbiAgICB9XHJcbiAgICBpZiAoIWZvcm1EYXRhLmVtYWlsLnRyaW0oKSB8fCAhL15bXkBcXHNdK0BbXkBcXHNdK1xcLlteQFxcc10rJC8udGVzdChmb3JtRGF0YS5lbWFpbCkpIHtcclxuICAgICAgc2V0TG9hZGluZyhmYWxzZSk7XHJcbiAgICAgIHJldHVybjtcclxuICAgIH1cclxuICAgIGlmIChmb3JtRGF0YS5wYXNzd29yZC5sZW5ndGggPCA4KSB7XHJcbiAgICAgIHNldEVycm9yKCdQYXNzd29yZCBtdXN0IGJlIGF0IGxlYXN0IDggY2hhcmFjdGVycycpO1xyXG4gICAgICBzZXRMb2FkaW5nKGZhbHNlKTtcclxuICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG4gICAgaWYgKCEvW2EtekEtWl0vLnRlc3QoZm9ybURhdGEucGFzc3dvcmQpIHx8ICEvXFxkLy50ZXN0KGZvcm1EYXRhLnBhc3N3b3JkKSkge1xyXG4gICAgICBzZXRFcnJvcignUGFzc3dvcmQgbXVzdCBjb250YWluIGJvdGggbGV0dGVycyBhbmQgbnVtYmVycycpO1xyXG4gICAgICBzZXRMb2FkaW5nKGZhbHNlKTtcclxuICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG4gICAgaWYgKGZvcm1EYXRhLnBhc3N3b3JkICE9PSBmb3JtRGF0YS5jb25maXJtUGFzc3dvcmQpIHtcclxuICAgICAgc2V0RXJyb3IoJ1Bhc3N3b3JkcyBkbyBub3QgbWF0Y2gnKTtcclxuICAgICAgc2V0TG9hZGluZyhmYWxzZSk7XHJcbiAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBzZXRFcnJvcignJyk7XHJcbiAgICB0cnkge1xyXG4gICAgICBhd2FpdCByZWdpc3Rlcihmb3JtRGF0YS5lbWFpbCwgZm9ybURhdGEucGFzc3dvcmQpO1xyXG4gICAgICBfbmF2aWdhdGUoJy9kYXNoYm9hcmQnKTtcclxuICAgIH0gY2F0Y2ggKGVycjogYW55KSB7XHJcbiAgICAgIHNldEVycm9yKGVycj8ubWVzc2FnZSB8fCAnUmVnaXN0cmF0aW9uIGZhaWxlZCcpO1xyXG4gICAgfVxyXG5cclxuICAgIHNldExvYWRpbmcoZmFsc2UpO1xyXG4gIH07XHJcblxyXG4gIHJldHVybiAoXHJcbiAgICA8ZGl2IGNsYXNzTmFtZT0nbWluLWgtc2NyZWVuIGZsZXggaXRlbXMtY2VudGVyIGp1c3RpZnktY2VudGVyIGJnLWdyYXktNTAgcHktMTIgcHgtNCBzbTpweC02IGxnOnB4LTgnPlxyXG4gICAgICA8ZGl2IGNsYXNzTmFtZT0nbWF4LXctbWQgdy1mdWxsIHNwYWNlLXktOCc+XHJcbiAgICAgICAgPGRpdj5cclxuICAgICAgICAgIDxoMiBjbGFzc05hbWU9J210LTYgdGV4dC1jZW50ZXIgdGV4dC0zeGwgZm9udC1leHRyYWJvbGQgdGV4dC1ncmF5LTkwMCc+XHJcbiAgICAgICAgICAgIENyZWF0ZSB5b3VyIEExQmV0dGluZyBhY2NvdW50XHJcbiAgICAgICAgICA8L2gyPlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDxmb3JtIGNsYXNzTmFtZT0nbXQtOCBzcGFjZS15LTYnIG9uU3VibWl0PXtfaGFuZGxlU3VibWl0fT5cclxuICAgICAgICAgIHtlcnJvciAmJiAoXHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSdiZy1yZWQtMTAwIGJvcmRlciBib3JkZXItcmVkLTQwMCB0ZXh0LXJlZC03MDAgcHgtNCBweS0zIHJvdW5kZWQnPlxyXG4gICAgICAgICAgICAgIHtlcnJvcn1cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICApfVxyXG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9J2dyaWQgZ3JpZC1jb2xzLTIgZ2FwLTQnPlxyXG4gICAgICAgICAgICA8ZGl2PlxyXG4gICAgICAgICAgICAgIDxsYWJlbCBodG1sRm9yPSdmaXJzdF9uYW1lJyBjbGFzc05hbWU9J3NyLW9ubHknPlxyXG4gICAgICAgICAgICAgICAgRmlyc3QgTmFtZVxyXG4gICAgICAgICAgICAgIDwvbGFiZWw+XHJcbiAgICAgICAgICAgICAgPGlucHV0XHJcbiAgICAgICAgICAgICAgICBpZD0nZmlyc3RfbmFtZSdcclxuICAgICAgICAgICAgICAgIG5hbWU9J2ZpcnN0X25hbWUnXHJcbiAgICAgICAgICAgICAgICB0eXBlPSd0ZXh0J1xyXG4gICAgICAgICAgICAgICAgY2xhc3NOYW1lPSdhcHBlYXJhbmNlLW5vbmUgcm91bmRlZC1tZCByZWxhdGl2ZSBibG9jayB3LWZ1bGwgcHgtMyBweS0yIGJvcmRlciBib3JkZXItZ3JheS0zMDAgcGxhY2Vob2xkZXItZ3JheS01MDAgdGV4dC1ncmF5LTkwMCBmb2N1czpvdXRsaW5lLW5vbmUgZm9jdXM6cmluZy1pbmRpZ28tNTAwIGZvY3VzOmJvcmRlci1pbmRpZ28tNTAwIHNtOnRleHQtc20nXHJcbiAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcj0nRmlyc3QgTmFtZSdcclxuICAgICAgICAgICAgICAgIHZhbHVlPXtmb3JtRGF0YS5maXJzdF9uYW1lfVxyXG4gICAgICAgICAgICAgICAgb25DaGFuZ2U9e19oYW5kbGVDaGFuZ2V9XHJcbiAgICAgICAgICAgICAgLz5cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgIDxkaXY+XHJcbiAgICAgICAgICAgICAgPGxhYmVsIGh0bWxGb3I9J2xhc3RfbmFtZScgY2xhc3NOYW1lPSdzci1vbmx5Jz5cclxuICAgICAgICAgICAgICAgIExhc3QgTmFtZVxyXG4gICAgICAgICAgICAgIDwvbGFiZWw+XHJcbiAgICAgICAgICAgICAgPGlucHV0XHJcbiAgICAgICAgICAgICAgICBpZD0nbGFzdF9uYW1lJ1xyXG4gICAgICAgICAgICAgICAgbmFtZT0nbGFzdF9uYW1lJ1xyXG4gICAgICAgICAgICAgICAgdHlwZT0ndGV4dCdcclxuICAgICAgICAgICAgICAgIGNsYXNzTmFtZT0nYXBwZWFyYW5jZS1ub25lIHJvdW5kZWQtbWQgcmVsYXRpdmUgYmxvY2sgdy1mdWxsIHB4LTMgcHktMiBib3JkZXIgYm9yZGVyLWdyYXktMzAwIHBsYWNlaG9sZGVyLWdyYXktNTAwIHRleHQtZ3JheS05MDAgZm9jdXM6b3V0bGluZS1ub25lIGZvY3VzOnJpbmctaW5kaWdvLTUwMCBmb2N1czpib3JkZXItaW5kaWdvLTUwMCBzbTp0ZXh0LXNtJ1xyXG4gICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9J0xhc3QgTmFtZSdcclxuICAgICAgICAgICAgICAgIHZhbHVlPXtmb3JtRGF0YS5sYXN0X25hbWV9XHJcbiAgICAgICAgICAgICAgICBvbkNoYW5nZT17X2hhbmRsZUNoYW5nZX1cclxuICAgICAgICAgICAgICAvPlxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgIDwvZGl2PlxyXG5cclxuICAgICAgICAgIDxkaXY+XHJcbiAgICAgICAgICAgIDxsYWJlbCBodG1sRm9yPSd1c2VybmFtZScgY2xhc3NOYW1lPSdzci1vbmx5Jz5cclxuICAgICAgICAgICAgICBVc2VybmFtZVxyXG4gICAgICAgICAgICA8L2xhYmVsPlxyXG4gICAgICAgICAgICA8aW5wdXRcclxuICAgICAgICAgICAgICBpZD0ndXNlcm5hbWUnXHJcbiAgICAgICAgICAgICAgbmFtZT0ndXNlcm5hbWUnXHJcbiAgICAgICAgICAgICAgdHlwZT0ndGV4dCdcclxuICAgICAgICAgICAgICByZXF1aXJlZFxyXG4gICAgICAgICAgICAgIGNsYXNzTmFtZT0nYXBwZWFyYW5jZS1ub25lIHJvdW5kZWQtbWQgcmVsYXRpdmUgYmxvY2sgdy1mdWxsIHB4LTMgcHktMiBib3JkZXIgYm9yZGVyLWdyYXktMzAwIHBsYWNlaG9sZGVyLWdyYXktNTAwIHRleHQtZ3JheS05MDAgZm9jdXM6b3V0bGluZS1ub25lIGZvY3VzOnJpbmctaW5kaWdvLTUwMCBmb2N1czpib3JkZXItaW5kaWdvLTUwMCBzbTp0ZXh0LXNtJ1xyXG4gICAgICAgICAgICAgIHBsYWNlaG9sZGVyPSdVc2VybmFtZSdcclxuICAgICAgICAgICAgICB2YWx1ZT17Zm9ybURhdGEudXNlcm5hbWV9XHJcbiAgICAgICAgICAgICAgb25DaGFuZ2U9e19oYW5kbGVDaGFuZ2V9XHJcbiAgICAgICAgICAgIC8+XHJcbiAgICAgICAgICA8L2Rpdj5cclxuXHJcbiAgICAgICAgICA8ZGl2PlxyXG4gICAgICAgICAgICA8bGFiZWwgaHRtbEZvcj0nZW1haWwnIGNsYXNzTmFtZT0nc3Itb25seSc+XHJcbiAgICAgICAgICAgICAgRW1haWxcclxuICAgICAgICAgICAgPC9sYWJlbD5cclxuICAgICAgICAgICAgPGlucHV0XHJcbiAgICAgICAgICAgICAgaWQ9J2VtYWlsJ1xyXG4gICAgICAgICAgICAgIG5hbWU9J2VtYWlsJ1xyXG4gICAgICAgICAgICAgIHR5cGU9J2VtYWlsJ1xyXG4gICAgICAgICAgICAgIHJlcXVpcmVkXHJcbiAgICAgICAgICAgICAgY2xhc3NOYW1lPSdhcHBlYXJhbmNlLW5vbmUgcm91bmRlZC1tZCByZWxhdGl2ZSBibG9jayB3LWZ1bGwgcHgtMyBweS0yIGJvcmRlciBib3JkZXItZ3JheS0zMDAgcGxhY2Vob2xkZXItZ3JheS01MDAgdGV4dC1ncmF5LTkwMCBmb2N1czpvdXRsaW5lLW5vbmUgZm9jdXM6cmluZy1pbmRpZ28tNTAwIGZvY3VzOmJvcmRlci1pbmRpZ28tNTAwIHNtOnRleHQtc20nXHJcbiAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9J0VtYWlsIGFkZHJlc3MnXHJcbiAgICAgICAgICAgICAgdmFsdWU9e2Zvcm1EYXRhLmVtYWlsfVxyXG4gICAgICAgICAgICAgIG9uQ2hhbmdlPXtfaGFuZGxlQ2hhbmdlfVxyXG4gICAgICAgICAgICAvPlxyXG4gICAgICAgICAgPC9kaXY+XHJcblxyXG4gICAgICAgICAgPGRpdj5cclxuICAgICAgICAgICAgPGxhYmVsIGh0bWxGb3I9J3Bhc3N3b3JkJyBjbGFzc05hbWU9J3NyLW9ubHknPlxyXG4gICAgICAgICAgICAgIFBhc3N3b3JkXHJcbiAgICAgICAgICAgIDwvbGFiZWw+XHJcbiAgICAgICAgICAgIDxpbnB1dFxyXG4gICAgICAgICAgICAgIGlkPSdwYXNzd29yZCdcclxuICAgICAgICAgICAgICBuYW1lPSdwYXNzd29yZCdcclxuICAgICAgICAgICAgICB0eXBlPSdwYXNzd29yZCdcclxuICAgICAgICAgICAgICByZXF1aXJlZFxyXG4gICAgICAgICAgICAgIGNsYXNzTmFtZT0nYXBwZWFyYW5jZS1ub25lIHJvdW5kZWQtbWQgcmVsYXRpdmUgYmxvY2sgdy1mdWxsIHB4LTMgcHktMiBib3JkZXIgYm9yZGVyLWdyYXktMzAwIHBsYWNlaG9sZGVyLWdyYXktNTAwIHRleHQtZ3JheS05MDAgZm9jdXM6b3V0bGluZS1ub25lIGZvY3VzOnJpbmctaW5kaWdvLTUwMCBmb2N1czpib3JkZXItaW5kaWdvLTUwMCBzbTp0ZXh0LXNtJ1xyXG4gICAgICAgICAgICAgIHBsYWNlaG9sZGVyPSdQYXNzd29yZCdcclxuICAgICAgICAgICAgICB2YWx1ZT17Zm9ybURhdGEucGFzc3dvcmR9XHJcbiAgICAgICAgICAgICAgb25DaGFuZ2U9e19oYW5kbGVDaGFuZ2V9XHJcbiAgICAgICAgICAgIC8+XHJcbiAgICAgICAgICA8L2Rpdj5cclxuXHJcbiAgICAgICAgICA8ZGl2PlxyXG4gICAgICAgICAgICA8bGFiZWwgaHRtbEZvcj0nY29uZmlybVBhc3N3b3JkJyBjbGFzc05hbWU9J3NyLW9ubHknPlxyXG4gICAgICAgICAgICAgIENvbmZpcm0gUGFzc3dvcmRcclxuICAgICAgICAgICAgPC9sYWJlbD5cclxuICAgICAgICAgICAgPGlucHV0XHJcbiAgICAgICAgICAgICAgaWQ9J2NvbmZpcm1QYXNzd29yZCdcclxuICAgICAgICAgICAgICBuYW1lPSdjb25maXJtUGFzc3dvcmQnXHJcbiAgICAgICAgICAgICAgdHlwZT0ncGFzc3dvcmQnXHJcbiAgICAgICAgICAgICAgcmVxdWlyZWRcclxuICAgICAgICAgICAgICBjbGFzc05hbWU9J2FwcGVhcmFuY2Utbm9uZSByb3VuZGVkLW1kIHJlbGF0aXZlIGJsb2NrIHctZnVsbCBweC0zIHB5LTIgYm9yZGVyIGJvcmRlci1ncmF5LTMwMCBwbGFjZWhvbGRlci1ncmF5LTUwMCB0ZXh0LWdyYXktOTAwIGZvY3VzOm91dGxpbmUtbm9uZSBmb2N1czpyaW5nLWluZGlnby01MDAgZm9jdXM6Ym9yZGVyLWluZGlnby01MDAgc206dGV4dC1zbSdcclxuICAgICAgICAgICAgICBwbGFjZWhvbGRlcj0nQ29uZmlybSBQYXNzd29yZCdcclxuICAgICAgICAgICAgICB2YWx1ZT17Zm9ybURhdGEuY29uZmlybVBhc3N3b3JkfVxyXG4gICAgICAgICAgICAgIG9uQ2hhbmdlPXtfaGFuZGxlQ2hhbmdlfVxyXG4gICAgICAgICAgICAvPlxyXG4gICAgICAgICAgPC9kaXY+XHJcblxyXG4gICAgICAgICAgPGRpdj5cclxuICAgICAgICAgICAgPGJ1dHRvblxyXG4gICAgICAgICAgICAgIHR5cGU9J3N1Ym1pdCdcclxuICAgICAgICAgICAgICBkaXNhYmxlZD17bG9hZGluZ31cclxuICAgICAgICAgICAgICBjbGFzc05hbWU9J2dyb3VwIHJlbGF0aXZlIHctZnVsbCBmbGV4IGp1c3RpZnktY2VudGVyIHB5LTIgcHgtNCBib3JkZXIgYm9yZGVyLXRyYW5zcGFyZW50IHRleHQtc20gZm9udC1tZWRpdW0gcm91bmRlZC1tZCB0ZXh0LXdoaXRlIGJnLWluZGlnby02MDAgaG92ZXI6YmctaW5kaWdvLTcwMCBmb2N1czpvdXRsaW5lLW5vbmUgZm9jdXM6cmluZy0yIGZvY3VzOnJpbmctb2Zmc2V0LTIgZm9jdXM6cmluZy1pbmRpZ28tNTAwIGRpc2FibGVkOm9wYWNpdHktNTAnXHJcbiAgICAgICAgICAgID5cclxuICAgICAgICAgICAgICB7bG9hZGluZyA/ICdDcmVhdGluZyBhY2NvdW50Li4uJyA6ICdDcmVhdGUgYWNjb3VudCd9XHJcbiAgICAgICAgICAgIDwvYnV0dG9uPlxyXG4gICAgICAgICAgPC9kaXY+XHJcblxyXG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9J3RleHQtY2VudGVyJz5cclxuICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPSd0ZXh0LXNtIHRleHQtZ3JheS02MDAnPlxyXG4gICAgICAgICAgICAgIEFscmVhZHkgaGF2ZSBhbiBhY2NvdW50P3snICd9XHJcbiAgICAgICAgICAgICAgPGJ1dHRvblxyXG4gICAgICAgICAgICAgICAgdHlwZT0nYnV0dG9uJ1xyXG4gICAgICAgICAgICAgICAgY2xhc3NOYW1lPSdmb250LW1lZGl1bSB0ZXh0LWluZGlnby02MDAgaG92ZXI6dGV4dC1pbmRpZ28tNTAwJ1xyXG4gICAgICAgICAgICAgICAgb25DbGljaz17KCkgPT4gX25hdmlnYXRlKCcvbG9naW4nKX1cclxuICAgICAgICAgICAgICA+XHJcbiAgICAgICAgICAgICAgICBTaWduIGluXHJcbiAgICAgICAgICAgICAgPC9idXR0b24+XHJcbiAgICAgICAgICAgIDwvc3Bhbj5cclxuICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDwvZm9ybT5cclxuICAgICAgPC9kaXY+XHJcbiAgICA8L2Rpdj5cclxuICApO1xyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgX1JlZ2lzdGVyO1xyXG4iXSwidmVyc2lvbiI6M30=