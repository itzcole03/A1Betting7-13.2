{"version":3,"names":["_react","require","DEFAULTS","autoRefresh","refreshIntervalMs","refreshInterval","cacheTTLms","initialFilters","searchQuery","limit","usePropfinderData","opts","options","state","setState","useState","performance","odds","loading","lastFetched","useRef","timerRef","toNumber","v","trim","n","Number","isFinite","asRecord","fetchOnce","s","now","Date","current","res","fetch","ok","Error","status","json","rawOpp","Array","isArray","data","opportunities","map","op","rec","date","lastUpdated","event_date","toISOString","actual","line","opponent","team","undefined","label","player","market","name","err","error","message","String","fetchOnceRef","useEffect","window","setInterval","clearInterval","usePropFinderData","adapted","setOpportunities","stats","setStats","refreshing","setRefreshing","filters","setFilters","setSearchQuery","isAutoRefreshEnabled","setIsAutoRefreshEnabled","fetchRealOpportunities","useCallback","opportunitiesData","transformedOpportunities","id","Math","random","playerImage","teamLogo","opponentLogo","sport","pick","impliedProbability","aiProbability","edge","confidence","projectedValue","volume","trend","trendStrength","timeToGame","venue","weather","injuries","recentForm","matchupHistory","lineMovement","bookmakers","book","bookRec","isBookmarked","Boolean","tags","socialSentiment","sharpMoney","alertTriggered","alertSeverity","bestBookmaker","lineSpread","oddsSpread","numBookmakers","hasArbitrage","arbitrageProfitPct","summary","total_opportunities","avg_confidence","max_edge","alert_triggered_count","sharp_heavy_count","sports_count","markets_count","last_updated","interval","refreshData","updateFilters","newFilters","bookmarkOpportunity","_opportunityId","_opportunity","_bookmarked","getOpportunityById","find","opp","getUserBookmarks","filter","toggleAutoRefresh","userId","exports"],"sources":["usePropFinderData.ts"],"sourcesContent":["import { useEffect, useState, useRef, useCallback } from 'react';\r\n\r\n// Define the missing types\r\ntype PerformancePoint = {\r\n  date: string;\r\n  actual: number;\r\n  line: number;\r\n  opponent?: string;\r\n};\r\n\r\ntype OddsPoint = {\r\n  label: string;\r\n  odds: number;\r\n};\r\n\r\ntype UsePropfinderOptions = {\r\n  autoRefresh?: boolean;\r\n  refreshIntervalMs?: number;\r\n  // Backwards-compatible second-based option used across older callers\r\n  refreshInterval?: number;\r\n  cacheTTLms?: number;\r\n  // Compatibility: some callers pass initialFilters/searchQuery/limit\r\n  initialFilters?: Record<string, unknown>;\r\n  searchQuery?: string;\r\n  limit?: number;\r\n};\r\n\r\ntype PropfinderResult = {\r\n  performance: PerformancePoint[];\r\n  odds: OddsPoint[];\r\n  loading: boolean;\r\n  error?: string;\r\n};\r\n\r\nconst DEFAULTS: Required<UsePropfinderOptions> = {\r\n  autoRefresh: true,\r\n  refreshIntervalMs: 30_000,\r\n  refreshInterval: 30,\r\n  cacheTTLms: 15_000,\r\n  initialFilters: {},\r\n  searchQuery: '',\r\n  limit: 50,\r\n};\r\n\r\nexport default function usePropfinderData(opts?: UsePropfinderOptions): PropfinderResult {\r\n  const options = { ...DEFAULTS, ...(opts || {}) };\r\n  const [state, setState] = useState<PropfinderResult>({ performance: [], odds: [], loading: true });\r\n  const lastFetched = useRef<number | null>(null);\r\n  const timerRef = useRef<number | null>(null);\r\n\r\n  const toNumber = (v: unknown): number => {\r\n    if (typeof v === 'number') return v;\r\n    if (typeof v === 'string' && v.trim() !== '') {\r\n      const n = Number(v);\r\n      return Number.isFinite(n) ? n : 0;\r\n    }\r\n    return 0;\r\n  };\r\n\r\n  const asRecord = (v: unknown): Record<string, unknown> => (typeof v === 'object' && v !== null) ? (v as Record<string, unknown>) : {};\r\n\r\n  const fetchOnce = async () => {\r\n    try {\r\n      setState((s) => ({ ...s, loading: true }));\r\n\r\n      const now = Date.now();\r\n      if (lastFetched.current && now - lastFetched.current < options.cacheTTLms) {\r\n        setState((s) => ({ ...s, loading: false }));\r\n        return;\r\n      }\r\n\r\n      const res = await fetch('/api/propfinder/opportunities');\r\n      if (!res.ok) throw new Error(`HTTP ${res.status}`);\r\n      const json = await res.json();\r\n\r\n      const rawOpp = Array.isArray(json?.data?.opportunities) ? json.data.opportunities : (Array.isArray(json?.opportunities) ? json.opportunities : []);\r\n      const opportunities = Array.isArray(rawOpp) ? rawOpp as unknown[] : [];\r\n\r\n      const performance: PerformancePoint[] = opportunities.map((op) => {\r\n        const rec = asRecord(op);\r\n        return {\r\n          date: (rec.lastUpdated as string) || (rec.date as string) || (rec.event_date as string) || new Date().toISOString(),\r\n          actual: toNumber(rec.line),\r\n          line: toNumber(rec.line),\r\n          opponent: (rec.opponent as string) || (rec.team as string) || undefined,\r\n        };\r\n      });\r\n\r\n      const odds: OddsPoint[] = opportunities.map((op) => {\r\n        const rec = asRecord(op);\r\n        return {\r\n          label: (rec.player as string) || (rec.market as string) || (rec.name as string) || 'unknown',\r\n          odds: toNumber(rec.odds),\r\n        };\r\n      });\r\n\r\n      lastFetched.current = Date.now();\r\n      setState({ performance, odds, loading: false });\r\n    } catch (err: unknown) {\r\n      setState({ performance: [], odds: [], loading: false, error: err instanceof Error ? err.message : String(err) });\r\n    }\r\n  };\r\n\r\n  // Keep a ref to fetchOnce so effect dependencies are stable\r\n  const fetchOnceRef = useRef(fetchOnce);\r\n  fetchOnceRef.current = fetchOnce;\r\n\r\n  useEffect(() => {\r\n    void fetchOnceRef.current();\r\n    if (options.autoRefresh) {\r\n      timerRef.current = window.setInterval(() => { void fetchOnceRef.current(); }, options.refreshIntervalMs);\r\n      return () => { if (timerRef.current) window.clearInterval(timerRef.current); };\r\n    }\r\n    return undefined;\r\n  }, [options.autoRefresh, options.refreshIntervalMs, options.cacheTTLms]);\r\n\r\n  return state;\r\n}\r\n\r\n// Compatibility exports for existing code that imports the older hook and types.\r\nexport type PropOpportunity = {\r\n  id: string;\r\n  player: string;\r\n  playerImage?: string;\r\n  team?: string;\r\n  teamLogo?: string;\r\n  opponent?: string;\r\n  opponentLogo?: string;\r\n  sport?: string;\r\n  market?: string;\r\n  line?: number;\r\n  pick?: 'over' | 'under';\r\n  odds?: number;\r\n  impliedProbability?: number;\r\n  aiProbability?: number;\r\n  edge?: number;\r\n  confidence?: number;\r\n  projectedValue?: number;\r\n  volume?: number;\r\n  trend?: 'up' | 'down' | 'stable';\r\n  trendStrength?: number;\r\n  timeToGame?: string;\r\n  venue?: 'home' | 'away';\r\n  weather?: string;\r\n  injuries?: string[];\r\n  recentForm?: number[];\r\n  matchupHistory?: {\r\n    games?: number;\r\n    average?: number;\r\n    hitRate?: number;\r\n  };\r\n  lineMovement?: {\r\n    open?: number;\r\n    current?: number;\r\n    direction?: 'up' | 'down' | 'stable';\r\n  };\r\n  bookmakers?: Array<{\r\n    name: string;\r\n    odds: number;\r\n    line: number;\r\n  }>;\r\n  isBookmarked?: boolean;\r\n  tags?: string[];\r\n  socialSentiment?: number;\r\n  sharpMoney?: 'heavy' | 'moderate' | 'light' | 'public';\r\n  lastUpdated?: string;\r\n  alertTriggered?: boolean;\r\n  alertSeverity?: string;\r\n  bestBookmaker?: string;\r\n  lineSpread?: number;\r\n  oddsSpread?: number;\r\n  numBookmakers?: number;\r\n  hasArbitrage?: boolean;\r\n  arbitrageProfitPct?: number;\r\n};\r\n\r\ntype PropFinderStats = {\r\n  total_opportunities?: number;\r\n  avg_confidence?: number;\r\n  max_edge?: number;\r\n  alert_triggered_count?: number;\r\n  sharp_heavy_count?: number;\r\n  sports_count?: number;\r\n  markets_count?: number;\r\n  last_updated?: string;\r\n};\r\n\r\nexport const usePropFinderData = (options?: UsePropfinderOptions) => {\r\n  // Adapt older callers that pass `refreshInterval` (seconds) into our ms-based option\r\n  const adapted: UsePropfinderOptions | undefined = options ? {\r\n    ...options,\r\n    refreshIntervalMs: options.refreshIntervalMs ?? (options.refreshInterval ? options.refreshInterval * 1000 : undefined)\r\n  } : undefined;\r\n\r\n  const { loading, error } = usePropfinderData(adapted);\r\n\r\n  // State for managing opportunities and filters\r\n  const [opportunities, setOpportunities] = useState<PropOpportunity[]>([]);\r\n  const [stats, setStats] = useState<PropFinderStats | null>(null);\r\n  const [refreshing, setRefreshing] = useState(false);\r\n  const [filters, setFilters] = useState<Record<string, unknown>>({});\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [isAutoRefreshEnabled, setIsAutoRefreshEnabled] = useState(options?.autoRefresh ?? true);\r\n\r\n  const fetchRealOpportunities = useCallback(async () => {\r\n    const asRecord = (v: unknown): Record<string, unknown> => (typeof v === 'object' && v !== null) ? (v as Record<string, unknown>) : {};\r\n\r\n    try {\r\n      setRefreshing(true);\r\n      const res = await fetch('/api/propfinder/opportunities');\r\n      if (!res.ok) throw new Error(`HTTP ${res.status}`);\r\n      const json = await res.json();\r\n\r\n      // Extract opportunities from the real API response\r\n      const rawOpp = json?.data?.opportunities || json?.opportunities || [];\r\n      const opportunitiesData: unknown[] = Array.isArray(rawOpp) ? rawOpp : [];\r\n\r\n      // Transform to PropOpportunity format using real data\r\n      const transformedOpportunities: PropOpportunity[] = opportunitiesData.map((op: unknown) => {\r\n        const rec = asRecord(op);\r\n        return {\r\n          id: String(rec.id || `opp-${Math.random()}`),\r\n          player: String(rec.player || 'Unknown Player'),\r\n          playerImage: rec.playerImage ? String(rec.playerImage) : undefined,\r\n          team: String(rec.team || 'Unknown Team'),\r\n          teamLogo: rec.teamLogo ? String(rec.teamLogo) : undefined,\r\n          opponent: String(rec.opponent || 'Unknown Opponent'),\r\n          opponentLogo: rec.opponentLogo ? String(rec.opponentLogo) : undefined,\r\n          sport: String(rec.sport || 'Unknown Sport'),\r\n          market: String(rec.market || 'Unknown Market'),\r\n          line: Number(rec.line) || 0,\r\n          pick: String(rec.pick || 'over') as 'over' | 'under',\r\n          odds: Number(rec.odds) || 0,\r\n          impliedProbability: Number(rec.impliedProbability) || 0,\r\n          aiProbability: Number(rec.aiProbability) || 0,\r\n          edge: Number(rec.edge) || 0,\r\n          confidence: Number(rec.confidence) || 0,\r\n          projectedValue: Number(rec.projectedValue) || 0,\r\n          volume: Number(rec.volume) || 0,\r\n          trend: String(rec.trend || 'stable') as 'up' | 'down' | 'stable',\r\n          trendStrength: Number(rec.trendStrength) || 0,\r\n          timeToGame: String(rec.timeToGame || 'Unknown'),\r\n          venue: String(rec.venue || 'home') as 'home' | 'away',\r\n          weather: rec.weather ? String(rec.weather) : undefined,\r\n          injuries: Array.isArray(rec.injuries) ? rec.injuries.map(String) : [],\r\n          recentForm: Array.isArray(rec.recentForm) ? rec.recentForm.map(Number) : [],\r\n          matchupHistory: asRecord(rec.matchupHistory),\r\n          lineMovement: asRecord(rec.lineMovement),\r\n          bookmakers: Array.isArray(rec.bookmakers) ? rec.bookmakers.map((book: unknown) => {\r\n            const bookRec = asRecord(book);\r\n            return {\r\n              name: String(bookRec.name || ''),\r\n              odds: Number(bookRec.odds) || 0,\r\n              line: Number(bookRec.line) || 0,\r\n            };\r\n          }) : [],\r\n          isBookmarked: Boolean(rec.isBookmarked || false),\r\n          tags: Array.isArray(rec.tags) ? rec.tags.map(String) : [],\r\n          socialSentiment: Number(rec.socialSentiment) || 50,\r\n          sharpMoney: String(rec.sharpMoney || 'moderate') as 'heavy' | 'moderate' | 'light' | 'public',\r\n          lastUpdated: String(rec.lastUpdated || new Date().toISOString()),\r\n          alertTriggered: Boolean(rec.alertTriggered || false),\r\n          alertSeverity: rec.alertSeverity ? String(rec.alertSeverity) : undefined,\r\n          // Phase 1.2 fields\r\n          bestBookmaker: rec.bestBookmaker ? String(rec.bestBookmaker) : undefined,\r\n          lineSpread: Number(rec.lineSpread) || 0,\r\n          oddsSpread: Number(rec.oddsSpread) || 0,\r\n          numBookmakers: Number(rec.numBookmakers) || 0,\r\n          hasArbitrage: Boolean(rec.hasArbitrage || false),\r\n          arbitrageProfitPct: Number(rec.arbitrageProfitPct) || 0,\r\n        };\r\n      });\r\n\r\n      setOpportunities(transformedOpportunities);\r\n\r\n      // Extract stats from the API response\r\n      if (json?.data?.summary) {\r\n        const summary = asRecord(json.data.summary);\r\n        setStats({\r\n          total_opportunities: Number(summary.total_opportunities) || 0,\r\n          avg_confidence: Number(summary.avg_confidence) || 0,\r\n          max_edge: Number(summary.max_edge) || 0,\r\n          alert_triggered_count: Number(summary.alert_triggered_count) || 0,\r\n          sharp_heavy_count: Number(summary.sharp_heavy_count) || 0,\r\n          sports_count: Number(summary.sports_count) || 0,\r\n          markets_count: Number(summary.markets_count) || 0,\r\n          last_updated: String(summary.last_updated || new Date().toISOString()),\r\n        });\r\n      }\r\n\r\n    } catch {\r\n      // Error is already handled by the parent hook's error state\r\n    } finally {\r\n      setRefreshing(false);\r\n    }\r\n  }, []);\r\n\r\n  // Fetch data on mount and when dependencies change\r\n  useEffect(() => {\r\n    fetchRealOpportunities();\r\n  }, [fetchRealOpportunities, options?.autoRefresh, options?.refreshInterval]);\r\n\r\n  // Auto-refresh functionality\r\n  useEffect(() => {\r\n    if (!isAutoRefreshEnabled) return;\r\n\r\n    const interval = setInterval(() => {\r\n      fetchRealOpportunities();\r\n    }, options?.refreshIntervalMs || 30000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, [fetchRealOpportunities, isAutoRefreshEnabled, options?.refreshIntervalMs]);\r\n\r\n  return {\r\n    opportunities,\r\n    stats,\r\n    loading: loading || refreshing,\r\n    refreshing,\r\n    error: error || null,\r\n    filters,\r\n    searchQuery,\r\n    refreshData: fetchRealOpportunities,\r\n    updateFilters: (newFilters: Record<string, unknown>) => setFilters(newFilters),\r\n    setSearchQuery,\r\n    bookmarkOpportunity: async (_opportunityId?: string, _opportunity?: PropOpportunity, _bookmarked?: boolean) => {\r\n      // TODO: Implement real bookmark functionality\r\n    },\r\n    getOpportunityById: async (id: string) => {\r\n      return opportunities.find(opp => opp.id === id) || null;\r\n    },\r\n    getUserBookmarks: async () => opportunities.filter(opp => opp.isBookmarked),\r\n    toggleAutoRefresh: () => setIsAutoRefreshEnabled(!isAutoRefreshEnabled),\r\n    isAutoRefreshEnabled,\r\n    userId: undefined,\r\n  } as const;\r\n};\r\n"],"mappings":"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","ignoreList":[]}