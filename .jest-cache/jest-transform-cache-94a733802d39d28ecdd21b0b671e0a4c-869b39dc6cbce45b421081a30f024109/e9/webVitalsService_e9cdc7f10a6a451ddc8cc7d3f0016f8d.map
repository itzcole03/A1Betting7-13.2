{"version":3,"names":["_webVitals","require","_performanceMetrics","_logger","WebVitalsService","constructor","metrics","lcp","cls","inp","ttfb","fcp","entries","lcpLogged","emittedCustomMetrics","Set","getRating","name","value","thresholds","good","poor","threshold","logMetric","metric","entry","rating","timestamp","Date","now","url","window","location","href","userAgent","navigator","push","process","env","NODE_ENV","console","log","getThresholdInfo","sendToAnalytics","unit","response","fetch","method","headers","body","JSON","stringify","ok","logger","warn","status","debug","error","init","firstInit","initWebVitals","onMetric","m","includes","minimalMetric","delta","id","navigationType","includeNavigationMetrics","onLCP","onCLS","bind","onINP","onTTFB","onFCP","trackCustomMetrics","performance","addEventListener","start","getEntriesByType","totalLoadTime","Math","round","duration","resources","jsResources","filter","resource","totalJSSize","reduce","total","transferSize","toFixed","perfWithMemory","memory","usedJSHeapSize","totalJSHeapSize","jsHeapSizeLimit","usedMB","totalMB","limitMB","getMetrics","trackCustomMetric","attributes","metricKey","has","add","info","getEntries","clearCustomMetricsHistory","clear","getPerformanceScore","validMetrics","Object","values","length","scores","map","sum","score","exportReport","report","toISOString","webVitalsService","exports","_default","default"],"sources":["webVitalsService.ts"],"sourcesContent":["/**\r\n * Web Vitals Service - 2025 Best Practices\r\n *\r\n * Comprehensive Core Web Vitals tracking with modern features:\r\n * - LCP (Largest Contentful Paint)\r\n * - CLS (Cumulative Layout Shift)\r\n * - INP (Interaction to Next Paint) - replaced FID in 2024\r\n * - TTFB (Time to First Byte)\r\n * - FCP (First Contentful Paint)\r\n */\r\n\r\nimport { onCLS, onFCP, onINP, onLCP, onTTFB, type Metric } from 'web-vitals';\r\nimport { initWebVitals } from '../perf/performanceMetrics';\r\nimport { logger } from '../utils/logger';\r\n\r\ninterface WebVitalsMetrics {\r\n  lcp: number | null;\r\n  cls: number | null;\r\n  inp: number | null;\r\n  ttfb: number | null;\r\n  fcp: number | null;\r\n}\r\n\r\ninterface PerformanceEntry {\r\n  name: string;\r\n  value: number;\r\n  rating: 'good' | 'needs-improvement' | 'poor';\r\n  timestamp: number;\r\n  url: string;\r\n  userAgent: string;\r\n}\r\n\r\nclass WebVitalsService {\r\n  private metrics: WebVitalsMetrics = {\r\n    lcp: null,\r\n    cls: null,\r\n    inp: null,\r\n    ttfb: null,\r\n    fcp: null,\r\n  };\r\n\r\n  private entries: PerformanceEntry[] = [];\r\n  private lcpLogged: boolean = false;\r\n  \r\n  // Idempotency guard for custom metrics\r\n  private emittedCustomMetrics: Set<string> = new Set();\r\n\r\n  private getRating(name: string, value: number): 'good' | 'needs-improvement' | 'poor' {\r\n    const thresholds = {\r\n      lcp: { good: 2500, poor: 4000 },\r\n      cls: { good: 0.1, poor: 0.25 },\r\n      inp: { good: 200, poor: 500 },\r\n      ttfb: { good: 800, poor: 1800 },\r\n      fcp: { good: 1800, poor: 3000 },\r\n    };\r\n\r\n    const threshold = thresholds[name as keyof typeof thresholds];\r\n    if (!threshold) return 'good';\r\n\r\n    if (value <= threshold.good) return 'good';\r\n    if (value <= threshold.poor) return 'needs-improvement';\r\n    return 'poor';\r\n  }\r\n\r\n  private logMetric(metric: Metric): void {\r\n    // Skip LCP logging if already logged once\r\n    if (metric.name === 'LCP' && this.lcpLogged) {\r\n      return;\r\n    }\r\n\r\n    const entry: PerformanceEntry = {\r\n      name: metric.name,\r\n      value: metric.value,\r\n      rating: this.getRating(metric.name, metric.value),\r\n      timestamp: Date.now(),\r\n      url: window.location.href,\r\n      userAgent: navigator.userAgent,\r\n    };\r\n\r\n    this.entries.push(entry);\r\n    this.metrics[metric.name as keyof WebVitalsMetrics] = metric.value;\r\n\r\n    // Mark LCP as logged\r\n    if (metric.name === 'LCP') {\r\n      this.lcpLogged = true;\r\n    }\r\n\r\n    // Log to console in development\r\n    if (process.env.NODE_ENV === 'development') {\r\n      // eslint-disable-next-line no-console\r\n      console.log(`[WebVitals] ${metric.name}:`, {\r\n        value: metric.value,\r\n        rating: entry.rating,\r\n        threshold: this.getThresholdInfo(metric.name),\r\n      });\r\n    }\r\n\r\n    // Send to analytics in production\r\n    if (process.env.NODE_ENV === 'production') {\r\n      this.sendToAnalytics(entry);\r\n    }\r\n  }\r\n\r\n  private getThresholdInfo(name: string) {\r\n    const thresholds = {\r\n      lcp: { good: '≤2.5s', poor: '>4s', unit: 'ms' },\r\n      cls: { good: '≤0.1', poor: '>0.25', unit: '' },\r\n      inp: { good: '≤200ms', poor: '>500ms', unit: 'ms' },\r\n      ttfb: { good: '≤800ms', poor: '>1.8s', unit: 'ms' },\r\n      fcp: { good: '≤1.8s', poor: '>3s', unit: 'ms' },\r\n    };\r\n    return thresholds[name as keyof typeof thresholds];\r\n  }\r\n\r\n  private async sendToAnalytics(entry: PerformanceEntry): Promise<void> {\r\n    try {\r\n      // Send to your analytics service\r\n      const response = await fetch('/api/analytics/vitals', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(entry),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        logger.warn('Failed to send Web Vitals data to analytics', { status: response.status }, 'WebVitals');\r\n      } else {\r\n        logger.debug('Sent Web Vitals metric', { name: entry.name, value: entry.value }, 'WebVitals');\r\n      }\r\n    } catch (error) {\r\n      logger.warn('Error sending Web Vitals data', { error }, 'WebVitals');\r\n    }\r\n  }\r\n\r\n  public init(): void {\r\n    if (typeof window === 'undefined') return;\r\n    // Use unified initialization (idempotent). If already initialized elsewhere, we only\r\n    // attach custom metrics. Otherwise we route metrics through our logMetric method.\r\n    const firstInit = initWebVitals({\r\n      onMetric: (m) => {\r\n        // Map unified metric to our structure where applicable\r\n        // Only log known core metrics into internal storage\r\n        if (['LCP', 'CLS', 'INP', 'TTFB', 'FCP'].includes(m.name)) {\r\n          const rating = ((): 'good' | 'needs-improvement' | 'poor' => {\r\n            if (m.rating === 'good' || m.rating === 'needs-improvement' || m.rating === 'poor') return m.rating;\r\n            // Fallback classification based on value thresholds similar to getRating\r\n            switch (m.name) {\r\n              case 'LCP':\r\n                return m.value <= 2500 ? 'good' : m.value <= 4000 ? 'needs-improvement' : 'poor';\r\n              case 'CLS':\r\n                return m.value <= 0.1 ? 'good' : m.value <= 0.25 ? 'needs-improvement' : 'poor';\r\n              case 'INP':\r\n                return m.value <= 200 ? 'good' : m.value <= 500 ? 'needs-improvement' : 'poor';\r\n              case 'TTFB':\r\n                return m.value <= 800 ? 'good' : m.value <= 1800 ? 'needs-improvement' : 'poor';\r\n              case 'FCP':\r\n                return m.value <= 1800 ? 'good' : m.value <= 3000 ? 'needs-improvement' : 'poor';\r\n              default:\r\n                return 'good';\r\n            }\r\n          })();\r\n          const minimalMetric: Metric = {\r\n            name: m.name as Metric['name'],\r\n            value: m.value,\r\n            rating,\r\n            delta: m.delta || 0,\r\n            id: m.id || m.name,\r\n            // Provide required but unused fields with safe defaults\r\n            entries: [],\r\n            navigationType: 'navigate',\r\n          };\r\n          this.logMetric(minimalMetric);\r\n        }\r\n      },\r\n      includeNavigationMetrics: false,\r\n    });\r\n\r\n    // If this was not the first init, we skip directly registering listeners to avoid duplicates\r\n    if (firstInit) {\r\n      // We already registered via initWebVitals through the callback provided above\r\n    } else {\r\n      // Fallback: ensure metrics still flow if unified init occurred before service creation\r\n      onLCP((metric) => this.logMetric(metric));\r\n      onCLS(this.logMetric.bind(this));\r\n      onINP(this.logMetric.bind(this));\r\n      onTTFB(this.logMetric.bind(this));\r\n      onFCP(this.logMetric.bind(this));\r\n    }\r\n\r\n    this.trackCustomMetrics();\r\n  }\r\n\r\n  private trackCustomMetrics(): void {\r\n    // Track total load time using modern Navigation Timing API\r\n    if ('performance' in window && 'getEntriesByType' in window.performance) {\r\n      window.addEventListener('load', () => {\r\n        try {\r\n          const start = performance.getEntriesByType(\"navigation\")[0] as PerformanceNavigationTiming;\r\n          const totalLoadTime = Math.round(start.duration);\r\n          \r\n          if (totalLoadTime > 0) {\r\n            // eslint-disable-next-line no-console\r\n            console.log('[Performance] Total Load Time:', `${totalLoadTime}ms`);\r\n          }\r\n        } catch (error) {\r\n          // eslint-disable-next-line no-console\r\n          console.warn('[Performance] Could not calculate total load time:', error);\r\n        }\r\n\r\n        // Track JavaScript bundle size\r\n        const resources = performance.getEntriesByType('resource') as PerformanceResourceTiming[];\r\n        const jsResources = resources.filter(\r\n          resource => resource.name.includes('.js') && !resource.name.includes('node_modules')\r\n        );\r\n\r\n        const totalJSSize = jsResources.reduce((total, resource) => {\r\n          return total + (resource.transferSize || 0);\r\n        }, 0);\r\n\r\n        // eslint-disable-next-line no-console\r\n        console.log('[Performance] Total JS Bundle Size:', `${(totalJSSize / 1024).toFixed(2)} KB`);\r\n      });\r\n    }\r\n\r\n    // Track memory usage if available\r\n    if ('memory' in performance) {\r\n      const perfWithMemory = performance as Performance & { memory?: { usedJSHeapSize: number; totalJSHeapSize: number; jsHeapSizeLimit: number } };\r\n      if (perfWithMemory.memory) {\r\n        const { usedJSHeapSize, totalJSHeapSize, jsHeapSizeLimit } = perfWithMemory.memory;\r\n        logger.debug(\r\n          'Memory Usage',\r\n          {\r\n            usedMB: +(usedJSHeapSize / 1024 / 1024).toFixed(2),\r\n            totalMB: +(totalJSHeapSize / 1024 / 1024).toFixed(2),\r\n            limitMB: +(jsHeapSizeLimit / 1024 / 1024).toFixed(2),\r\n          },\r\n          'WebVitals'\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  public getMetrics(): WebVitalsMetrics {\r\n    return { ...this.metrics };\r\n  }\r\n\r\n  /**\r\n   * Track custom metrics for additional insights with idempotency protection\r\n   */\r\n  public trackCustomMetric(name: string, value: number, attributes?: Record<string, string>): void {\r\n    // Idempotency guard: prevent duplicate emissions of the same custom metric\r\n    const metricKey = attributes ? `${name}:${JSON.stringify(attributes)}` : name;\r\n    \r\n    if (this.emittedCustomMetrics.has(metricKey)) {\r\n      if (process.env.NODE_ENV === 'development') {\r\n        // eslint-disable-next-line no-console\r\n        console.log(`[WebVitals] Skipping duplicate custom metric: ${name}`, { attributes });\r\n      }\r\n      return;\r\n    }\r\n    \r\n    // Mark as emitted to prevent duplicates\r\n    this.emittedCustomMetrics.add(metricKey);\r\n    \r\n    logger.info(`Custom metric ${name}`, { value, attributes }, 'WebVitals');\r\n\r\n    // Store custom metric for later reporting\r\n    if (attributes) {\r\n      logger.debug(`Custom metric attributes`, attributes, 'WebVitals');\r\n    }\r\n  }\r\n\r\n  public getEntries(): PerformanceEntry[] {\r\n    return [...this.entries];\r\n  }\r\n\r\n  /**\r\n   * Clear custom metrics idempotency guard (for testing or manual reset)\r\n   */\r\n  public clearCustomMetricsHistory(): void {\r\n    this.emittedCustomMetrics.clear();\r\n    if (process.env.NODE_ENV === 'development') {\r\n      // eslint-disable-next-line no-console\r\n      console.log('[WebVitals] Custom metrics history cleared - duplicates will be allowed again');\r\n    }\r\n  }\r\n\r\n  public getPerformanceScore(): number {\r\n    const validMetrics = Object.values(this.metrics).filter(value => value !== null);\r\n    if (validMetrics.length === 0) return 0;\r\n\r\n    const scores = this.entries.map(entry => {\r\n      switch (entry.rating) {\r\n        case 'good':\r\n          return 100;\r\n        case 'needs-improvement':\r\n          return 50;\r\n        case 'poor':\r\n          return 0;\r\n        default:\r\n          return 0;\r\n      }\r\n    });\r\n\r\n    return scores.reduce((sum: number, score: number) => sum + score, 0) / scores.length;\r\n  }\r\n\r\n  public exportReport(): string {\r\n    const report = {\r\n      timestamp: new Date().toISOString(),\r\n      url: window.location.href,\r\n      userAgent: navigator.userAgent,\r\n      metrics: this.metrics,\r\n      entries: this.entries,\r\n      score: this.getPerformanceScore(),\r\n    };\r\n\r\n    return JSON.stringify(report, null, 2);\r\n  }\r\n}\r\n\r\n// Singleton instance\r\nexport const webVitalsService = new WebVitalsService();\r\n\r\n// Auto-initialize in browser\r\nif (typeof window !== 'undefined') {\r\n  webVitalsService.init();\r\n}\r\n\r\nexport default webVitalsService;\r\n"],"mappings":"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","ignoreList":[]}