243fd00b432a9dd67d57716cd7714b63
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SPORT_VALUES = exports.REQUIRED_PROP_FIELDS = exports.PICK_TYPE_VALUES = exports.OPTIONAL_PROP_FIELDS = exports.MIN_QUALITY_SCORE = exports.MIN_CONFIDENCE_SCORE = exports.MAX_QUALITY_SCORE = exports.MAX_CONFIDENCE_SCORE = void 0;
/**
 * Enhanced Data Validation and Normalization Types
 * Provides comprehensive type safety and data quality assurance
 */

// Enhanced interfaces for sports data

// Export validation constants
const SPORT_VALUES = exports.SPORT_VALUES = ['MLB', 'NBA', 'NFL', 'NHL', 'Soccer'];
const PICK_TYPE_VALUES = exports.PICK_TYPE_VALUES = ['prop', 'spread', 'total', 'moneyline'];
const MIN_CONFIDENCE_SCORE = exports.MIN_CONFIDENCE_SCORE = 0;
const MAX_CONFIDENCE_SCORE = exports.MAX_CONFIDENCE_SCORE = 100;
const MIN_QUALITY_SCORE = exports.MIN_QUALITY_SCORE = 0;
const MAX_QUALITY_SCORE = exports.MAX_QUALITY_SCORE = 100;
const REQUIRED_PROP_FIELDS = exports.REQUIRED_PROP_FIELDS = ['id', 'player', 'matchup', 'stat', 'line', 'confidence', 'sport'];
const OPTIONAL_PROP_FIELDS = exports.OPTIONAL_PROP_FIELDS = ['overOdds', 'underOdds', 'gameTime', 'pickType', 'dataSource'];
//# sourceMappingURL=data:application/json;charset=utf-8;base64,