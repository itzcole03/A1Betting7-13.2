3dddd063523dc5c1cd00772d79d9ceb6
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.PerformancePanel = void 0;
var _react = _interopRequireDefault(require("react"));
var _jsxRuntime = require("react/jsx-runtime");
/**
 * PerformancePanel Component - Displays system performance and connection health
 */
const PerformancePanel = ({
  connectionHealth,
  performanceMetrics = {}
}) => {
  const getStatusColor = status => {
    switch (status) {
      case 'healthy':
        return 'text-green-600 bg-green-100';
      case 'degraded':
        return 'text-yellow-600 bg-yellow-100';
      case 'error':
        return 'text-red-600 bg-red-100';
      default:
        return 'text-gray-600 bg-gray-100';
    }
  };
  const formatLatency = latency => {
    return latency > 0 ? `${latency.toFixed(0)}ms` : 'N/A';
  };
  return /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
    className: "performance-panel bg-white rounded-lg shadow-sm border p-4 mb-6",
    children: /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
      className: "flex items-center justify-between",
      children: [/*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
        className: "flex items-center space-x-4",
        children: [/*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
          className: "flex items-center space-x-2",
          children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("span", {
            className: "text-sm font-medium text-gray-700",
            children: "Status:"
          }), /*#__PURE__*/(0, _jsxRuntime.jsx)("span", {
            className: `px-2 py-1 rounded-full text-xs font-medium ${getStatusColor(connectionHealth.status)}`,
            children: connectionHealth.status.toUpperCase()
          })]
        }), /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
          className: "flex items-center space-x-2",
          children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("span", {
            className: "text-sm font-medium text-gray-700",
            children: "Latency:"
          }), /*#__PURE__*/(0, _jsxRuntime.jsx)("span", {
            className: "text-sm text-gray-600",
            children: formatLatency(connectionHealth.latency)
          })]
        })]
      }), Object.keys(performanceMetrics).length > 0 && /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
        className: "flex items-center space-x-4",
        children: Object.entries(performanceMetrics).map(([key, value]) => /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
          className: "flex items-center space-x-1",
          children: [/*#__PURE__*/(0, _jsxRuntime.jsxs)("span", {
            className: "text-xs text-gray-500",
            children: [key, ":"]
          }), /*#__PURE__*/(0, _jsxRuntime.jsx)("span", {
            className: "text-xs font-medium text-gray-700",
            children: typeof value === 'number' ? value.toFixed(1) : value
          })]
        }, key))
      }), /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
        className: "text-xs text-gray-500",
        children: ["Last check: ", connectionHealth.lastCheck.toLocaleTimeString()]
      })]
    })
  });
};
exports.PerformancePanel = PerformancePanel;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9qc3hSdW50aW1lIiwiUGVyZm9ybWFuY2VQYW5lbCIsImNvbm5lY3Rpb25IZWFsdGgiLCJwZXJmb3JtYW5jZU1ldHJpY3MiLCJnZXRTdGF0dXNDb2xvciIsInN0YXR1cyIsImZvcm1hdExhdGVuY3kiLCJsYXRlbmN5IiwidG9GaXhlZCIsImpzeCIsImNsYXNzTmFtZSIsImNoaWxkcmVuIiwianN4cyIsInRvVXBwZXJDYXNlIiwiT2JqZWN0Iiwia2V5cyIsImxlbmd0aCIsImVudHJpZXMiLCJtYXAiLCJrZXkiLCJ2YWx1ZSIsImxhc3RDaGVjayIsInRvTG9jYWxlVGltZVN0cmluZyIsImV4cG9ydHMiXSwic291cmNlcyI6WyJQZXJmb3JtYW5jZVBhbmVsLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xyXG5cclxuZXhwb3J0IGludGVyZmFjZSBQZXJmb3JtYW5jZVBhbmVsUHJvcHMge1xyXG4gIGNvbm5lY3Rpb25IZWFsdGg6IHtcclxuICAgIHN0YXR1czogJ2hlYWx0aHknIHwgJ2RlZ3JhZGVkJyB8ICdlcnJvcic7XHJcbiAgICBsYXRlbmN5OiBudW1iZXI7XHJcbiAgICBsYXN0Q2hlY2s6IERhdGU7XHJcbiAgfTtcclxuICBwZXJmb3JtYW5jZU1ldHJpY3M/OiB7XHJcbiAgICBba2V5OiBzdHJpbmddOiBudW1iZXI7XHJcbiAgfTtcclxufVxyXG5cclxuLyoqXHJcbiAqIFBlcmZvcm1hbmNlUGFuZWwgQ29tcG9uZW50IC0gRGlzcGxheXMgc3lzdGVtIHBlcmZvcm1hbmNlIGFuZCBjb25uZWN0aW9uIGhlYWx0aFxyXG4gKi9cclxuZXhwb3J0IGNvbnN0IFBlcmZvcm1hbmNlUGFuZWw6IFJlYWN0LkZDPFBlcmZvcm1hbmNlUGFuZWxQcm9wcz4gPSAoe1xyXG4gIGNvbm5lY3Rpb25IZWFsdGgsXHJcbiAgcGVyZm9ybWFuY2VNZXRyaWNzID0ge30sXHJcbn0pID0+IHtcclxuICBjb25zdCBnZXRTdGF0dXNDb2xvciA9IChzdGF0dXM6IHN0cmluZykgPT4ge1xyXG4gICAgc3dpdGNoIChzdGF0dXMpIHtcclxuICAgICAgY2FzZSAnaGVhbHRoeSc6XHJcbiAgICAgICAgcmV0dXJuICd0ZXh0LWdyZWVuLTYwMCBiZy1ncmVlbi0xMDAnO1xyXG4gICAgICBjYXNlICdkZWdyYWRlZCc6XHJcbiAgICAgICAgcmV0dXJuICd0ZXh0LXllbGxvdy02MDAgYmcteWVsbG93LTEwMCc7XHJcbiAgICAgIGNhc2UgJ2Vycm9yJzpcclxuICAgICAgICByZXR1cm4gJ3RleHQtcmVkLTYwMCBiZy1yZWQtMTAwJztcclxuICAgICAgZGVmYXVsdDpcclxuICAgICAgICByZXR1cm4gJ3RleHQtZ3JheS02MDAgYmctZ3JheS0xMDAnO1xyXG4gICAgfVxyXG4gIH07XHJcblxyXG4gIGNvbnN0IGZvcm1hdExhdGVuY3kgPSAobGF0ZW5jeTogbnVtYmVyKSA9PiB7XHJcbiAgICByZXR1cm4gbGF0ZW5jeSA+IDAgPyBgJHtsYXRlbmN5LnRvRml4ZWQoMCl9bXNgIDogJ04vQSc7XHJcbiAgfTtcclxuXHJcbiAgcmV0dXJuIChcclxuICAgIDxkaXYgY2xhc3NOYW1lPSdwZXJmb3JtYW5jZS1wYW5lbCBiZy13aGl0ZSByb3VuZGVkLWxnIHNoYWRvdy1zbSBib3JkZXIgcC00IG1iLTYnPlxyXG4gICAgICA8ZGl2IGNsYXNzTmFtZT0nZmxleCBpdGVtcy1jZW50ZXIganVzdGlmeS1iZXR3ZWVuJz5cclxuICAgICAgICB7LyogQ29ubmVjdGlvbiBTdGF0dXMgKi99XHJcbiAgICAgICAgPGRpdiBjbGFzc05hbWU9J2ZsZXggaXRlbXMtY2VudGVyIHNwYWNlLXgtNCc+XHJcbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0nZmxleCBpdGVtcy1jZW50ZXIgc3BhY2UteC0yJz5cclxuICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPSd0ZXh0LXNtIGZvbnQtbWVkaXVtIHRleHQtZ3JheS03MDAnPlN0YXR1czo8L3NwYW4+XHJcbiAgICAgICAgICAgIDxzcGFuXHJcbiAgICAgICAgICAgICAgY2xhc3NOYW1lPXtgcHgtMiBweS0xIHJvdW5kZWQtZnVsbCB0ZXh0LXhzIGZvbnQtbWVkaXVtICR7Z2V0U3RhdHVzQ29sb3IoXHJcbiAgICAgICAgICAgICAgICBjb25uZWN0aW9uSGVhbHRoLnN0YXR1c1xyXG4gICAgICAgICAgICAgICl9YH1cclxuICAgICAgICAgICAgPlxyXG4gICAgICAgICAgICAgIHtjb25uZWN0aW9uSGVhbHRoLnN0YXR1cy50b1VwcGVyQ2FzZSgpfVxyXG4gICAgICAgICAgICA8L3NwYW4+XHJcbiAgICAgICAgICA8L2Rpdj5cclxuXHJcbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0nZmxleCBpdGVtcy1jZW50ZXIgc3BhY2UteC0yJz5cclxuICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPSd0ZXh0LXNtIGZvbnQtbWVkaXVtIHRleHQtZ3JheS03MDAnPkxhdGVuY3k6PC9zcGFuPlxyXG4gICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9J3RleHQtc20gdGV4dC1ncmF5LTYwMCc+e2Zvcm1hdExhdGVuY3koY29ubmVjdGlvbkhlYWx0aC5sYXRlbmN5KX08L3NwYW4+XHJcbiAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICA8L2Rpdj5cclxuXHJcbiAgICAgICAgey8qIFBlcmZvcm1hbmNlIE1ldHJpY3MgKi99XHJcbiAgICAgICAge09iamVjdC5rZXlzKHBlcmZvcm1hbmNlTWV0cmljcykubGVuZ3RoID4gMCAmJiAoXHJcbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0nZmxleCBpdGVtcy1jZW50ZXIgc3BhY2UteC00Jz5cclxuICAgICAgICAgICAge09iamVjdC5lbnRyaWVzKHBlcmZvcm1hbmNlTWV0cmljcykubWFwKChba2V5LCB2YWx1ZV0pID0+IChcclxuICAgICAgICAgICAgICA8ZGl2IGtleT17a2V5fSBjbGFzc05hbWU9J2ZsZXggaXRlbXMtY2VudGVyIHNwYWNlLXgtMSc+XHJcbiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9J3RleHQteHMgdGV4dC1ncmF5LTUwMCc+e2tleX06PC9zcGFuPlxyXG4gICAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPSd0ZXh0LXhzIGZvbnQtbWVkaXVtIHRleHQtZ3JheS03MDAnPlxyXG4gICAgICAgICAgICAgICAgICB7dHlwZW9mIHZhbHVlID09PSAnbnVtYmVyJyA/IHZhbHVlLnRvRml4ZWQoMSkgOiB2YWx1ZX1cclxuICAgICAgICAgICAgICAgIDwvc3Bhbj5cclxuICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgKSl9XHJcbiAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICApfVxyXG5cclxuICAgICAgICB7LyogTGFzdCBDaGVjayBUaW1lICovfVxyXG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPSd0ZXh0LXhzIHRleHQtZ3JheS01MDAnPlxyXG4gICAgICAgICAgTGFzdCBjaGVjazoge2Nvbm5lY3Rpb25IZWFsdGgubGFzdENoZWNrLnRvTG9jYWxlVGltZVN0cmluZygpfVxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICA8L2Rpdj5cclxuICAgIDwvZGl2PlxyXG4gICk7XHJcbn07XHJcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBLElBQUFBLE1BQUEsR0FBQUMsc0JBQUEsQ0FBQUMsT0FBQTtBQUEwQixJQUFBQyxXQUFBLEdBQUFELE9BQUE7QUFhMUI7QUFDQTtBQUNBO0FBQ08sTUFBTUUsZ0JBQWlELEdBQUdBLENBQUM7RUFDaEVDLGdCQUFnQjtFQUNoQkMsa0JBQWtCLEdBQUcsQ0FBQztBQUN4QixDQUFDLEtBQUs7RUFDSixNQUFNQyxjQUFjLEdBQUlDLE1BQWMsSUFBSztJQUN6QyxRQUFRQSxNQUFNO01BQ1osS0FBSyxTQUFTO1FBQ1osT0FBTyw2QkFBNkI7TUFDdEMsS0FBSyxVQUFVO1FBQ2IsT0FBTywrQkFBK0I7TUFDeEMsS0FBSyxPQUFPO1FBQ1YsT0FBTyx5QkFB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